{
  "openapi": "3.0.2",
  "info": {
    "title": "TrackMage API",
    "version": "dev",
    "description": "TrackMage API"
  },
  "paths": {
    "\/billing\/chargebee\/create_session": {
      "post": {
        "tags": [
          "CreateChargebeeSessionRequest"
        ],
        "operationId": "postCreateChargebeeSessionRequestCollection",
        "summary": "Creates a CreateChargebeeSessionRequest resource.",
        "responses": {
          "201": {
            "description": "CreateChargebeeSessionRequest resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/CreateChargebeeSessionRequest:021df46f90923169d1fcfaa691e38d7b:jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/CreateChargebeeSessionRequest:021df46f90923169d1fcfaa691e38d7b"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/CreateChargebeeSessionRequest:021df46f90923169d1fcfaa691e38d7b"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/CreateChargebeeSessionRequest:021df46f90923169d1fcfaa691e38d7b"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/CreateChargebeeSessionRequest:jsonld-setCreateChargebeeSessionRequest"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/CreateChargebeeSessionRequest-setCreateChargebeeSessionRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/CreateChargebeeSessionRequest-setCreateChargebeeSessionRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/CreateChargebeeSessionRequest-setCreateChargebeeSessionRequest"
              }
            }
          },
          "description": "The new CreateChargebeeSessionRequest resource"
        }
      }
    },
    "\/billing\/chargebee\/created_hosted_page_checkout": {
      "post": {
        "tags": [
          "CreateChargebeeHostedPageCheckoutRequest"
        ],
        "operationId": "postCreateChargebeeHostedPageCheckoutRequestCollection",
        "summary": "Creates a CreateChargebeeHostedPageCheckoutRequest resource.",
        "responses": {
          "201": {
            "description": "CreateChargebeeHostedPageCheckoutRequest resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/CreateChargebeeHostedPageCheckoutRequest:124f48ea487b59c0cc7ee060938f0abc:jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/CreateChargebeeHostedPageCheckoutRequest:124f48ea487b59c0cc7ee060938f0abc"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/CreateChargebeeHostedPageCheckoutRequest:124f48ea487b59c0cc7ee060938f0abc"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/CreateChargebeeHostedPageCheckoutRequest:124f48ea487b59c0cc7ee060938f0abc"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/CreateChargebeeHostedPageCheckoutRequest:jsonld-setCreateChargebeeHostedPageCheckoutRequest"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/CreateChargebeeHostedPageCheckoutRequest-setCreateChargebeeHostedPageCheckoutRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/CreateChargebeeHostedPageCheckoutRequest-setCreateChargebeeHostedPageCheckoutRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/CreateChargebeeHostedPageCheckoutRequest-setCreateChargebeeHostedPageCheckoutRequest"
              }
            }
          },
          "description": "The new CreateChargebeeHostedPageCheckoutRequest resource"
        }
      }
    },
    "\/billing\/chargebee\/downgrade_subscription": {
      "post": {
        "tags": [
          "DowngradeChargebeeSubscriptionRequest"
        ],
        "operationId": "postDowngradeChargebeeSubscriptionRequestCollection",
        "summary": "Creates a DowngradeChargebeeSubscriptionRequest resource.",
        "responses": {
          "200": {
            "description": "DowngradeChargebeeSubscriptionRequest resource created"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/DowngradeChargebeeSubscriptionRequest:jsonld-setDowngradeChargebeeSubscriptionRequest"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/DowngradeChargebeeSubscriptionRequest-setDowngradeChargebeeSubscriptionRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/DowngradeChargebeeSubscriptionRequest-setDowngradeChargebeeSubscriptionRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/DowngradeChargebeeSubscriptionRequest-setDowngradeChargebeeSubscriptionRequest"
              }
            }
          },
          "description": "The new DowngradeChargebeeSubscriptionRequest resource"
        }
      }
    },
    "\/billing\/chargebee\/get_subscription_estimate": {
      "post": {
        "tags": [
          "GetChargebeeSubscriptionEstimateRequest"
        ],
        "operationId": "postGetChargebeeSubscriptionEstimateRequestCollection",
        "summary": "Creates a GetChargebeeSubscriptionEstimateRequest resource.",
        "responses": {
          "201": {
            "description": "GetChargebeeSubscriptionEstimateRequest resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/GetChargebeeSubscriptionEstimateRequest:71886dd3f8878e1013a394d9f84dd33b:jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/GetChargebeeSubscriptionEstimateRequest:71886dd3f8878e1013a394d9f84dd33b"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/GetChargebeeSubscriptionEstimateRequest:71886dd3f8878e1013a394d9f84dd33b"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/GetChargebeeSubscriptionEstimateRequest:71886dd3f8878e1013a394d9f84dd33b"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/GetChargebeeSubscriptionEstimateRequest:jsonld-setGetChargebeeSubscriptionEstimateRequest"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/GetChargebeeSubscriptionEstimateRequest-setGetChargebeeSubscriptionEstimateRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/GetChargebeeSubscriptionEstimateRequest-setGetChargebeeSubscriptionEstimateRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/GetChargebeeSubscriptionEstimateRequest-setGetChargebeeSubscriptionEstimateRequest"
              }
            }
          },
          "description": "The new GetChargebeeSubscriptionEstimateRequest resource"
        }
      }
    },
    "\/billing\/chargebee\/webhook": {
      "post": {
        "tags": [
          "HandleChargebeeWebhookRequest"
        ],
        "operationId": "postHandleChargebeeWebhookRequestCollection",
        "summary": "Creates a HandleChargebeeWebhookRequest resource.",
        "responses": {
          "202": {
            "description": "HandleChargebeeWebhookRequest resource created"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/HandleChargebeeWebhookRequest:jsonld"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/HandleChargebeeWebhookRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/HandleChargebeeWebhookRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/HandleChargebeeWebhookRequest"
              }
            }
          },
          "description": "The new HandleChargebeeWebhookRequest resource"
        }
      }
    },
    "\/billing\/shopify\/checkout_subscription": {
      "post": {
        "tags": [
          "CheckoutShopifySubscriptionRequest"
        ],
        "operationId": "postCheckoutShopifySubscriptionRequestCollection",
        "summary": "Creates a CheckoutShopifySubscriptionRequest resource.",
        "responses": {
          "200": {
            "description": "CheckoutShopifySubscriptionRequest resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/CheckoutShopifySubscriptionRequest:bcbd8da61b5abb533cfb687003d6d4ac:jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/CheckoutShopifySubscriptionRequest:bcbd8da61b5abb533cfb687003d6d4ac"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/CheckoutShopifySubscriptionRequest:bcbd8da61b5abb533cfb687003d6d4ac"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/CheckoutShopifySubscriptionRequest:bcbd8da61b5abb533cfb687003d6d4ac"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/CheckoutShopifySubscriptionRequest:jsonld-setCheckoutShopifySubscriptionRequest"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/CheckoutShopifySubscriptionRequest-setCheckoutShopifySubscriptionRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/CheckoutShopifySubscriptionRequest-setCheckoutShopifySubscriptionRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/CheckoutShopifySubscriptionRequest-setCheckoutShopifySubscriptionRequest"
              }
            }
          },
          "description": "The new CheckoutShopifySubscriptionRequest resource"
        }
      }
    },
    "\/change_status_batch": {
      "post": {
        "tags": [
          "EntityType"
        ],
        "operationId": "change_status_batchEntityTypeCollection",
        "summary": "Creates a EntityType resource.",
        "responses": {
          "200": {
            "description": "EntityType resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EntityType:jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EntityType"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EntityType"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EntityType"
                }
              }
            },
            "links": {
              "GetEntityTypeItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getEntityTypeItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/entity_types\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/EntityType:fa101a5f3e9cea55760e926a015950be:jsonld-setChangeStatusBatchRequest"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/EntityType:fa101a5f3e9cea55760e926a015950be-setChangeStatusBatchRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/EntityType:fa101a5f3e9cea55760e926a015950be-setChangeStatusBatchRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/EntityType:fa101a5f3e9cea55760e926a015950be-setChangeStatusBatchRequest"
              }
            }
          },
          "description": "The new EntityType resource"
        }
      }
    },
    "\/check_tracking_numbers": {
      "post": {
        "tags": [
          "CheckTrackingStatusesRequest"
        ],
        "operationId": "postCheckTrackingStatusesRequestCollection",
        "summary": "Creates a CheckTrackingStatusesRequest resource.",
        "responses": {
          "200": {
            "description": "CheckTrackingStatusesRequest resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/CheckTrackingStatusesRequest:jsonld-CheckTrackingStatusesResponse_getShipment"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/CheckTrackingStatusesRequest-CheckTrackingStatusesResponse_getShipment"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/CheckTrackingStatusesRequest-CheckTrackingStatusesResponse_getShipment"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/CheckTrackingStatusesRequest-CheckTrackingStatusesResponse_getShipment"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/CheckTrackingStatusesRequest:jsonld-CheckTrackingStatusesRequest_setTrackingForCheck"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/CheckTrackingStatusesRequest-CheckTrackingStatusesRequest_setTrackingForCheck"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/CheckTrackingStatusesRequest-CheckTrackingStatusesRequest_setTrackingForCheck"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/CheckTrackingStatusesRequest-CheckTrackingStatusesRequest_setTrackingForCheck"
              }
            }
          },
          "description": "The new CheckTrackingStatusesRequest resource"
        }
      }
    },
    "\/checkouts": {
      "get": {
        "tags": [
          "Checkout"
        ],
        "operationId": "getCheckoutCollection",
        "summary": "Retrieves the collection of Checkout resources.",
        "responses": {
          "200": {
            "description": "Checkout collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Checkout:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Checkout-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Checkout-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Checkout-Get"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Checkout"
        ],
        "operationId": "postCheckoutCollection",
        "summary": "Creates a Checkout resource.",
        "responses": {
          "201": {
            "description": "Checkout resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Checkout:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Checkout-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Checkout-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Checkout-Get"
                }
              }
            },
            "links": {
              "GetCheckoutItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getCheckoutItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/checkouts\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Checkout:jsonld-Post"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Checkout-Post"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Checkout-Post"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Checkout-Post"
              }
            }
          },
          "description": "The new Checkout resource"
        }
      }
    },
    "\/checkouts\/init": {
      "post": {
        "tags": [
          "Checkout"
        ],
        "operationId": "post_initiateCheckoutCollection",
        "summary": "Creates a Checkout resource.",
        "responses": {
          "201": {
            "description": "Checkout resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Checkout:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Checkout-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Checkout-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Checkout-Get"
                }
              }
            },
            "links": {
              "GetCheckoutItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getCheckoutItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/checkouts\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Checkout:jsonld-postCheckout"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Checkout-postCheckout"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Checkout-postCheckout"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Checkout-postCheckout"
              }
            }
          },
          "description": "The new Checkout resource"
        }
      }
    },
    "\/checkouts\/{id}": {
      "get": {
        "tags": [
          "Checkout"
        ],
        "operationId": "getCheckoutItem",
        "summary": "Retrieves a Checkout resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Checkout resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Checkout:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Checkout-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Checkout-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Checkout-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "\/checkouts\/{id}\/step_address": {
      "put": {
        "tags": [
          "Checkout"
        ],
        "operationId": "put_addressCheckoutItem",
        "summary": "Replaces the Checkout resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Checkout resource updated",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Checkout:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Checkout-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Checkout-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Checkout-Get"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Checkout:jsonld-putCheckoutAddress"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Checkout-putCheckoutAddress"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Checkout-putCheckoutAddress"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Checkout-putCheckoutAddress"
              }
            }
          },
          "description": "The updated Checkout resource"
        }
      }
    },
    "\/checkouts\/{id}\/step_email": {
      "put": {
        "tags": [
          "Checkout"
        ],
        "operationId": "put_emailCheckoutItem",
        "summary": "Replaces the Checkout resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Checkout resource updated",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Checkout:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Checkout-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Checkout-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Checkout-Get"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Checkout:jsonld-putCheckoutEmail"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Checkout-putCheckoutEmail"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Checkout-putCheckoutEmail"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Checkout-putCheckoutEmail"
              }
            }
          },
          "description": "The updated Checkout resource"
        }
      }
    },
    "\/countries": {
      "get": {
        "tags": [
          "Country"
        ],
        "operationId": "getCountryCollection",
        "summary": "Retrieves the collection of Country resources.",
        "responses": {
          "200": {
            "description": "Country collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Country:jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Country"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Country"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Country"
                  }
                }
              }
            }
          }
        },
        "parameters": []
      }
    },
    "\/countries\/{id}": {
      "get": {
        "tags": [
          "Country"
        ],
        "operationId": "getCountryItem",
        "summary": "Retrieves a Country resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Country resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Country:jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Country"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Country"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Country"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "\/countries\/{id}\/states": {
      "get": {
        "tags": [
          "State",
          "Country"
        ],
        "operationId": "api_countries_states_get_subresource",
        "summary": "Retrieves the collection of State resources.",
        "responses": {
          "200": {
            "description": "State collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/State:jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/State"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/State"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/State"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "\/credentials": {
      "get": {
        "tags": [
          "Credentials"
        ],
        "operationId": "getCredentialsCollection",
        "summary": "Retrieves the collection of Credentials resources.",
        "responses": {
          "200": {
            "description": "Credentials collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Credentials:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Credentials-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Credentials-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Credentials-Get"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[updatedAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onlyVisibleTypes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Credentials"
        ],
        "operationId": "postCredentialsCollection",
        "summary": "Creates a Credentials resource.",
        "responses": {
          "201": {
            "description": "Credentials resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Credentials:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Credentials-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Credentials-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Credentials-Get"
                }
              }
            },
            "links": {
              "GetCredentialsItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getCredentialsItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/credentials\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Credentials:jsonld-Post"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Credentials-Post"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Credentials-Post"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Credentials-Post"
              }
            }
          },
          "description": "The new Credentials resource"
        }
      }
    },
    "\/credentials\/{id}": {
      "get": {
        "tags": [
          "Credentials"
        ],
        "operationId": "getCredentialsItem",
        "summary": "Retrieves a Credentials resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Credentials resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Credentials:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Credentials-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Credentials-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Credentials-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "put": {
        "tags": [
          "Credentials"
        ],
        "operationId": "putCredentialsItem",
        "summary": "Replaces the Credentials resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Credentials resource updated",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Credentials:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Credentials-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Credentials-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Credentials-Get"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Credentials:jsonld-Put"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Credentials-Put"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Credentials-Put"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Credentials-Put"
              }
            }
          },
          "description": "The updated Credentials resource"
        }
      },
      "delete": {
        "tags": [
          "Credentials"
        ],
        "operationId": "deleteCredentialsItem",
        "summary": "Removes the Credentials resource.",
        "responses": {
          "204": {
            "description": "Credentials resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "\/delete_records_batch": {
      "post": {
        "tags": [
          "EntityType"
        ],
        "operationId": "delete_records_batchEntityTypeCollection",
        "summary": "Creates a EntityType resource.",
        "responses": {
          "200": {
            "description": "EntityType resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EntityType:jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EntityType"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EntityType"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EntityType"
                }
              }
            },
            "links": {
              "GetEntityTypeItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getEntityTypeItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/entity_types\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/EntityType:9eccbdc57c4c56bc5d7b3bf086123b25:jsonld-setDeleteRecordsBatchRequest"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/EntityType:9eccbdc57c4c56bc5d7b3bf086123b25-setDeleteRecordsBatchRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/EntityType:9eccbdc57c4c56bc5d7b3bf086123b25-setDeleteRecordsBatchRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/EntityType:9eccbdc57c4c56bc5d7b3bf086123b25-setDeleteRecordsBatchRequest"
              }
            }
          },
          "description": "The new EntityType resource"
        }
      }
    },
    "\/domain\/verify": {
      "post": {
        "tags": [
          "VerifyDomainRequest"
        ],
        "operationId": "postVerifyDomainRequestCollection",
        "summary": "Creates a VerifyDomainRequest resource.",
        "responses": {
          "200": {
            "description": "VerifyDomainRequest resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/VerifyDomainRequest:dddf337f2968b9a0d8945a92c3650a2f:jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/VerifyDomainRequest:dddf337f2968b9a0d8945a92c3650a2f"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/VerifyDomainRequest:dddf337f2968b9a0d8945a92c3650a2f"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/VerifyDomainRequest:dddf337f2968b9a0d8945a92c3650a2f"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/VerifyDomainRequest:jsonld"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/VerifyDomainRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/VerifyDomainRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/VerifyDomainRequest"
              }
            }
          },
          "description": "The new VerifyDomainRequest resource"
        }
      }
    },
    "\/email_notifications": {
      "get": {
        "tags": [
          "EmailNotification"
        ],
        "operationId": "getEmailNotificationCollection",
        "summary": "Retrieves the collection of EmailNotification resources.",
        "responses": {
          "200": {
            "description": "EmailNotification collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/EmailNotification:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/EmailNotification-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/EmailNotification-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/EmailNotification-Get"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "event",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastEmailSentAt[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastEmailSentAt[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastEmailSentAt[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastEmailSentAt[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      },
      "post": {
        "tags": [
          "EmailNotification"
        ],
        "operationId": "postEmailNotificationCollection",
        "summary": "Creates a EmailNotification resource.",
        "responses": {
          "201": {
            "description": "EmailNotification resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EmailNotification:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EmailNotification-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EmailNotification-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EmailNotification-Get"
                }
              }
            },
            "links": {
              "GetEmailNotificationItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getEmailNotificationItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/email_notifications\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/EmailNotification:jsonld-Post"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/EmailNotification-Post"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/EmailNotification-Post"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/EmailNotification-Post"
              }
            }
          },
          "description": "The new EmailNotification resource"
        }
      }
    },
    "\/email_notifications\/preview": {
      "post": {
        "tags": [
          "EmailNotification"
        ],
        "operationId": "previewEmailNotificationCollection",
        "summary": "Creates a EmailNotification resource.",
        "responses": {
          "200": {
            "description": "EmailNotification resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EmailNotification:741333386718d26d611f8d0924322290:jsonld-getEmailNotificationPreviewResponse"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EmailNotification:741333386718d26d611f8d0924322290-getEmailNotificationPreviewResponse"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EmailNotification:741333386718d26d611f8d0924322290-getEmailNotificationPreviewResponse"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EmailNotification:741333386718d26d611f8d0924322290-getEmailNotificationPreviewResponse"
                }
              }
            },
            "links": {
              "GetEmailNotificationItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getEmailNotificationItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/email_notifications\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/EmailNotification:046507ce90af73065cff7d7f158cfea6:jsonld-setEmailNotificationPreviewRequest"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/EmailNotification:046507ce90af73065cff7d7f158cfea6-setEmailNotificationPreviewRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/EmailNotification:046507ce90af73065cff7d7f158cfea6-setEmailNotificationPreviewRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/EmailNotification:046507ce90af73065cff7d7f158cfea6-setEmailNotificationPreviewRequest"
              }
            }
          },
          "description": "The new EmailNotification resource"
        }
      }
    },
    "\/email_notifications\/reset_defaults": {
      "post": {
        "tags": [
          "EmailNotification"
        ],
        "operationId": "reset_defaultsEmailNotificationCollection",
        "summary": "Creates a EmailNotification resource.",
        "responses": {
          "200": {
            "description": "EmailNotification resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EmailNotification:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EmailNotification-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EmailNotification-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EmailNotification-Get"
                }
              }
            },
            "links": {
              "GetEmailNotificationItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getEmailNotificationItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/email_notifications\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/EmailNotification:c22e28dbe6183fe77232ad1869c25525:jsonld-setEmailNotificationResetDefaultsRequest"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/EmailNotification:c22e28dbe6183fe77232ad1869c25525-setEmailNotificationResetDefaultsRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/EmailNotification:c22e28dbe6183fe77232ad1869c25525-setEmailNotificationResetDefaultsRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/EmailNotification:c22e28dbe6183fe77232ad1869c25525-setEmailNotificationResetDefaultsRequest"
              }
            }
          },
          "description": "The new EmailNotification resource"
        }
      }
    },
    "\/email_notifications\/send_test": {
      "post": {
        "tags": [
          "EmailNotification"
        ],
        "operationId": "send_testEmailNotificationCollection",
        "summary": "Creates a EmailNotification resource.",
        "responses": {
          "200": {
            "description": "EmailNotification resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EmailNotification:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EmailNotification-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EmailNotification-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EmailNotification-Get"
                }
              }
            },
            "links": {
              "GetEmailNotificationItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getEmailNotificationItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/email_notifications\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/EmailNotification:3075af8f980bc1380b4aa0726f72ced9:jsonld-setEmailNotificationSendTestRequest"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/EmailNotification:3075af8f980bc1380b4aa0726f72ced9-setEmailNotificationSendTestRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/EmailNotification:3075af8f980bc1380b4aa0726f72ced9-setEmailNotificationSendTestRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/EmailNotification:3075af8f980bc1380b4aa0726f72ced9-setEmailNotificationSendTestRequest"
              }
            }
          },
          "description": "The new EmailNotification resource"
        }
      }
    },
    "\/email_notifications\/{id}": {
      "get": {
        "tags": [
          "EmailNotification"
        ],
        "operationId": "getEmailNotificationItem",
        "summary": "Retrieves a EmailNotification resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EmailNotification resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EmailNotification:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EmailNotification-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EmailNotification-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EmailNotification-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "put": {
        "tags": [
          "EmailNotification"
        ],
        "operationId": "putEmailNotificationItem",
        "summary": "Replaces the EmailNotification resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EmailNotification resource updated",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EmailNotification:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EmailNotification-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EmailNotification-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EmailNotification-Get"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/EmailNotification:jsonld-Put"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/EmailNotification-Put"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/EmailNotification-Put"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/EmailNotification-Put"
              }
            }
          },
          "description": "The updated EmailNotification resource"
        }
      },
      "delete": {
        "tags": [
          "EmailNotification"
        ],
        "operationId": "deleteEmailNotificationItem",
        "summary": "Removes the EmailNotification resource.",
        "responses": {
          "204": {
            "description": "EmailNotification resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "\/entity_types": {
      "get": {
        "tags": [
          "EntityType"
        ],
        "operationId": "getEntityTypeCollection",
        "summary": "Retrieves the collection of EntityType resources.",
        "responses": {
          "200": {
            "description": "EntityType collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/EntityType:jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/EntityType"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/EntityType"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/EntityType"
                  }
                }
              }
            }
          }
        },
        "parameters": []
      }
    },
    "\/entity_types\/{id}": {
      "get": {
        "tags": [
          "EntityType"
        ],
        "operationId": "getEntityTypeItem",
        "summary": "Retrieves a EntityType resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EntityType resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EntityType:jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EntityType"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EntityType"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/EntityType"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "\/fields": {
      "get": {
        "tags": [
          "Field"
        ],
        "operationId": "getFieldCollection",
        "summary": "Retrieves the collection of Field resources.",
        "responses": {
          "200": {
            "description": "Field collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Field:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Field-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Field-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Field-Get"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "workspace.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspace.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "groups[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          }
        ]
      },
      "post": {
        "tags": [
          "Field"
        ],
        "operationId": "postFieldCollection",
        "summary": "Creates a Field resource.",
        "responses": {
          "201": {
            "description": "Field resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Field:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Field-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Field-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Field-Get"
                }
              }
            },
            "links": {
              "GetFieldItem": {
                "parameters": {
                  "code": "$response.body#\/code"
                },
                "operationId": "getFieldItem",
                "description": "The `code` value returned in the response can be used as the `code` parameter in `GET \/fields\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Field:jsonld-Post"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Field-Post"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Field-Post"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Field-Post"
              }
            }
          },
          "description": "The new Field resource"
        }
      }
    },
    "\/fields\/{id}": {
      "get": {
        "tags": [
          "Field"
        ],
        "operationId": "getFieldItem",
        "summary": "Retrieves a Field resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Field resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Field:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Field-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Field-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Field-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "put": {
        "tags": [
          "Field"
        ],
        "operationId": "putFieldItem",
        "summary": "Replaces the Field resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Field resource updated",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Field:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Field-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Field-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Field-Get"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Field:jsonld-Put"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Field-Put"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Field-Put"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Field-Put"
              }
            }
          },
          "description": "The updated Field resource"
        }
      },
      "delete": {
        "tags": [
          "Field"
        ],
        "operationId": "deleteFieldItem",
        "summary": "Removes the Field resource.",
        "responses": {
          "204": {
            "description": "Field resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "\/fields_layouts": {
      "get": {
        "tags": [
          "FieldsLayout"
        ],
        "operationId": "getFieldsLayoutCollection",
        "summary": "Retrieves the collection of FieldsLayout resources.",
        "responses": {
          "200": {
            "description": "FieldsLayout collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/FieldsLayout:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/FieldsLayout-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/FieldsLayout-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/FieldsLayout-Get"
                  }
                }
              }
            }
          }
        },
        "parameters": []
      },
      "post": {
        "tags": [
          "FieldsLayout"
        ],
        "operationId": "postFieldsLayoutCollection",
        "summary": "Creates a FieldsLayout resource.",
        "responses": {
          "201": {
            "description": "FieldsLayout resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/FieldsLayout:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/FieldsLayout-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/FieldsLayout-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/FieldsLayout-Get"
                }
              }
            },
            "links": {
              "GetFieldsLayoutItem": {
                "parameters": {
                  "code": "$response.body#\/code"
                },
                "operationId": "getFieldsLayoutItem",
                "description": "The `code` value returned in the response can be used as the `code` parameter in `GET \/fields_layouts\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/FieldsLayout:jsonld-Post"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/FieldsLayout-Post"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/FieldsLayout-Post"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/FieldsLayout-Post"
              }
            }
          },
          "description": "The new FieldsLayout resource"
        }
      }
    },
    "\/fields_layouts\/{id}": {
      "get": {
        "tags": [
          "FieldsLayout"
        ],
        "operationId": "getFieldsLayoutItem",
        "summary": "Retrieves a FieldsLayout resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "FieldsLayout resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/FieldsLayout:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/FieldsLayout-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/FieldsLayout-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/FieldsLayout-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "\/generate_tracking_page_link": {
      "post": {
        "tags": [
          "GenerateTrackingPageLinkRequest"
        ],
        "operationId": "postGenerateTrackingPageLinkRequestCollection",
        "summary": "Creates a GenerateTrackingPageLinkRequest resource.",
        "responses": {
          "201": {
            "description": "GenerateTrackingPageLinkRequest resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/GenerateTrackingPageLinkRequest:jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/GenerateTrackingPageLinkRequest"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/GenerateTrackingPageLinkRequest"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/GenerateTrackingPageLinkRequest"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/GenerateTrackingPageLinkRequest:jsonld"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/GenerateTrackingPageLinkRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/GenerateTrackingPageLinkRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/GenerateTrackingPageLinkRequest"
              }
            }
          },
          "description": "The new GenerateTrackingPageLinkRequest resource"
        }
      }
    },
    "\/generate_tracking_page_links": {
      "post": {
        "tags": [
          "GenerateTrackingPageLinksRequest"
        ],
        "operationId": "postGenerateTrackingPageLinksRequestCollection",
        "summary": "Creates a GenerateTrackingPageLinksRequest resource.",
        "responses": {
          "201": {
            "description": "GenerateTrackingPageLinksRequest resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/GenerateTrackingPageLinksRequest:jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/GenerateTrackingPageLinksRequest"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/GenerateTrackingPageLinksRequest"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/GenerateTrackingPageLinksRequest"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/GenerateTrackingPageLinksRequest:jsonld"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/GenerateTrackingPageLinksRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/GenerateTrackingPageLinksRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/GenerateTrackingPageLinksRequest"
              }
            }
          },
          "description": "The new GenerateTrackingPageLinksRequest resource"
        }
      }
    },
    "\/imports": {
      "post": {
        "tags": [
          "Import"
        ],
        "operationId": "postImportCollection",
        "summary": "Creates a Import resource.",
        "responses": {
          "201": {
            "description": "Import resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Import:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Import-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Import-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Import-Get"
                }
              }
            },
            "links": {
              "GetImportItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getImportItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/imports\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Import:jsonld-Post"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Import-Post"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Import-Post"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Import-Post"
              }
            }
          },
          "description": "The new Import resource"
        }
      }
    },
    "\/imports\/{id}": {
      "get": {
        "tags": [
          "Import"
        ],
        "operationId": "getImportItem",
        "summary": "Retrieves a Import resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Import resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Import:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Import-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Import-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Import-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "\/integration-secure\/shopify\/workspace": {
      "post": {
        "tags": [
          "ShopifyWorkspaceRequest"
        ],
        "operationId": "postShopifyWorkspaceRequestCollection",
        "summary": "Creates a ShopifyWorkspaceRequest resource.",
        "responses": {
          "201": {
            "description": "ShopifyWorkspaceRequest resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ShopifyWorkspaceRequest:1aa22f76c20d62b9e18eec3bd170f333:jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ShopifyWorkspaceRequest:1aa22f76c20d62b9e18eec3bd170f333"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ShopifyWorkspaceRequest:1aa22f76c20d62b9e18eec3bd170f333"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ShopifyWorkspaceRequest:1aa22f76c20d62b9e18eec3bd170f333"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/ShopifyWorkspaceRequest:jsonld"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/ShopifyWorkspaceRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/ShopifyWorkspaceRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/ShopifyWorkspaceRequest"
              }
            }
          },
          "description": "The new ShopifyWorkspaceRequest resource"
        }
      }
    },
    "\/integration\/shopify\/register": {
      "post": {
        "tags": [
          "ShopifyRegisterRequest"
        ],
        "operationId": "postShopifyRegisterRequestCollection",
        "summary": "Creates a ShopifyRegisterRequest resource.",
        "responses": {
          "201": {
            "description": "ShopifyRegisterRequest resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ShopifyRegisterRequest:86d9ae84ced4700a6626eda78e8345e7:jsonld-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ShopifyRegisterRequest:86d9ae84ced4700a6626eda78e8345e7-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ShopifyRegisterRequest:86d9ae84ced4700a6626eda78e8345e7-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ShopifyRegisterRequest:86d9ae84ced4700a6626eda78e8345e7-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/ShopifyRegisterRequest:jsonld-setShopifyRegisterRequest"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/ShopifyRegisterRequest-setShopifyRegisterRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/ShopifyRegisterRequest-setShopifyRegisterRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/ShopifyRegisterRequest-setShopifyRegisterRequest"
              }
            }
          },
          "description": "The new ShopifyRegisterRequest resource"
        }
      }
    },
    "\/media": {
      "get": {
        "tags": [
          "Media"
        ],
        "operationId": "getMediaCollection",
        "summary": "Retrieves the collection of Media resources.",
        "responses": {
          "200": {
            "description": "Media collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Media:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Media-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Media-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Media-Get"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Media"
        ],
        "operationId": "postMediaCollection",
        "summary": "Creates a Media resource.",
        "responses": {
          "201": {
            "description": "Media resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Media:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Media-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Media-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Media-Get"
                }
              }
            },
            "links": {
              "GetMediaItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getMediaItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/media\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Media:jsonld-Post"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Media-Post"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Media-Post"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Media-Post"
              }
            }
          },
          "description": "The new Media resource"
        }
      }
    },
    "\/media\/{id}": {
      "get": {
        "tags": [
          "Media"
        ],
        "operationId": "getMediaItem",
        "summary": "Retrieves a Media resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Media resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Media:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Media-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Media-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Media-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "\/notes": {
      "get": {
        "tags": [
          "Note"
        ],
        "operationId": "getNoteCollection",
        "summary": "Retrieves the collection of Note resources.",
        "responses": {
          "200": {
            "description": "Note collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Note:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Note-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Note-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Note-Get"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "entity",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entity[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "entityId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityId[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Note"
        ],
        "operationId": "postNoteCollection",
        "summary": "Creates a Note resource.",
        "responses": {
          "201": {
            "description": "Note resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Note:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Note-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Note-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Note-Get"
                }
              }
            },
            "links": {
              "GetNoteItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getNoteItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/notes\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Note:jsonld-Post"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Note-Post"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Note-Post"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Note-Post"
              }
            }
          },
          "description": "The new Note resource"
        }
      }
    },
    "\/notes\/{id}": {
      "get": {
        "tags": [
          "Note"
        ],
        "operationId": "getNoteItem",
        "summary": "Retrieves a Note resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Note resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Note:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Note-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Note-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Note-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "\/notifications": {
      "get": {
        "tags": [
          "Notification"
        ],
        "operationId": "getNotificationCollection",
        "summary": "Retrieves the collection of Notification resources.",
        "responses": {
          "200": {
            "description": "Notification collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Notification:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Notification-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Notification-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Notification-Get"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "message",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "unread",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/notifications\/{id}": {
      "get": {
        "tags": [
          "Notification"
        ],
        "operationId": "getNotificationItem",
        "summary": "Retrieves a Notification resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Notification:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Notification-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Notification-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Notification-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "put": {
        "tags": [
          "Notification"
        ],
        "operationId": "putNotificationItem",
        "summary": "Replaces the Notification resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification resource updated",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Notification:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Notification-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Notification-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Notification-Get"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Notification:jsonld-Put"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Notification-Put"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Notification-Put"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Notification-Put"
              }
            }
          },
          "description": "The updated Notification resource"
        }
      }
    },
    "\/oauth_clients": {
      "get": {
        "tags": [
          "OauthClient"
        ],
        "operationId": "getOauthClientCollection",
        "summary": "Retrieves the collection of OauthClient resources.",
        "responses": {
          "200": {
            "description": "OauthClient collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/OauthClient:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/OauthClient-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/OauthClient-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/OauthClient-Get"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      },
      "post": {
        "tags": [
          "OauthClient"
        ],
        "operationId": "postOauthClientCollection",
        "summary": "Creates a OauthClient resource.",
        "responses": {
          "201": {
            "description": "OauthClient resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/OauthClient:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/OauthClient-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/OauthClient-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/OauthClient-Get"
                }
              }
            },
            "links": {
              "GetOauthClientItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getOauthClientItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/oauth_clients\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/OauthClient:jsonld-Post"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/OauthClient-Post"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/OauthClient-Post"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/OauthClient-Post"
              }
            }
          },
          "description": "The new OauthClient resource"
        }
      }
    },
    "\/oauth_clients\/{id}": {
      "get": {
        "tags": [
          "OauthClient"
        ],
        "operationId": "getOauthClientItem",
        "summary": "Retrieves a OauthClient resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OauthClient resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/OauthClient:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/OauthClient-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/OauthClient-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/OauthClient-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "delete": {
        "tags": [
          "OauthClient"
        ],
        "operationId": "deleteOauthClientItem",
        "summary": "Removes the OauthClient resource.",
        "responses": {
          "204": {
            "description": "OauthClient resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "\/order_items": {
      "get": {
        "tags": [
          "OrderItem"
        ],
        "operationId": "getOrderItemCollection",
        "summary": "Retrieves the collection of OrderItem resources.",
        "responses": {
          "200": {
            "description": "OrderItem collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/OrderItem:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/OrderItem-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/OrderItem-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/OrderItem-Get"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "productName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspace.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspace.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "order[id]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[productName]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[qty]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[price]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "qty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "qty[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "price",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "qty[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      },
      "post": {
        "tags": [
          "OrderItem"
        ],
        "operationId": "postOrderItemCollection",
        "summary": "Creates a OrderItem resource.",
        "responses": {
          "201": {
            "description": "OrderItem resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/OrderItem:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/OrderItem-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/OrderItem-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/OrderItem-Get"
                }
              }
            },
            "links": {
              "GetOrderItemItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getOrderItemItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/order_items\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/OrderItem:jsonld-Post"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/OrderItem-Post"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/OrderItem-Post"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/OrderItem-Post"
              }
            }
          },
          "description": "The new OrderItem resource"
        }
      }
    },
    "\/order_items\/{id}": {
      "get": {
        "tags": [
          "OrderItem"
        ],
        "operationId": "getOrderItemItem",
        "summary": "Retrieves a OrderItem resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OrderItem resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/OrderItem:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/OrderItem-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/OrderItem-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/OrderItem-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "put": {
        "tags": [
          "OrderItem"
        ],
        "operationId": "putOrderItemItem",
        "summary": "Replaces the OrderItem resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OrderItem resource updated",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/OrderItem:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/OrderItem-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/OrderItem-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/OrderItem-Get"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/OrderItem:jsonld-Put"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/OrderItem-Put"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/OrderItem-Put"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/OrderItem-Put"
              }
            }
          },
          "description": "The updated OrderItem resource"
        }
      },
      "delete": {
        "tags": [
          "OrderItem"
        ],
        "operationId": "deleteOrderItemItem",
        "summary": "Removes the OrderItem resource.",
        "responses": {
          "204": {
            "description": "OrderItem resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "\/order_items\/{id}\/shipment_items": {
      "get": {
        "tags": [
          "ShipmentItem",
          "OrderItem"
        ],
        "operationId": "api_order_items_shipment_items_get_subresource",
        "summary": "Retrieves the collection of ShipmentItem resources.",
        "responses": {
          "200": {
            "description": "ShipmentItem collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/ShipmentItem:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "shipment.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipment.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "shipment.trackingNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderItem.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderItem.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "orderItem.order.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderItem.order.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "workspace.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspace.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "order[id]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[qty]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "qty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "qty[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "qty[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/orders": {
      "get": {
        "tags": [
          "Order"
        ],
        "operationId": "getOrderCollection",
        "summary": "Retrieves the collection of Order resources.",
        "responses": {
          "200": {
            "description": "Order collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Order:jsonld-Getc"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Order-Getc"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Order-Getc"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Order-Getc"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "order[id]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[orderNumber]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[email]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[phoneNumber]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[orderStatus.code]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[subtotal]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[total]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[updatedAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.addressLine1]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.addressLine2]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.city]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.company]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.countryIso2]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.firstName]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.lastName]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.postcode]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.state]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.addressLine1]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.addressLine2]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.city]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.company]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.countryIso2]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.firstName]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.lastName]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.postcode]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.state]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[fulfillmentStatus]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "orderNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phoneNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderStatus.code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderStatus.code[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "orderType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderType[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "shippingAddress.addressLine1",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingAddress.addressLine2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingAddress.city",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingAddress.company",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingAddress.countryIso2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingAddress.countryIso2[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "shippingAddress.firstName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingAddress.lastName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingAddress.postcode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingAddress.state",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.addressLine1",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.addressLine2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.city",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.company",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.countryIso2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.countryIso2[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "billingAddress.firstName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.lastName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.postcode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.state",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fulfillmentStatus",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fulfillmentStatus[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "subtotal",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subtotal[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "total",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "total[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "subtotal[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subtotal[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subtotal[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subtotal[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subtotal[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "total[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "total[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "total[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "total[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "total[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Order"
        ],
        "operationId": "postOrderCollection",
        "summary": "Creates a Order resource.",
        "responses": {
          "201": {
            "description": "Order resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Order:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Order-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Order-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Order-Get"
                }
              }
            },
            "links": {
              "GetOrderItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getOrderItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/orders\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Order:jsonld-Post"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Order-Post"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Order-Post"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Order-Post"
              }
            }
          },
          "description": "The new Order resource"
        }
      }
    },
    "\/orders\/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "operationId": "getOrderItem",
        "summary": "Retrieves a Order resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Order:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Order-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Order-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Order-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "put": {
        "tags": [
          "Order"
        ],
        "operationId": "putOrderItem",
        "summary": "Replaces the Order resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order resource updated",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Order:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Order-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Order-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Order-Get"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Order:jsonld-Put"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Order-Put"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Order-Put"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Order-Put"
              }
            }
          },
          "description": "The updated Order resource"
        }
      },
      "delete": {
        "tags": [
          "Order"
        ],
        "operationId": "deleteOrderItem",
        "summary": "Removes the Order resource.",
        "responses": {
          "204": {
            "description": "Order resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "\/orders\/{id}\/items": {
      "get": {
        "tags": [
          "OrderItem",
          "Order"
        ],
        "operationId": "api_orders_items_get_subresource",
        "summary": "Retrieves the collection of OrderItem resources.",
        "responses": {
          "200": {
            "description": "OrderItem collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/OrderItem:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/OrderItem-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/OrderItem-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/OrderItem-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "productName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspace.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspace.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "order[id]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[productName]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[qty]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[price]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "qty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "qty[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "price",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "qty[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/orders\/{id}\/items\/{items}\/shipment_items": {
      "get": {
        "tags": [
          "ShipmentItem",
          "OrderItem"
        ],
        "operationId": "api_orders_items_shipment_items_get_subresource",
        "summary": "Retrieves the collection of ShipmentItem resources.",
        "responses": {
          "200": {
            "description": "ShipmentItem collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/ShipmentItem:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "items",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "shipment.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipment.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "shipment.trackingNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderItem.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderItem.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "orderItem.order.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderItem.order.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "workspace.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspace.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "order[id]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[qty]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "qty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "qty[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "qty[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/product_variants": {
      "get": {
        "tags": [
          "ProductVariant"
        ],
        "operationId": "getProductVariantCollection",
        "summary": "Retrieves the collection of ProductVariant resources.",
        "responses": {
          "200": {
            "description": "ProductVariant collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/ProductVariant:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ProductVariant-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ProductVariant-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ProductVariant-Get"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "sku",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "product",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "order[id]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[sku]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[updatedAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      },
      "post": {
        "tags": [
          "ProductVariant"
        ],
        "operationId": "postProductVariantCollection",
        "summary": "Creates a ProductVariant resource.",
        "responses": {
          "201": {
            "description": "ProductVariant resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ProductVariant:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ProductVariant-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ProductVariant-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ProductVariant-Get"
                }
              }
            },
            "links": {
              "GetProductVariantItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getProductVariantItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/product_variants\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/ProductVariant:jsonld-Post"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/ProductVariant-Post"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/ProductVariant-Post"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/ProductVariant-Post"
              }
            }
          },
          "description": "The new ProductVariant resource"
        }
      }
    },
    "\/product_variants\/{id}": {
      "get": {
        "tags": [
          "ProductVariant"
        ],
        "operationId": "getProductVariantItem",
        "summary": "Retrieves a ProductVariant resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ProductVariant resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ProductVariant:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ProductVariant-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ProductVariant-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ProductVariant-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "put": {
        "tags": [
          "ProductVariant"
        ],
        "operationId": "putProductVariantItem",
        "summary": "Replaces the ProductVariant resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ProductVariant resource updated",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ProductVariant:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ProductVariant-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ProductVariant-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ProductVariant-Get"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/ProductVariant:jsonld-Put"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/ProductVariant-Put"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/ProductVariant-Put"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/ProductVariant-Put"
              }
            }
          },
          "description": "The updated ProductVariant resource"
        }
      },
      "delete": {
        "tags": [
          "ProductVariant"
        ],
        "operationId": "deleteProductVariantItem",
        "summary": "Removes the ProductVariant resource.",
        "responses": {
          "204": {
            "description": "ProductVariant resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "\/products": {
      "get": {
        "tags": [
          "Product"
        ],
        "operationId": "getProductCollection",
        "summary": "Retrieves the collection of Product resources.",
        "responses": {
          "200": {
            "description": "Product collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Product:jsonld-Getc"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Product-Getc"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Product-Getc"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Product-Getc"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "order[id]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[name]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[updatedAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Product"
        ],
        "operationId": "postProductCollection",
        "summary": "Creates a Product resource.",
        "responses": {
          "201": {
            "description": "Product resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Product:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Product-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Product-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Product-Get"
                }
              }
            },
            "links": {
              "GetProductItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getProductItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/products\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Product:jsonld-Post"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Product-Post"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Product-Post"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Product-Post"
              }
            }
          },
          "description": "The new Product resource"
        }
      }
    },
    "\/products\/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "operationId": "getProductItem",
        "summary": "Retrieves a Product resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Product:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Product-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Product-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Product-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "operationId": "putProductItem",
        "summary": "Replaces the Product resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product resource updated",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Product:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Product-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Product-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Product-Get"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Product:jsonld-Put"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Product-Put"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Product-Put"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Product-Put"
              }
            }
          },
          "description": "The updated Product resource"
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "operationId": "deleteProductItem",
        "summary": "Removes the Product resource.",
        "responses": {
          "204": {
            "description": "Product resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "\/products\/{id}\/product_variants": {
      "get": {
        "tags": [
          "ProductVariant",
          "Product"
        ],
        "operationId": "api_products_product_variants_get_subresource",
        "summary": "Retrieves the collection of ProductVariant resources.",
        "responses": {
          "200": {
            "description": "ProductVariant collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/ProductVariant:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ProductVariant-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ProductVariant-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ProductVariant-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "sku",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "product",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "order[id]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[sku]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[updatedAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/public\/carriers": {
      "get": {
        "tags": [
          "Carrier"
        ],
        "operationId": "getCarrierCollection",
        "summary": "Retrieves the collection of Carrier resources.",
        "responses": {
          "200": {
            "description": "Carrier collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Carrier:jsonld-Getc"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Carrier-Getc"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Carrier-Getc"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Carrier-Getc"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "groups[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          }
        ]
      }
    },
    "\/public\/carriers\/{id}": {
      "get": {
        "tags": [
          "Carrier"
        ],
        "operationId": "getCarrierItem",
        "summary": "Retrieves a Carrier resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Carrier resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Carrier:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Carrier-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Carrier-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Carrier-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "\/public\/payment": {
      "post": {
        "tags": [
          "CreatePaymentRequest"
        ],
        "operationId": "postCreatePaymentRequestCollection",
        "summary": "Creates a CreatePaymentRequest resource.",
        "responses": {
          "201": {
            "description": "CreatePaymentRequest resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/CreatePaymentRequest:4bbe19ecc8946f4a61a6a05915363ab6:jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/CreatePaymentRequest:4bbe19ecc8946f4a61a6a05915363ab6"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/CreatePaymentRequest:4bbe19ecc8946f4a61a6a05915363ab6"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/CreatePaymentRequest:4bbe19ecc8946f4a61a6a05915363ab6"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/CreatePaymentRequest:jsonld"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/CreatePaymentRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/CreatePaymentRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/CreatePaymentRequest"
              }
            }
          },
          "description": "The new CreatePaymentRequest resource"
        }
      }
    },
    "\/public\/tracking_page_links\/{hash}\/reviews": {
      "post": {
        "tags": [
          "PostReviewRequest"
        ],
        "operationId": "postPostReviewRequestCollection",
        "summary": "Creates a PostReviewRequest resource.",
        "responses": {
          "201": {
            "description": "PostReviewRequest resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/PostReviewRequest:418096edba57c92b933e9d97367d1a6f:jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/PostReviewRequest:418096edba57c92b933e9d97367d1a6f"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/PostReviewRequest:418096edba57c92b933e9d97367d1a6f"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/PostReviewRequest:418096edba57c92b933e9d97367d1a6f"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/PostReviewRequest:jsonld"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/PostReviewRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/PostReviewRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/PostReviewRequest"
              }
            }
          },
          "description": "The new PostReviewRequest resource"
        }
      }
    },
    "\/public\/tracking_statuses": {
      "get": {
        "tags": [
          "TrackingStatus"
        ],
        "operationId": "getTrackingStatusCollection",
        "summary": "Retrieves the collection of TrackingStatus resources.",
        "responses": {
          "200": {
            "description": "TrackingStatus collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/TrackingStatus:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TrackingStatus-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TrackingStatus-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TrackingStatus-Get"
                  }
                }
              }
            }
          }
        },
        "parameters": []
      }
    },
    "\/public\/tracking_statuses\/{id}": {
      "get": {
        "tags": [
          "TrackingStatus"
        ],
        "operationId": "getTrackingStatusItem",
        "summary": "Retrieves a TrackingStatus resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TrackingStatus resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TrackingStatus:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TrackingStatus-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TrackingStatus-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TrackingStatus-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "\/reviews\/{id}": {
      "get": {
        "tags": [
          "Review"
        ],
        "operationId": "getReviewItem",
        "summary": "Retrieves a Review resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Review resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Review:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Review-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Review-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Review-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "\/security\/forgot-password\/reset": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "forgot_password_resetUserCollection",
        "summary": "Creates a User resource.",
        "responses": {
          "200": {
            "description": "User resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/User:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/User-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/User-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/User-Get"
                }
              }
            },
            "links": {
              "GetUserItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getUserItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/users\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/User:28ef97915986ee8b9ee88e51a8e8015f:jsonld-setForgotPasswordResetRequest"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/User:28ef97915986ee8b9ee88e51a8e8015f-setForgotPasswordResetRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/User:28ef97915986ee8b9ee88e51a8e8015f-setForgotPasswordResetRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/User:28ef97915986ee8b9ee88e51a8e8015f-setForgotPasswordResetRequest"
              }
            }
          },
          "description": "The new User resource"
        }
      }
    },
    "\/security\/forgot-password\/send-email": {
      "post": {
        "tags": [
          "ForgotPasswordSendEmailRequest"
        ],
        "operationId": "postForgotPasswordSendEmailRequestCollection",
        "summary": "Creates a ForgotPasswordSendEmailRequest resource.",
        "responses": {
          "201": {
            "description": "ForgotPasswordSendEmailRequest resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ForgotPasswordSendEmailRequest:jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ForgotPasswordSendEmailRequest"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ForgotPasswordSendEmailRequest"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ForgotPasswordSendEmailRequest"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/ForgotPasswordSendEmailRequest:jsonld"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/ForgotPasswordSendEmailRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/ForgotPasswordSendEmailRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/ForgotPasswordSendEmailRequest"
              }
            }
          },
          "description": "The new ForgotPasswordSendEmailRequest resource"
        }
      }
    },
    "\/security\/resend-email": {
      "post": {
        "tags": [
          "UserResendEmailRequest"
        ],
        "operationId": "postUserResendEmailRequestCollection",
        "summary": "Creates a UserResendEmailRequest resource.",
        "responses": {
          "201": {
            "description": "UserResendEmailRequest resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/UserResendEmailRequest:jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/UserResendEmailRequest"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/UserResendEmailRequest"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/UserResendEmailRequest"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/UserResendEmailRequest:jsonld"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/UserResendEmailRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/UserResendEmailRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/UserResendEmailRequest"
              }
            }
          },
          "description": "The new UserResendEmailRequest resource"
        }
      }
    },
    "\/security\/signup": {
      "post": {
        "tags": [
          "UserSignupRequest"
        ],
        "operationId": "postUserSignupRequestCollection",
        "summary": "Creates a UserSignupRequest resource.",
        "responses": {
          "200": {
            "description": "UserSignupRequest resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/UserSignupRequest:56a0ef77336da222b4771573157e2e64:jsonld-getUserSignupResponse_getUser_getToken"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/UserSignupRequest:56a0ef77336da222b4771573157e2e64-getUserSignupResponse_getUser_getToken"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/UserSignupRequest:56a0ef77336da222b4771573157e2e64-getUserSignupResponse_getUser_getToken"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/UserSignupRequest:56a0ef77336da222b4771573157e2e64-getUserSignupResponse_getUser_getToken"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/UserSignupRequest:jsonld-setUserSignupRequest"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/UserSignupRequest-setUserSignupRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/UserSignupRequest-setUserSignupRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/UserSignupRequest-setUserSignupRequest"
              }
            }
          },
          "description": "The new UserSignupRequest resource"
        }
      }
    },
    "\/security\/verify-email": {
      "post": {
        "tags": [
          "UserVerifyEmailRequest"
        ],
        "operationId": "postUserVerifyEmailRequestCollection",
        "summary": "Creates a UserVerifyEmailRequest resource.",
        "responses": {
          "201": {
            "description": "UserVerifyEmailRequest resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/UserVerifyEmailRequest:jsonld-getUserVerifyEmailResponse_getUser"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/UserVerifyEmailRequest-getUserVerifyEmailResponse_getUser"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/UserVerifyEmailRequest-getUserVerifyEmailResponse_getUser"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/UserVerifyEmailRequest-getUserVerifyEmailResponse_getUser"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/UserVerifyEmailRequest:jsonld"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/UserVerifyEmailRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/UserVerifyEmailRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/UserVerifyEmailRequest"
              }
            }
          },
          "description": "The new UserVerifyEmailRequest resource"
        }
      }
    },
    "\/shipment_items": {
      "get": {
        "tags": [
          "ShipmentItem"
        ],
        "operationId": "getShipmentItemCollection",
        "summary": "Retrieves the collection of ShipmentItem resources.",
        "responses": {
          "200": {
            "description": "ShipmentItem collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/ShipmentItem:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "shipment.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipment.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "shipment.trackingNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderItem.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderItem.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "orderItem.order.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderItem.order.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "workspace.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspace.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "order[id]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[qty]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "qty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "qty[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "qty[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      },
      "post": {
        "tags": [
          "ShipmentItem"
        ],
        "operationId": "postShipmentItemCollection",
        "summary": "Creates a ShipmentItem resource.",
        "responses": {
          "201": {
            "description": "ShipmentItem resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ShipmentItem:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                }
              }
            },
            "links": {
              "GetShipmentItemItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getShipmentItemItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/shipment_items\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/ShipmentItem:jsonld-Post"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/ShipmentItem-Post"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/ShipmentItem-Post"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/ShipmentItem-Post"
              }
            }
          },
          "description": "The new ShipmentItem resource"
        }
      }
    },
    "\/shipment_items\/{id}": {
      "get": {
        "tags": [
          "ShipmentItem"
        ],
        "operationId": "getShipmentItemItem",
        "summary": "Retrieves a ShipmentItem resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ShipmentItem resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ShipmentItem:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "put": {
        "tags": [
          "ShipmentItem"
        ],
        "operationId": "putShipmentItemItem",
        "summary": "Replaces the ShipmentItem resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ShipmentItem resource updated",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ShipmentItem:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/ShipmentItem:jsonld-Put"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/ShipmentItem-Put"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/ShipmentItem-Put"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/ShipmentItem-Put"
              }
            }
          },
          "description": "The updated ShipmentItem resource"
        }
      },
      "delete": {
        "tags": [
          "ShipmentItem"
        ],
        "operationId": "deleteShipmentItemItem",
        "summary": "Removes the ShipmentItem resource.",
        "responses": {
          "204": {
            "description": "ShipmentItem resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "\/shipments": {
      "get": {
        "tags": [
          "Shipment"
        ],
        "operationId": "getShipmentCollection",
        "summary": "Retrieves the collection of Shipment resources.",
        "responses": {
          "200": {
            "description": "Shipment collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Shipment:jsonld-Getc"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Shipment-Getc"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Shipment-Getc"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Shipment-Getc"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "order[id]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[trackingNumber]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[trackingStatus]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shipmentStatus.code]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[originCarrier]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[destinationCarrier]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[updatedAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippedAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[lastStatusUpdate]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[expectedDeliveryDate]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[originCountry]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[destinationCountry]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[originCountryIso2]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[destinationCountryIso2]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[email]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[phoneNumber]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[daysInTransit]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[reviewTotalScore]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.addressLine1]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.addressLine2]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.city]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.company]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.countryIso2]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.firstName]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.lastName]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.postcode]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.state]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "orderNumbers",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderNumbers[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "deepObject",
            "explode": true
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedAt[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedAt[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedAt[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedAt[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastStatusUpdate[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastStatusUpdate[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastStatusUpdate[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastStatusUpdate[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expectedDeliveryDate[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expectedDeliveryDate[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expectedDeliveryDate[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expectedDeliveryDate[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "trackingNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trackingStatus",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trackingStatus[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "shipmentStatus.code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipmentStatus.code[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "originCarrier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "originCarrier[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "destinationCarrier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destinationCarrier[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "originCountry",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "originCountryIso2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "originCountryIso2[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "destinationCountry",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destinationCountryIso2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destinationCountryIso2[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phoneNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.addressLine1",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.addressLine2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.city",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.company",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.countryIso2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.countryIso2[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "address.firstName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.lastName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.postcode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.state",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "daysInTransit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "daysInTransit[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "daysInTransit[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "daysInTransit[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "daysInTransit[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "daysInTransit[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "daysInTransit[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reviewTotalScore[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reviewTotalScore[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reviewTotalScore[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reviewTotalScore[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reviewTotalScore[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "postShipmentCollection",
        "summary": "Creates a Shipment resource.",
        "responses": {
          "201": {
            "description": "Shipment resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Shipment:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Shipment-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Shipment-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Shipment-Get"
                }
              }
            },
            "links": {
              "GetShipmentItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getShipmentItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/shipments\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Shipment:jsonld-Post"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Shipment-Post"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Shipment-Post"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Shipment-Post"
              }
            }
          },
          "description": "The new Shipment resource"
        }
      }
    },
    "\/shipments\/{id}": {
      "get": {
        "tags": [
          "Shipment"
        ],
        "operationId": "getShipmentItem",
        "summary": "Retrieves a Shipment resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Shipment resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Shipment:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Shipment-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Shipment-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Shipment-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Shipment"
        ],
        "operationId": "deleteShipmentItem",
        "summary": "Removes the Shipment resource.",
        "responses": {
          "204": {
            "description": "Shipment resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "tags": [
          "Shipment"
        ],
        "operationId": "putShipmentItem",
        "summary": "Replaces the Shipment resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Shipment resource updated",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Shipment:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Shipment-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Shipment-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Shipment-Get"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Shipment:jsonld-Put"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Shipment-Put"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Shipment-Put"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Shipment-Put"
              }
            }
          },
          "description": "The updated Shipment resource"
        }
      }
    },
    "\/shipments\/{id}\/checkpoints": {
      "get": {
        "tags": [
          "TrackingCheckpoint",
          "Shipment"
        ],
        "operationId": "api_shipments_checkpoints_get_subresource",
        "summary": "Retrieves the collection of TrackingCheckpoint resources.",
        "responses": {
          "200": {
            "description": "TrackingCheckpoint collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/TrackingCheckpoint:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TrackingCheckpoint-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TrackingCheckpoint-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TrackingCheckpoint-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order[checkpointDate]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/shipments\/{id}\/shipment_items": {
      "get": {
        "tags": [
          "ShipmentItem",
          "Shipment"
        ],
        "operationId": "api_shipments_shipment_items_get_subresource",
        "summary": "Retrieves the collection of ShipmentItem resources.",
        "responses": {
          "200": {
            "description": "ShipmentItem collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/ShipmentItem:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "shipment.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipment.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "shipment.trackingNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderItem.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderItem.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "orderItem.order.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderItem.order.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "workspace.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspace.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "order[id]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[qty]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "qty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "qty[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "qty[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/states": {
      "get": {
        "tags": [
          "State"
        ],
        "operationId": "getStateCollection",
        "summary": "Retrieves the collection of State resources.",
        "responses": {
          "200": {
            "description": "State collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/State:jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/State"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/State"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/State"
                  }
                }
              }
            }
          }
        },
        "parameters": []
      }
    },
    "\/states\/{id}": {
      "get": {
        "tags": [
          "State"
        ],
        "operationId": "getStateItem",
        "summary": "Retrieves a State resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "State resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/State:jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/State"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/State"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/State"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "\/statuses": {
      "get": {
        "tags": [
          "Status"
        ],
        "operationId": "getStatusCollection",
        "summary": "Retrieves the collection of Status resources.",
        "responses": {
          "200": {
            "description": "Status collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Status:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Status-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Status-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Status-Get"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "entity",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order[entity]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[code]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[title]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Status"
        ],
        "operationId": "postStatusCollection",
        "summary": "Creates a Status resource.",
        "responses": {
          "201": {
            "description": "Status resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Status:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Status-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Status-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Status-Get"
                }
              }
            },
            "links": {
              "GetStatusItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getStatusItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/statuses\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Status:jsonld-Post"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Status-Post"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Status-Post"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Status-Post"
              }
            }
          },
          "description": "The new Status resource"
        }
      }
    },
    "\/statuses\/check-references": {
      "post": {
        "tags": [
          "Status"
        ],
        "operationId": "checkStatusCollection",
        "summary": "Creates a Status resource.",
        "responses": {
          "200": {
            "description": "Status resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Status:01d0f434438e480f7bbc7790c6311108:jsonld-getCheckStatusRefsResponse"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Status:01d0f434438e480f7bbc7790c6311108-getCheckStatusRefsResponse"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Status:01d0f434438e480f7bbc7790c6311108-getCheckStatusRefsResponse"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Status:01d0f434438e480f7bbc7790c6311108-getCheckStatusRefsResponse"
                }
              }
            },
            "links": {
              "GetStatusItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getStatusItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/statuses\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Status:113e64b04cfc724b475734cd9eb5ea56:jsonld-setCheckStatusRefsRequest"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Status:113e64b04cfc724b475734cd9eb5ea56-setCheckStatusRefsRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Status:113e64b04cfc724b475734cd9eb5ea56-setCheckStatusRefsRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Status:113e64b04cfc724b475734cd9eb5ea56-setCheckStatusRefsRequest"
              }
            }
          },
          "description": "The new Status resource"
        }
      }
    },
    "\/statuses\/migrate-references": {
      "post": {
        "tags": [
          "Status"
        ],
        "operationId": "migrateStatusCollection",
        "summary": "Creates a Status resource.",
        "responses": {
          "200": {
            "description": "Status resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Status:fb253404adfa1c8f5e5289236bfea1fd:jsonld-getMigrateStatusRefsResponse"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Status:fb253404adfa1c8f5e5289236bfea1fd-getMigrateStatusRefsResponse"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Status:fb253404adfa1c8f5e5289236bfea1fd-getMigrateStatusRefsResponse"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Status:fb253404adfa1c8f5e5289236bfea1fd-getMigrateStatusRefsResponse"
                }
              }
            },
            "links": {
              "GetStatusItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getStatusItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/statuses\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Status:a5842c80e161de61194eb8382eef2bd2:jsonld-setMigrateStatusRefsRequest"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Status:a5842c80e161de61194eb8382eef2bd2-setMigrateStatusRefsRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Status:a5842c80e161de61194eb8382eef2bd2-setMigrateStatusRefsRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Status:a5842c80e161de61194eb8382eef2bd2-setMigrateStatusRefsRequest"
              }
            }
          },
          "description": "The new Status resource"
        }
      }
    },
    "\/statuses\/{id}": {
      "get": {
        "tags": [
          "Status"
        ],
        "operationId": "getStatusItem",
        "summary": "Retrieves a Status resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Status:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Status-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Status-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Status-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "put": {
        "tags": [
          "Status"
        ],
        "operationId": "putStatusItem",
        "summary": "Replaces the Status resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status resource updated",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Status:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Status-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Status-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Status-Get"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Status:jsonld-Put"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Status-Put"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Status-Put"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Status-Put"
              }
            }
          },
          "description": "The updated Status resource"
        }
      },
      "delete": {
        "tags": [
          "Status"
        ],
        "operationId": "deleteStatusItem",
        "summary": "Removes the Status resource.",
        "responses": {
          "204": {
            "description": "Status resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "\/subdomain\/check": {
      "post": {
        "tags": [
          "SubdomainCheckRequest"
        ],
        "operationId": "postSubdomainCheckRequestCollection",
        "summary": "Creates a SubdomainCheckRequest resource.",
        "responses": {
          "200": {
            "description": "SubdomainCheckRequest resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/SubdomainCheckRequest:e29d63eea28a754aa626ec5e9cd91799:jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/SubdomainCheckRequest:e29d63eea28a754aa626ec5e9cd91799"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/SubdomainCheckRequest:e29d63eea28a754aa626ec5e9cd91799"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/SubdomainCheckRequest:e29d63eea28a754aa626ec5e9cd91799"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/SubdomainCheckRequest:jsonld"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/SubdomainCheckRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/SubdomainCheckRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/SubdomainCheckRequest"
              }
            }
          },
          "description": "The new SubdomainCheckRequest resource"
        }
      }
    },
    "\/team_members": {
      "get": {
        "tags": [
          "TeamMember"
        ],
        "operationId": "getTeamMemberCollection",
        "summary": "Retrieves the collection of TeamMember resources.",
        "responses": {
          "200": {
            "description": "TeamMember collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/TeamMember:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TeamMember-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TeamMember-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TeamMember-Get"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "team.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "member.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "member.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "teamAdminOrHasWorkspace",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/team_members\/{id}": {
      "get": {
        "tags": [
          "TeamMember"
        ],
        "operationId": "getTeamMemberItem",
        "summary": "Retrieves a TeamMember resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TeamMember resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TeamMember:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TeamMember-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TeamMember-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TeamMember-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "put": {
        "tags": [
          "TeamMember"
        ],
        "operationId": "putTeamMemberItem",
        "summary": "Replaces the TeamMember resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TeamMember resource updated",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TeamMember:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TeamMember-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TeamMember-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TeamMember-Get"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/TeamMember:jsonld-Put"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/TeamMember-Put"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/TeamMember-Put"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/TeamMember-Put"
              }
            }
          },
          "description": "The updated TeamMember resource"
        }
      },
      "delete": {
        "tags": [
          "TeamMember"
        ],
        "operationId": "deleteTeamMemberItem",
        "summary": "Removes the TeamMember resource.",
        "responses": {
          "204": {
            "description": "TeamMember resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "\/team_members\/{id}\/resend_invite": {
      "post": {
        "tags": [
          "TeamMember"
        ],
        "operationId": "resend_inviteTeamMemberItem",
        "summary": "Creates a TeamMember resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "TeamMember resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TeamMember:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TeamMember-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TeamMember-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TeamMember-Get"
                }
              }
            },
            "links": {
              "GetTeamMemberItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getTeamMemberItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/team_members\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/TeamMember:jsonld-Put"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/TeamMember-Put"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/TeamMember-Put"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/TeamMember-Put"
              }
            }
          },
          "description": "The new TeamMember resource"
        }
      }
    },
    "\/teams": {
      "get": {
        "tags": [
          "Team"
        ],
        "operationId": "getTeamCollection",
        "summary": "Retrieves the collection of Team resources.",
        "responses": {
          "200": {
            "description": "Team collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Team:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Team-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Team-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Team-Get"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Team"
        ],
        "operationId": "postTeamCollection",
        "summary": "Creates a Team resource.",
        "responses": {
          "201": {
            "description": "Team resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Team:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Team-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Team-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Team-Get"
                }
              }
            },
            "links": {
              "GetTeamItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getTeamItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/teams\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Team:jsonld-Post"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Team-Post"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Team-Post"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Team-Post"
              }
            }
          },
          "description": "The new Team resource"
        }
      }
    },
    "\/teams\/{id}": {
      "get": {
        "tags": [
          "Team"
        ],
        "operationId": "getTeamItem",
        "summary": "Retrieves a Team resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Team resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Team:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Team-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Team-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Team-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "put": {
        "tags": [
          "Team"
        ],
        "operationId": "putTeamItem",
        "summary": "Replaces the Team resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Team resource updated",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Team:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Team-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Team-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Team-Get"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Team:jsonld-Post"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Team-Post"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Team-Post"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Team-Post"
              }
            }
          },
          "description": "The updated Team resource"
        }
      },
      "delete": {
        "tags": [
          "Team"
        ],
        "operationId": "deleteTeamItem",
        "summary": "Removes the Team resource.",
        "responses": {
          "204": {
            "description": "Team resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "\/teams\/{id}\/credentials": {
      "get": {
        "tags": [
          "Credentials",
          "Team"
        ],
        "operationId": "api_teams_credentials_get_subresource",
        "summary": "Retrieves the collection of Credentials resources.",
        "responses": {
          "200": {
            "description": "Credentials collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Credentials:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Credentials-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Credentials-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Credentials-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[updatedAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onlyVisibleTypes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/teams\/{id}\/team_members": {
      "get": {
        "tags": [
          "TeamMember",
          "Team"
        ],
        "operationId": "api_teams_team_members_get_subresource",
        "summary": "Retrieves the collection of TeamMember resources.",
        "responses": {
          "200": {
            "description": "TeamMember collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/TeamMember:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TeamMember-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TeamMember-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TeamMember-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "member.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "member.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "teamAdminOrHasWorkspace",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/teams\/{id}\/workspaces": {
      "get": {
        "tags": [
          "Workspace",
          "Team"
        ],
        "operationId": "api_teams_workspaces_get_subresource",
        "summary": "Retrieves the collection of Workspace resources.",
        "responses": {
          "200": {
            "description": "Workspace collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Workspace:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Workspace-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Workspace-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Workspace-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/teams\/{id}\/workspaces\/{workspaces}\/email_notifications": {
      "get": {
        "tags": [
          "EmailNotification",
          "Workspace"
        ],
        "operationId": "api_teams_workspaces_email_notifications_get_subresource",
        "summary": "Retrieves the collection of EmailNotification resources.",
        "responses": {
          "200": {
            "description": "EmailNotification collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/EmailNotification:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/EmailNotification-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/EmailNotification-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/EmailNotification-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspaces",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "event",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastEmailSentAt[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastEmailSentAt[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastEmailSentAt[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastEmailSentAt[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/teams\/{id}\/workspaces\/{workspaces}\/notes": {
      "get": {
        "tags": [
          "Note",
          "Workspace"
        ],
        "operationId": "api_teams_workspaces_notes_get_subresource",
        "summary": "Retrieves the collection of Note resources.",
        "responses": {
          "200": {
            "description": "Note collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Note:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Note-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Note-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Note-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspaces",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entity",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entity[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "entityId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityId[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/teams\/{id}\/workspaces\/{workspaces}\/orders": {
      "get": {
        "tags": [
          "Order",
          "Workspace"
        ],
        "operationId": "api_teams_workspaces_orders_get_subresource",
        "summary": "Retrieves the collection of Order resources.",
        "responses": {
          "200": {
            "description": "Order collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Order:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Order-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Order-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Order-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspaces",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order[id]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[orderNumber]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[email]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[phoneNumber]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[orderStatus.code]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[subtotal]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[total]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[updatedAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.addressLine1]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.addressLine2]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.city]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.company]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.countryIso2]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.firstName]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.lastName]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.postcode]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.state]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.addressLine1]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.addressLine2]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.city]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.company]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.countryIso2]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.firstName]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.lastName]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.postcode]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.state]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[fulfillmentStatus]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "orderNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phoneNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderStatus.code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderStatus.code[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "orderType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderType[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "shippingAddress.addressLine1",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingAddress.addressLine2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingAddress.city",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingAddress.company",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingAddress.countryIso2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingAddress.countryIso2[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "shippingAddress.firstName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingAddress.lastName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingAddress.postcode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingAddress.state",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.addressLine1",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.addressLine2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.city",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.company",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.countryIso2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.countryIso2[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "billingAddress.firstName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.lastName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.postcode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.state",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fulfillmentStatus",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fulfillmentStatus[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "subtotal",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subtotal[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "total",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "total[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "subtotal[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subtotal[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subtotal[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subtotal[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subtotal[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "total[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "total[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "total[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "total[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "total[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/teams\/{id}\/workspaces\/{workspaces}\/orders\/{orders}\/items": {
      "get": {
        "tags": [
          "OrderItem",
          "Order"
        ],
        "operationId": "api_teams_workspaces_orders_items_get_subresource",
        "summary": "Retrieves the collection of OrderItem resources.",
        "responses": {
          "200": {
            "description": "OrderItem collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/OrderItem:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/OrderItem-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/OrderItem-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/OrderItem-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspaces",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orders",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "productName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspace.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspace.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "order[id]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[productName]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[qty]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[price]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "qty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "qty[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "price",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "qty[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/teams\/{id}\/workspaces\/{workspaces}\/orders\/{orders}\/items\/{items}\/shipment_items": {
      "get": {
        "tags": [
          "ShipmentItem",
          "OrderItem"
        ],
        "operationId": "api_teams_workspaces_orders_items_shipment_items_get_subresource",
        "summary": "Retrieves the collection of ShipmentItem resources.",
        "responses": {
          "200": {
            "description": "ShipmentItem collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/ShipmentItem:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspaces",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orders",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "items",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "shipment.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipment.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "shipment.trackingNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderItem.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderItem.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "orderItem.order.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderItem.order.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "workspace.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspace.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "order[id]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[qty]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "qty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "qty[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "qty[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/teams\/{id}\/workspaces\/{workspaces}\/shipments": {
      "get": {
        "tags": [
          "Shipment",
          "Workspace"
        ],
        "operationId": "api_teams_workspaces_shipments_get_subresource",
        "summary": "Retrieves the collection of Shipment resources.",
        "responses": {
          "200": {
            "description": "Shipment collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Shipment:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Shipment-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Shipment-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Shipment-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspaces",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order[id]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[trackingNumber]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[trackingStatus]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shipmentStatus.code]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[originCarrier]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[destinationCarrier]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[updatedAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippedAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[lastStatusUpdate]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[expectedDeliveryDate]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[originCountry]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[destinationCountry]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[originCountryIso2]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[destinationCountryIso2]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[email]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[phoneNumber]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[daysInTransit]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[reviewTotalScore]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.addressLine1]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.addressLine2]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.city]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.company]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.countryIso2]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.firstName]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.lastName]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.postcode]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.state]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "orderNumbers",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderNumbers[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "deepObject",
            "explode": true
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedAt[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedAt[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedAt[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedAt[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastStatusUpdate[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastStatusUpdate[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastStatusUpdate[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastStatusUpdate[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expectedDeliveryDate[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expectedDeliveryDate[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expectedDeliveryDate[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expectedDeliveryDate[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "trackingNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trackingStatus",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trackingStatus[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "shipmentStatus.code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipmentStatus.code[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "originCarrier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "originCarrier[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "destinationCarrier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destinationCarrier[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "originCountry",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "originCountryIso2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "originCountryIso2[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "destinationCountry",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destinationCountryIso2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destinationCountryIso2[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phoneNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.addressLine1",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.addressLine2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.city",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.company",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.countryIso2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.countryIso2[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "address.firstName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.lastName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.postcode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.state",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "daysInTransit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "daysInTransit[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "daysInTransit[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "daysInTransit[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "daysInTransit[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "daysInTransit[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "daysInTransit[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reviewTotalScore[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reviewTotalScore[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reviewTotalScore[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reviewTotalScore[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reviewTotalScore[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/teams\/{id}\/workspaces\/{workspaces}\/shipments\/{shipments}\/checkpoints": {
      "get": {
        "tags": [
          "TrackingCheckpoint",
          "Shipment"
        ],
        "operationId": "api_teams_workspaces_shipments_checkpoints_get_subresource",
        "summary": "Retrieves the collection of TrackingCheckpoint resources.",
        "responses": {
          "200": {
            "description": "TrackingCheckpoint collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/TrackingCheckpoint:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TrackingCheckpoint-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TrackingCheckpoint-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TrackingCheckpoint-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspaces",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipments",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order[checkpointDate]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/teams\/{id}\/workspaces\/{workspaces}\/shipments\/{shipments}\/shipment_items": {
      "get": {
        "tags": [
          "ShipmentItem",
          "Shipment"
        ],
        "operationId": "api_teams_workspaces_shipments_shipment_items_get_subresource",
        "summary": "Retrieves the collection of ShipmentItem resources.",
        "responses": {
          "200": {
            "description": "ShipmentItem collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/ShipmentItem:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspaces",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipments",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "shipment.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipment.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "shipment.trackingNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderItem.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderItem.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "orderItem.order.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderItem.order.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "workspace.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspace.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "order[id]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[qty]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "qty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "qty[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "qty[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/teams\/{id}\/workspaces\/{workspaces}\/statuses": {
      "get": {
        "tags": [
          "Status",
          "Workspace"
        ],
        "operationId": "api_teams_workspaces_statuses_get_subresource",
        "summary": "Retrieves the collection of Status resources.",
        "responses": {
          "200": {
            "description": "Status collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Status:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Status-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Status-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Status-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspaces",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entity",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order[entity]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[code]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[title]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/teams\/{id}\/workspaces\/{workspaces}\/tracking_pages": {
      "get": {
        "tags": [
          "TrackingPage",
          "Workspace"
        ],
        "operationId": "api_teams_workspaces_tracking_pages_get_subresource",
        "summary": "Retrieves the collection of TrackingPage resources.",
        "responses": {
          "200": {
            "description": "TrackingPage collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/TrackingPage:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TrackingPage-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TrackingPage-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TrackingPage-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspaces",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/teams\/{id}\/workspaces\/{workspaces}\/workflows": {
      "get": {
        "tags": [
          "Workflow",
          "Workspace"
        ],
        "operationId": "api_teams_workspaces_workflows_get_subresource",
        "summary": "Retrieves the collection of Workflow resources.",
        "responses": {
          "200": {
            "description": "Workflow collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Workflow:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Workflow-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Workflow-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Workflow-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspaces",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exists[integration]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "firstTimeSetupPassed",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "first_time_setup_required",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/teams\/{id}\/workspaces\/{workspaces}\/workflows\/{workflows}\/runs": {
      "get": {
        "tags": [
          "WorkflowRun",
          "Workflow"
        ],
        "operationId": "api_teams_workspaces_workflows_runs_get_subresource",
        "summary": "Retrieves the collection of WorkflowRun resources.",
        "responses": {
          "200": {
            "description": "WorkflowRun collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/WorkflowRun:jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/WorkflowRun"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/WorkflowRun"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/WorkflowRun"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspaces",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflows",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/test\/load-fixtures": {
      "post": {
        "tags": [
          "LoadDatabaseFixturesRequest"
        ],
        "operationId": "postLoadDatabaseFixturesRequestCollection",
        "summary": "Creates a LoadDatabaseFixturesRequest resource.",
        "responses": {
          "201": {
            "description": "LoadDatabaseFixturesRequest resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/LoadDatabaseFixturesRequest:76bb9dbd6a178681462e873fc4169938:jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/LoadDatabaseFixturesRequest:76bb9dbd6a178681462e873fc4169938"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/LoadDatabaseFixturesRequest:76bb9dbd6a178681462e873fc4169938"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/LoadDatabaseFixturesRequest:76bb9dbd6a178681462e873fc4169938"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/LoadDatabaseFixturesRequest:jsonld"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/LoadDatabaseFixturesRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/LoadDatabaseFixturesRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/LoadDatabaseFixturesRequest"
              }
            }
          },
          "description": "The new LoadDatabaseFixturesRequest resource"
        }
      }
    },
    "\/timezones": {
      "get": {
        "tags": [
          "Timezone"
        ],
        "operationId": "getTimezoneCollection",
        "summary": "Retrieves the collection of Timezone resources.",
        "responses": {
          "200": {
            "description": "Timezone collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Timezone:jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Timezone"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Timezone"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Timezone"
                  }
                }
              }
            }
          }
        },
        "parameters": []
      }
    },
    "\/timezones\/{id}": {
      "get": {
        "tags": [
          "Timezone"
        ],
        "operationId": "getTimezoneItem",
        "summary": "Retrieves a Timezone resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Timezone resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Timezone:jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Timezone"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Timezone"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Timezone"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "\/tracking_checkpoints": {
      "get": {
        "tags": [
          "TrackingCheckpoint"
        ],
        "operationId": "getTrackingCheckpointCollection",
        "summary": "Retrieves the collection of TrackingCheckpoint resources.",
        "responses": {
          "200": {
            "description": "TrackingCheckpoint collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/TrackingCheckpoint:jsonld-Getc"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TrackingCheckpoint-Getc"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TrackingCheckpoint-Getc"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TrackingCheckpoint-Getc"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "order[checkpointDate]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/tracking_checkpoints\/{id}": {
      "get": {
        "tags": [
          "TrackingCheckpoint"
        ],
        "operationId": "getTrackingCheckpointItem",
        "summary": "Retrieves a TrackingCheckpoint resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TrackingCheckpoint resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TrackingCheckpoint:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TrackingCheckpoint-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TrackingCheckpoint-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TrackingCheckpoint-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "\/tracking_pages": {
      "get": {
        "tags": [
          "TrackingPage"
        ],
        "operationId": "getTrackingPageCollection",
        "summary": "Retrieves the collection of TrackingPage resources.",
        "responses": {
          "200": {
            "description": "TrackingPage collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/TrackingPage:jsonld-Getc"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TrackingPage-Getc"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TrackingPage-Getc"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TrackingPage-Getc"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      },
      "post": {
        "tags": [
          "TrackingPage"
        ],
        "operationId": "postTrackingPageCollection",
        "summary": "Creates a TrackingPage resource.",
        "responses": {
          "201": {
            "description": "TrackingPage resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TrackingPage:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TrackingPage-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TrackingPage-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TrackingPage-Get"
                }
              }
            },
            "links": {
              "GetTrackingPageItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getTrackingPageItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/tracking_pages\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/TrackingPage:jsonld-Post"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/TrackingPage-Post"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/TrackingPage-Post"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/TrackingPage-Post"
              }
            }
          },
          "description": "The new TrackingPage resource"
        }
      }
    },
    "\/tracking_pages\/{id}": {
      "get": {
        "tags": [
          "TrackingPage"
        ],
        "operationId": "getTrackingPageItem",
        "summary": "Retrieves a TrackingPage resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TrackingPage resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TrackingPage:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TrackingPage-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TrackingPage-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TrackingPage-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "put": {
        "tags": [
          "TrackingPage"
        ],
        "operationId": "putTrackingPageItem",
        "summary": "Replaces the TrackingPage resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TrackingPage resource updated",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TrackingPage:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TrackingPage-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TrackingPage-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/TrackingPage-Get"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/TrackingPage:jsonld-Put"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/TrackingPage-Put"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/TrackingPage-Put"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/TrackingPage-Put"
              }
            }
          },
          "description": "The updated TrackingPage resource"
        }
      },
      "delete": {
        "tags": [
          "TrackingPage"
        ],
        "operationId": "deleteTrackingPageItem",
        "summary": "Removes the TrackingPage resource.",
        "responses": {
          "204": {
            "description": "TrackingPage resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "\/users\/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "getUserItem",
        "summary": "Retrieves a User resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/User:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/User-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/User-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/User-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "operationId": "putUserItem",
        "summary": "Replaces the User resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User resource updated",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/User:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/User-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/User-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/User-Get"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/User:jsonld-Put"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/User-Put"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/User-Put"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/User-Put"
              }
            }
          },
          "description": "The updated User resource"
        }
      }
    },
    "\/users\/{id}\/notifications": {
      "get": {
        "tags": [
          "Notification",
          "User"
        ],
        "operationId": "api_users_notifications_get_subresource",
        "summary": "Retrieves the collection of Notification resources.",
        "responses": {
          "200": {
            "description": "Notification collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Notification:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Notification-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Notification-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Notification-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "message",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "unread",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/users\/{id}\/team_members": {
      "get": {
        "tags": [
          "TeamMember",
          "User"
        ],
        "operationId": "api_users_team_members_get_subresource",
        "summary": "Retrieves the collection of TeamMember resources.",
        "responses": {
          "200": {
            "description": "TeamMember collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/TeamMember:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TeamMember-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TeamMember-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TeamMember-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "member.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "member.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "teamAdminOrHasWorkspace",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/workflow_runs": {
      "get": {
        "tags": [
          "WorkflowRun"
        ],
        "operationId": "getWorkflowRunCollection",
        "summary": "Retrieves the collection of WorkflowRun resources.",
        "responses": {
          "200": {
            "description": "WorkflowRun collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/WorkflowRun:jsonld-Getc"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/WorkflowRun-Getc"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/WorkflowRun-Getc"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/WorkflowRun-Getc"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/workflow_runs\/{id}": {
      "get": {
        "tags": [
          "WorkflowRun"
        ],
        "operationId": "getWorkflowRunItem",
        "summary": "Retrieves a WorkflowRun resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "WorkflowRun resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/WorkflowRun:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/WorkflowRun-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/WorkflowRun-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/WorkflowRun-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "\/workflows": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "operationId": "getWorkflowCollection",
        "summary": "Retrieves the collection of Workflow resources.",
        "responses": {
          "200": {
            "description": "Workflow collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Workflow:jsonld-Getc"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Workflow-Getc"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Workflow-Getc"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Workflow-Getc"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exists[integration]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "firstTimeSetupPassed",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "first_time_setup_required",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Workflow"
        ],
        "operationId": "postWorkflowCollection",
        "summary": "Creates a Workflow resource.",
        "responses": {
          "201": {
            "description": "Workflow resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workflow:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workflow-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workflow-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workflow-Get"
                }
              }
            },
            "links": {
              "GetWorkflowItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getWorkflowItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/workflows\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Workflow:jsonld-Post"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Workflow-Post"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Workflow-Post"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Workflow-Post"
              }
            }
          },
          "description": "The new Workflow resource"
        }
      }
    },
    "\/workflows\/execute": {
      "post": {
        "tags": [
          "Workflow"
        ],
        "operationId": "executeWorkflowCollection",
        "summary": "Creates a Workflow resource.",
        "responses": {
          "200": {
            "description": "Workflow resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workflow:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workflow-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workflow-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workflow-Get"
                }
              }
            },
            "links": {
              "GetWorkflowItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getWorkflowItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/workflows\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Workflow:eeeece1a88d1796f3bf20eb571d2731c:jsonld-setExecuteWorkflowRequest"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Workflow:eeeece1a88d1796f3bf20eb571d2731c-setExecuteWorkflowRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Workflow:eeeece1a88d1796f3bf20eb571d2731c-setExecuteWorkflowRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Workflow:eeeece1a88d1796f3bf20eb571d2731c-setExecuteWorkflowRequest"
              }
            }
          },
          "description": "The new Workflow resource"
        }
      }
    },
    "\/workflows\/submit-suggestion": {
      "post": {
        "tags": [
          "Workflow"
        ],
        "operationId": "submit_suggestionWorkflowCollection",
        "summary": "Creates a Workflow resource.",
        "responses": {
          "200": {
            "description": "Workflow resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workflow:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workflow-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workflow-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workflow-Get"
                }
              }
            },
            "links": {
              "GetWorkflowItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getWorkflowItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/workflows\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Workflow:5e8b6666cb03cdbeb497c933811f7225:jsonld-setSubmitSuggestionRequest"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Workflow:5e8b6666cb03cdbeb497c933811f7225-setSubmitSuggestionRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Workflow:5e8b6666cb03cdbeb497c933811f7225-setSubmitSuggestionRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Workflow:5e8b6666cb03cdbeb497c933811f7225-setSubmitSuggestionRequest"
              }
            }
          },
          "description": "The new Workflow resource"
        }
      }
    },
    "\/workflows\/{id}": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "operationId": "getWorkflowItem",
        "summary": "Retrieves a Workflow resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workflow:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workflow-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workflow-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workflow-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "put": {
        "tags": [
          "Workflow"
        ],
        "operationId": "putWorkflowItem",
        "summary": "Replaces the Workflow resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow resource updated",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workflow:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workflow-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workflow-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workflow-Get"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Workflow:jsonld-Put"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Workflow-Put"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Workflow-Put"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Workflow-Put"
              }
            }
          },
          "description": "The updated Workflow resource"
        }
      },
      "delete": {
        "tags": [
          "Workflow"
        ],
        "operationId": "deleteWorkflowItem",
        "summary": "Removes the Workflow resource.",
        "responses": {
          "204": {
            "description": "Workflow resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "\/workflows\/{id}\/runs": {
      "get": {
        "tags": [
          "WorkflowRun",
          "Workflow"
        ],
        "operationId": "api_workflows_runs_get_subresource",
        "summary": "Retrieves the collection of WorkflowRun resources.",
        "responses": {
          "200": {
            "description": "WorkflowRun collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/WorkflowRun:jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/WorkflowRun"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/WorkflowRun"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/WorkflowRun"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/workspace_members": {
      "get": {
        "tags": [
          "WorkspaceMember"
        ],
        "operationId": "getWorkspaceMemberCollection",
        "summary": "Retrieves the collection of WorkspaceMember resources.",
        "responses": {
          "200": {
            "description": "WorkspaceMember collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/WorkspaceMember:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/WorkspaceMember-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/WorkspaceMember-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/WorkspaceMember-Get"
                  }
                }
              }
            }
          }
        },
        "parameters": []
      }
    },
    "\/workspace_members\/{id}": {
      "get": {
        "tags": [
          "WorkspaceMember"
        ],
        "operationId": "getWorkspaceMemberItem",
        "summary": "Retrieves a WorkspaceMember resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "WorkspaceMember resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/WorkspaceMember:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/WorkspaceMember-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/WorkspaceMember-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/WorkspaceMember-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "put": {
        "tags": [
          "WorkspaceMember"
        ],
        "operationId": "putWorkspaceMemberItem",
        "summary": "Replaces the WorkspaceMember resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "WorkspaceMember resource updated",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/WorkspaceMember:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/WorkspaceMember-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/WorkspaceMember-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/WorkspaceMember-Get"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/WorkspaceMember:jsonld-Post"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/WorkspaceMember-Post"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/WorkspaceMember-Post"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/WorkspaceMember-Post"
              }
            }
          },
          "description": "The updated WorkspaceMember resource"
        }
      },
      "delete": {
        "tags": [
          "WorkspaceMember"
        ],
        "operationId": "deleteWorkspaceMemberItem",
        "summary": "Removes the WorkspaceMember resource.",
        "responses": {
          "204": {
            "description": "WorkspaceMember resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "\/workspace_permissions_batch": {
      "post": {
        "tags": [
          "ApplyWorkspacePermissionsBatchRequest"
        ],
        "operationId": "postApplyWorkspacePermissionsBatchRequestCollection",
        "summary": "Creates a ApplyWorkspacePermissionsBatchRequest resource.",
        "responses": {
          "201": {
            "description": "ApplyWorkspacePermissionsBatchRequest resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ApplyWorkspacePermissionsBatchRequest:jsonld"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ApplyWorkspacePermissionsBatchRequest"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ApplyWorkspacePermissionsBatchRequest"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/ApplyWorkspacePermissionsBatchRequest"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/ApplyWorkspacePermissionsBatchRequest:jsonld"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/ApplyWorkspacePermissionsBatchRequest"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/ApplyWorkspacePermissionsBatchRequest"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/ApplyWorkspacePermissionsBatchRequest"
              }
            }
          },
          "description": "The new ApplyWorkspacePermissionsBatchRequest resource"
        }
      }
    },
    "\/workspaces": {
      "get": {
        "tags": [
          "Workspace"
        ],
        "operationId": "getWorkspaceCollection",
        "summary": "Retrieves the collection of Workspace resources.",
        "responses": {
          "200": {
            "description": "Workspace collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Workspace:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Workspace-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Workspace-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Workspace-Get"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "order[createdAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Workspace"
        ],
        "operationId": "postWorkspaceCollection",
        "summary": "Creates a Workspace resource.",
        "responses": {
          "201": {
            "description": "Workspace resource created",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workspace:jsonld-Getp"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workspace-Getp"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workspace-Getp"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workspace-Getp"
                }
              }
            },
            "links": {
              "GetWorkspaceItem": {
                "parameters": {
                  "id": "$response.body#\/id"
                },
                "operationId": "getWorkspaceItem",
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET \/workspaces\/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Workspace:jsonld-Post"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Workspace-Post"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Workspace-Post"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Workspace-Post"
              }
            }
          },
          "description": "The new Workspace resource"
        }
      }
    },
    "\/workspaces\/{id}": {
      "get": {
        "tags": [
          "Workspace"
        ],
        "operationId": "getWorkspaceItem",
        "summary": "Retrieves a Workspace resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Workspace resource response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workspace:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workspace-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workspace-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workspace-Get"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Workspace"
        ],
        "operationId": "deleteWorkspaceItem",
        "summary": "Removes the Workspace resource.",
        "responses": {
          "204": {
            "description": "Workspace resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "tags": [
          "Workspace"
        ],
        "operationId": "putWorkspaceItem",
        "summary": "Replaces the Workspace resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Workspace resource updated",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workspace:jsonld-Get"
                }
              },
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workspace-Get"
                }
              },
              "text\/csv": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workspace-Get"
                }
              },
              "text\/html": {
                "schema": {
                  "$ref": "#\/components\/schemas\/Workspace-Get"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "content": {
            "application\/ld+json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Workspace:jsonld-Put"
              }
            },
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/Workspace-Put"
              }
            },
            "text\/csv": {
              "schema": {
                "$ref": "#\/components\/schemas\/Workspace-Put"
              }
            },
            "text\/html": {
              "schema": {
                "$ref": "#\/components\/schemas\/Workspace-Put"
              }
            }
          },
          "description": "The updated Workspace resource"
        }
      }
    },
    "\/workspaces\/{id}\/email_notifications": {
      "get": {
        "tags": [
          "EmailNotification",
          "Workspace"
        ],
        "operationId": "api_workspaces_email_notifications_get_subresource",
        "summary": "Retrieves the collection of EmailNotification resources.",
        "responses": {
          "200": {
            "description": "EmailNotification collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/EmailNotification:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/EmailNotification-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/EmailNotification-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/EmailNotification-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "event",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastEmailSentAt[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastEmailSentAt[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastEmailSentAt[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastEmailSentAt[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/workspaces\/{id}\/notes": {
      "get": {
        "tags": [
          "Note",
          "Workspace"
        ],
        "operationId": "api_workspaces_notes_get_subresource",
        "summary": "Retrieves the collection of Note resources.",
        "responses": {
          "200": {
            "description": "Note collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Note:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Note-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Note-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Note-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entity",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entity[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "entityId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityId[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/workspaces\/{id}\/orders": {
      "get": {
        "tags": [
          "Order",
          "Workspace"
        ],
        "operationId": "api_workspaces_orders_get_subresource",
        "summary": "Retrieves the collection of Order resources.",
        "responses": {
          "200": {
            "description": "Order collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Order:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Order-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Order-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Order-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order[id]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[orderNumber]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[email]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[phoneNumber]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[orderStatus.code]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[subtotal]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[total]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[updatedAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.addressLine1]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.addressLine2]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.city]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.company]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.countryIso2]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.firstName]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.lastName]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.postcode]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippingAddress.state]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.addressLine1]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.addressLine2]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.city]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.company]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.countryIso2]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.firstName]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.lastName]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.postcode]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[billingAddress.state]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[fulfillmentStatus]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "orderNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phoneNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderStatus.code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderStatus.code[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "orderType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderType[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "shippingAddress.addressLine1",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingAddress.addressLine2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingAddress.city",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingAddress.company",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingAddress.countryIso2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingAddress.countryIso2[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "shippingAddress.firstName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingAddress.lastName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingAddress.postcode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippingAddress.state",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.addressLine1",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.addressLine2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.city",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.company",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.countryIso2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.countryIso2[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "billingAddress.firstName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.lastName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.postcode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingAddress.state",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fulfillmentStatus",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fulfillmentStatus[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "subtotal",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subtotal[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "total",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "total[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "subtotal[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subtotal[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subtotal[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subtotal[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subtotal[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "total[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "total[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "total[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "total[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "total[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/workspaces\/{id}\/orders\/{orders}\/items": {
      "get": {
        "tags": [
          "OrderItem",
          "Order"
        ],
        "operationId": "api_workspaces_orders_items_get_subresource",
        "summary": "Retrieves the collection of OrderItem resources.",
        "responses": {
          "200": {
            "description": "OrderItem collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/OrderItem:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/OrderItem-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/OrderItem-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/OrderItem-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orders",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "productName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspace.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspace.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "order[id]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[productName]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[qty]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[price]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "qty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "qty[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "price",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "qty[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/workspaces\/{id}\/orders\/{orders}\/items\/{items}\/shipment_items": {
      "get": {
        "tags": [
          "ShipmentItem",
          "OrderItem"
        ],
        "operationId": "api_workspaces_orders_items_shipment_items_get_subresource",
        "summary": "Retrieves the collection of ShipmentItem resources.",
        "responses": {
          "200": {
            "description": "ShipmentItem collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/ShipmentItem:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orders",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "items",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "shipment.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipment.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "shipment.trackingNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderItem.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderItem.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "orderItem.order.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderItem.order.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "workspace.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspace.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "order[id]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[qty]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "qty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "qty[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "qty[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/workspaces\/{id}\/shipments": {
      "get": {
        "tags": [
          "Shipment",
          "Workspace"
        ],
        "operationId": "api_workspaces_shipments_get_subresource",
        "summary": "Retrieves the collection of Shipment resources.",
        "responses": {
          "200": {
            "description": "Shipment collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Shipment:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Shipment-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Shipment-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Shipment-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order[id]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[trackingNumber]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[trackingStatus]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shipmentStatus.code]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[originCarrier]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[destinationCarrier]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[updatedAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[shippedAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[lastStatusUpdate]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[expectedDeliveryDate]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[originCountry]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[destinationCountry]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[originCountryIso2]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[destinationCountryIso2]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[email]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[phoneNumber]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[daysInTransit]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[reviewTotalScore]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.addressLine1]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.addressLine2]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.city]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.company]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.countryIso2]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.firstName]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.lastName]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.postcode]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[address.state]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "orderNumbers",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderNumbers[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "deepObject",
            "explode": true
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedAt[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedAt[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedAt[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedAt[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastStatusUpdate[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastStatusUpdate[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastStatusUpdate[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastStatusUpdate[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expectedDeliveryDate[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expectedDeliveryDate[strictly_before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expectedDeliveryDate[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expectedDeliveryDate[strictly_after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "trackingNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trackingStatus",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trackingStatus[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "shipmentStatus.code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipmentStatus.code[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "originCarrier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "originCarrier[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "destinationCarrier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destinationCarrier[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "originCountry",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "originCountryIso2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "originCountryIso2[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "destinationCountry",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destinationCountryIso2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destinationCountryIso2[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phoneNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.addressLine1",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.addressLine2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.city",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.company",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.countryIso2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.countryIso2[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "address.firstName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.lastName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.postcode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address.state",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "daysInTransit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "daysInTransit[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "daysInTransit[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "daysInTransit[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "daysInTransit[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "daysInTransit[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "daysInTransit[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reviewTotalScore[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reviewTotalScore[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reviewTotalScore[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reviewTotalScore[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reviewTotalScore[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/workspaces\/{id}\/shipments\/{shipments}\/checkpoints": {
      "get": {
        "tags": [
          "TrackingCheckpoint",
          "Shipment"
        ],
        "operationId": "api_workspaces_shipments_checkpoints_get_subresource",
        "summary": "Retrieves the collection of TrackingCheckpoint resources.",
        "responses": {
          "200": {
            "description": "TrackingCheckpoint collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/TrackingCheckpoint:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TrackingCheckpoint-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TrackingCheckpoint-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TrackingCheckpoint-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipments",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order[checkpointDate]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/workspaces\/{id}\/shipments\/{shipments}\/shipment_items": {
      "get": {
        "tags": [
          "ShipmentItem",
          "Shipment"
        ],
        "operationId": "api_workspaces_shipments_shipment_items_get_subresource",
        "summary": "Retrieves the collection of ShipmentItem resources.",
        "responses": {
          "200": {
            "description": "ShipmentItem collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/ShipmentItem:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/ShipmentItem-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipments",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "shipment.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipment.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "shipment.trackingNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderItem.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderItem.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "orderItem.order.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderItem.order.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "workspace.id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspace.id[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "order[id]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[qty]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "qty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "qty[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "qty[between]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[gt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[gte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[lt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty[lte]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/workspaces\/{id}\/statuses": {
      "get": {
        "tags": [
          "Status",
          "Workspace"
        ],
        "operationId": "api_workspaces_statuses_get_subresource",
        "summary": "Retrieves the collection of Status resources.",
        "responses": {
          "200": {
            "description": "Status collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Status:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Status-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Status-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Status-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entity",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order[entity]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[code]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "order[title]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/workspaces\/{id}\/tracking_pages": {
      "get": {
        "tags": [
          "TrackingPage",
          "Workspace"
        ],
        "operationId": "api_workspaces_tracking_pages_get_subresource",
        "summary": "Retrieves the collection of TrackingPage resources.",
        "responses": {
          "200": {
            "description": "TrackingPage collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/TrackingPage:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TrackingPage-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TrackingPage-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/TrackingPage-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/workspaces\/{id}\/workflows": {
      "get": {
        "tags": [
          "Workflow",
          "Workspace"
        ],
        "operationId": "api_workspaces_workflows_get_subresource",
        "summary": "Retrieves the collection of Workflow resources.",
        "responses": {
          "200": {
            "description": "Workflow collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/Workflow:jsonld-Get"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Workflow-Get"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Workflow-Get"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/Workflow-Get"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exists[integration]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "firstTimeSetupPassed",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "first_time_setup_required",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    },
    "\/workspaces\/{id}\/workflows\/{workflows}\/runs": {
      "get": {
        "tags": [
          "WorkflowRun",
          "Workflow"
        ],
        "operationId": "api_workspaces_workflows_runs_get_subresource",
        "summary": "Retrieves the collection of WorkflowRun resources.",
        "responses": {
          "200": {
            "description": "WorkflowRun collection response",
            "content": {
              "application\/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#\/components\/schemas\/WorkflowRun:jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/WorkflowRun"
                  }
                }
              },
              "text\/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/WorkflowRun"
                  }
                }
              },
              "text\/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/WorkflowRun"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflows",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            }
          }
        ]
      }
    }
  },
  "security": [
    {
      "oauth": []
    }
  ],
  "components": {
    "schemas": {
      "Address-Get": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "nullable": true,
            "description": "The street address. This field is optional.",
            "example": "567 East Cedar",
            "type": "string"
          },
          "addressLine2": {
            "nullable": true,
            "description": "An optional additional field for the street address. This field is optional.",
            "example": "Apartment 1",
            "type": "string"
          },
          "city": {
            "nullable": true,
            "description": "The city, town, or village. This field is optional.",
            "example": "Liberal",
            "type": "string"
          },
          "company": {
            "nullable": true,
            "description": "The company of the person associated with the address. This field is optional.",
            "example": "Acme, Inc.",
            "type": "string"
          },
          "country": {
            "nullable": true,
            "description": "The name of the country. This field is optional.",
            "example": "United States",
            "type": "string"
          },
          "countryIso2": {
            "nullable": true,
            "description": "The two-letter country code. This field is optional.",
            "example": "US",
            "type": "string"
          },
          "firstName": {
            "nullable": true,
            "description": "The first name of the person associated with the address. This field is optional.",
            "example": "Dorothy",
            "type": "string"
          },
          "lastName": {
            "nullable": true,
            "description": "The last name of the person associated with the address. This field is optional.",
            "example": "Gale",
            "type": "string"
          },
          "postcode": {
            "nullable": true,
            "description": "The postal code (zip, postcode, Eircode, \u2026). This field is optional.",
            "example": 67901,
            "type": "string"
          },
          "state": {
            "nullable": true,
            "description": "The name of the region (province, state, prefecture, \u2026). This field is optional.",
            "example": "Kansas",
            "type": "string"
          }
        }
      },
      "Address-Getc": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "nullable": true,
            "description": "The street address. This field is optional.",
            "example": "567 East Cedar",
            "type": "string"
          },
          "addressLine2": {
            "nullable": true,
            "description": "An optional additional field for the street address. This field is optional.",
            "example": "Apartment 1",
            "type": "string"
          },
          "city": {
            "nullable": true,
            "description": "The city, town, or village. This field is optional.",
            "example": "Liberal",
            "type": "string"
          },
          "company": {
            "nullable": true,
            "description": "The company of the person associated with the address. This field is optional.",
            "example": "Acme, Inc.",
            "type": "string"
          },
          "country": {
            "nullable": true,
            "description": "The name of the country. This field is optional.",
            "example": "United States",
            "type": "string"
          },
          "countryIso2": {
            "nullable": true,
            "description": "The two-letter country code. This field is optional.",
            "example": "US",
            "type": "string"
          },
          "firstName": {
            "nullable": true,
            "description": "The first name of the person associated with the address. This field is optional.",
            "example": "Dorothy",
            "type": "string"
          },
          "lastName": {
            "nullable": true,
            "description": "The last name of the person associated with the address. This field is optional.",
            "example": "Gale",
            "type": "string"
          },
          "postcode": {
            "nullable": true,
            "description": "The postal code (zip, postcode, Eircode, \u2026). This field is optional.",
            "example": 67901,
            "type": "string"
          },
          "state": {
            "nullable": true,
            "description": "The name of the region (province, state, prefecture, \u2026). This field is optional.",
            "example": "Kansas",
            "type": "string"
          }
        }
      },
      "Address-Post": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "nullable": true,
            "description": "The street address. This field is optional.",
            "example": "567 East Cedar",
            "type": "string"
          },
          "addressLine2": {
            "nullable": true,
            "description": "An optional additional field for the street address. This field is optional.",
            "example": "Apartment 1",
            "type": "string"
          },
          "city": {
            "nullable": true,
            "description": "The city, town, or village. This field is optional.",
            "example": "Liberal",
            "type": "string"
          },
          "company": {
            "nullable": true,
            "description": "The company of the person associated with the address. This field is optional.",
            "example": "Acme, Inc.",
            "type": "string"
          },
          "country": {
            "nullable": true,
            "description": "The name of the country. This field is optional.",
            "example": "United States",
            "type": "string"
          },
          "countryIso2": {
            "nullable": true,
            "description": "The two-letter country code. This field is optional.",
            "example": "US",
            "type": "string"
          },
          "firstName": {
            "nullable": true,
            "description": "The first name of the person associated with the address. This field is optional.",
            "example": "Dorothy",
            "type": "string"
          },
          "lastName": {
            "nullable": true,
            "description": "The last name of the person associated with the address. This field is optional.",
            "example": "Gale",
            "type": "string"
          },
          "postcode": {
            "nullable": true,
            "description": "The postal code (zip, postcode, Eircode, \u2026). This field is optional.",
            "example": 67901,
            "type": "string"
          },
          "state": {
            "nullable": true,
            "description": "The name of the region (province, state, prefecture, \u2026). This field is optional.",
            "example": "Kansas",
            "type": "string"
          }
        }
      },
      "Address-Put": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "nullable": true,
            "description": "The street address. This field is optional.",
            "example": "567 East Cedar",
            "type": "string"
          },
          "addressLine2": {
            "nullable": true,
            "description": "An optional additional field for the street address. This field is optional.",
            "example": "Apartment 1",
            "type": "string"
          },
          "city": {
            "nullable": true,
            "description": "The city, town, or village. This field is optional.",
            "example": "Liberal",
            "type": "string"
          },
          "company": {
            "nullable": true,
            "description": "The company of the person associated with the address. This field is optional.",
            "example": "Acme, Inc.",
            "type": "string"
          },
          "country": {
            "nullable": true,
            "description": "The name of the country. This field is optional.",
            "example": "United States",
            "type": "string"
          },
          "countryIso2": {
            "nullable": true,
            "description": "The two-letter country code. This field is optional.",
            "example": "US",
            "type": "string"
          },
          "firstName": {
            "nullable": true,
            "description": "The first name of the person associated with the address. This field is optional.",
            "example": "Dorothy",
            "type": "string"
          },
          "lastName": {
            "nullable": true,
            "description": "The last name of the person associated with the address. This field is optional.",
            "example": "Gale",
            "type": "string"
          },
          "postcode": {
            "nullable": true,
            "description": "The postal code (zip, postcode, Eircode, \u2026). This field is optional.",
            "example": 67901,
            "type": "string"
          },
          "state": {
            "nullable": true,
            "description": "The name of the region (province, state, prefecture, \u2026). This field is optional.",
            "example": "Kansas",
            "type": "string"
          }
        }
      },
      "Address:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "addressLine1": {
            "nullable": true,
            "description": "The street address. This field is optional.",
            "example": "567 East Cedar",
            "type": "string"
          },
          "addressLine2": {
            "nullable": true,
            "description": "An optional additional field for the street address. This field is optional.",
            "example": "Apartment 1",
            "type": "string"
          },
          "city": {
            "nullable": true,
            "description": "The city, town, or village. This field is optional.",
            "example": "Liberal",
            "type": "string"
          },
          "company": {
            "nullable": true,
            "description": "The company of the person associated with the address. This field is optional.",
            "example": "Acme, Inc.",
            "type": "string"
          },
          "country": {
            "nullable": true,
            "description": "The name of the country. This field is optional.",
            "example": "United States",
            "type": "string"
          },
          "countryIso2": {
            "nullable": true,
            "description": "The two-letter country code. This field is optional.",
            "example": "US",
            "type": "string"
          },
          "firstName": {
            "nullable": true,
            "description": "The first name of the person associated with the address. This field is optional.",
            "example": "Dorothy",
            "type": "string"
          },
          "lastName": {
            "nullable": true,
            "description": "The last name of the person associated with the address. This field is optional.",
            "example": "Gale",
            "type": "string"
          },
          "postcode": {
            "nullable": true,
            "description": "The postal code (zip, postcode, Eircode, \u2026). This field is optional.",
            "example": 67901,
            "type": "string"
          },
          "state": {
            "nullable": true,
            "description": "The name of the region (province, state, prefecture, \u2026). This field is optional.",
            "example": "Kansas",
            "type": "string"
          }
        }
      },
      "Address:jsonld-Getc": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "addressLine1": {
            "nullable": true,
            "description": "The street address. This field is optional.",
            "example": "567 East Cedar",
            "type": "string"
          },
          "addressLine2": {
            "nullable": true,
            "description": "An optional additional field for the street address. This field is optional.",
            "example": "Apartment 1",
            "type": "string"
          },
          "city": {
            "nullable": true,
            "description": "The city, town, or village. This field is optional.",
            "example": "Liberal",
            "type": "string"
          },
          "company": {
            "nullable": true,
            "description": "The company of the person associated with the address. This field is optional.",
            "example": "Acme, Inc.",
            "type": "string"
          },
          "country": {
            "nullable": true,
            "description": "The name of the country. This field is optional.",
            "example": "United States",
            "type": "string"
          },
          "countryIso2": {
            "nullable": true,
            "description": "The two-letter country code. This field is optional.",
            "example": "US",
            "type": "string"
          },
          "firstName": {
            "nullable": true,
            "description": "The first name of the person associated with the address. This field is optional.",
            "example": "Dorothy",
            "type": "string"
          },
          "lastName": {
            "nullable": true,
            "description": "The last name of the person associated with the address. This field is optional.",
            "example": "Gale",
            "type": "string"
          },
          "postcode": {
            "nullable": true,
            "description": "The postal code (zip, postcode, Eircode, \u2026). This field is optional.",
            "example": 67901,
            "type": "string"
          },
          "state": {
            "nullable": true,
            "description": "The name of the region (province, state, prefecture, \u2026). This field is optional.",
            "example": "Kansas",
            "type": "string"
          }
        }
      },
      "Address:jsonld-Post": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "addressLine1": {
            "nullable": true,
            "description": "The street address. This field is optional.",
            "example": "567 East Cedar",
            "type": "string"
          },
          "addressLine2": {
            "nullable": true,
            "description": "An optional additional field for the street address. This field is optional.",
            "example": "Apartment 1",
            "type": "string"
          },
          "city": {
            "nullable": true,
            "description": "The city, town, or village. This field is optional.",
            "example": "Liberal",
            "type": "string"
          },
          "company": {
            "nullable": true,
            "description": "The company of the person associated with the address. This field is optional.",
            "example": "Acme, Inc.",
            "type": "string"
          },
          "country": {
            "nullable": true,
            "description": "The name of the country. This field is optional.",
            "example": "United States",
            "type": "string"
          },
          "countryIso2": {
            "nullable": true,
            "description": "The two-letter country code. This field is optional.",
            "example": "US",
            "type": "string"
          },
          "firstName": {
            "nullable": true,
            "description": "The first name of the person associated with the address. This field is optional.",
            "example": "Dorothy",
            "type": "string"
          },
          "lastName": {
            "nullable": true,
            "description": "The last name of the person associated with the address. This field is optional.",
            "example": "Gale",
            "type": "string"
          },
          "postcode": {
            "nullable": true,
            "description": "The postal code (zip, postcode, Eircode, \u2026). This field is optional.",
            "example": 67901,
            "type": "string"
          },
          "state": {
            "nullable": true,
            "description": "The name of the region (province, state, prefecture, \u2026). This field is optional.",
            "example": "Kansas",
            "type": "string"
          }
        }
      },
      "Address:jsonld-Put": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "addressLine1": {
            "nullable": true,
            "description": "The street address. This field is optional.",
            "example": "567 East Cedar",
            "type": "string"
          },
          "addressLine2": {
            "nullable": true,
            "description": "An optional additional field for the street address. This field is optional.",
            "example": "Apartment 1",
            "type": "string"
          },
          "city": {
            "nullable": true,
            "description": "The city, town, or village. This field is optional.",
            "example": "Liberal",
            "type": "string"
          },
          "company": {
            "nullable": true,
            "description": "The company of the person associated with the address. This field is optional.",
            "example": "Acme, Inc.",
            "type": "string"
          },
          "country": {
            "nullable": true,
            "description": "The name of the country. This field is optional.",
            "example": "United States",
            "type": "string"
          },
          "countryIso2": {
            "nullable": true,
            "description": "The two-letter country code. This field is optional.",
            "example": "US",
            "type": "string"
          },
          "firstName": {
            "nullable": true,
            "description": "The first name of the person associated with the address. This field is optional.",
            "example": "Dorothy",
            "type": "string"
          },
          "lastName": {
            "nullable": true,
            "description": "The last name of the person associated with the address. This field is optional.",
            "example": "Gale",
            "type": "string"
          },
          "postcode": {
            "nullable": true,
            "description": "The postal code (zip, postcode, Eircode, \u2026). This field is optional.",
            "example": 67901,
            "type": "string"
          },
          "state": {
            "nullable": true,
            "description": "The name of the region (province, state, prefecture, \u2026). This field is optional.",
            "example": "Kansas",
            "type": "string"
          }
        }
      },
      "ApplyWorkspacePermissionsBatchRequest": {
        "type": "object",
        "properties": {
          "changes": {
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/WorkspacePermissionsChange"
            }
          }
        }
      },
      "ApplyWorkspacePermissionsBatchRequest:jsonld": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "changes": {
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/WorkspacePermissionsChange:jsonld"
            }
          }
        }
      },
      "Background-Get": {
        "type": "object",
        "properties": {
          "color": {
            "type": "string",
            "nullable": true
          },
          "useBackgroundImage": {
            "type": "boolean",
            "nullable": true
          },
          "imageUrl": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "backgroundMode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Background:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "useBackgroundImage": {
            "type": "boolean",
            "nullable": true
          },
          "imageUrl": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "backgroundMode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Builder-Get": {
        "type": "object",
        "properties": {
          "background": {
            "$ref": "#\/components\/schemas\/Background-Get"
          },
          "card": {
            "$ref": "#\/components\/schemas\/Card-Get"
          },
          "searchButton": {
            "$ref": "#\/components\/schemas\/Button-Get"
          },
          "detailsButton": {
            "$ref": "#\/components\/schemas\/Button-Get"
          },
          "trackButton": {
            "$ref": "#\/components\/schemas\/Button-Get"
          },
          "searchPageInput": {
            "$ref": "#\/components\/schemas\/Button-Get"
          },
          "searchPageTitle": {
            "$ref": "#\/components\/schemas\/SearchPageTitle-Get"
          },
          "pageScroll": {
            "$ref": "#\/components\/schemas\/PageScroll-Get"
          },
          "scripts": {
            "$ref": "#\/components\/schemas\/Scripts-Get"
          },
          "logo": {
            "$ref": "#\/components\/schemas\/Logo-Get"
          },
          "socialIcons": {
            "$ref": "#\/components\/schemas\/SocialIcons-Get"
          },
          "sidebar": {
            "$ref": "#\/components\/schemas\/Sidebar-Get"
          },
          "footer": {
            "$ref": "#\/components\/schemas\/Footer-Get"
          },
          "header": {
            "$ref": "#\/components\/schemas\/Header-Get"
          },
          "languageMenu": {
            "$ref": "#\/components\/schemas\/LanguageMenu-Get"
          },
          "faviconUrl": {
            "type": "string",
            "nullable": true
          },
          "defaultThemeId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Builder-Post": {
        "type": "object"
      },
      "Builder-Put": {
        "type": "object"
      },
      "Builder:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "background": {
            "$ref": "#\/components\/schemas\/Background:jsonld-Get"
          },
          "card": {
            "$ref": "#\/components\/schemas\/Card:jsonld-Get"
          },
          "searchButton": {
            "$ref": "#\/components\/schemas\/Button:jsonld-Get"
          },
          "detailsButton": {
            "$ref": "#\/components\/schemas\/Button:jsonld-Get"
          },
          "trackButton": {
            "$ref": "#\/components\/schemas\/Button:jsonld-Get"
          },
          "searchPageInput": {
            "$ref": "#\/components\/schemas\/Button:jsonld-Get"
          },
          "searchPageTitle": {
            "$ref": "#\/components\/schemas\/SearchPageTitle:jsonld-Get"
          },
          "pageScroll": {
            "$ref": "#\/components\/schemas\/PageScroll:jsonld-Get"
          },
          "scripts": {
            "$ref": "#\/components\/schemas\/Scripts:jsonld-Get"
          },
          "logo": {
            "$ref": "#\/components\/schemas\/Logo:jsonld-Get"
          },
          "socialIcons": {
            "$ref": "#\/components\/schemas\/SocialIcons:jsonld-Get"
          },
          "sidebar": {
            "$ref": "#\/components\/schemas\/Sidebar:jsonld-Get"
          },
          "footer": {
            "$ref": "#\/components\/schemas\/Footer:jsonld-Get"
          },
          "header": {
            "$ref": "#\/components\/schemas\/Header:jsonld-Get"
          },
          "languageMenu": {
            "$ref": "#\/components\/schemas\/LanguageMenu:jsonld-Get"
          },
          "faviconUrl": {
            "type": "string",
            "nullable": true
          },
          "defaultThemeId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Builder:jsonld-Post": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "Builder:jsonld-Put": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "Button-Get": {
        "type": "object",
        "properties": {
          "on": {
            "type": "boolean",
            "nullable": true
          },
          "font": {
            "$ref": "#\/components\/schemas\/Font-Get"
          },
          "backgroundColor": {
            "type": "string",
            "nullable": true
          },
          "borderColor": {
            "type": "string",
            "nullable": true
          },
          "borderRadius": {
            "type": "integer",
            "nullable": true
          },
          "borderWidth": {
            "type": "integer",
            "nullable": true
          },
          "shadow": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Button:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "on": {
            "type": "boolean",
            "nullable": true
          },
          "font": {
            "$ref": "#\/components\/schemas\/Font:jsonld-Get"
          },
          "backgroundColor": {
            "type": "string",
            "nullable": true
          },
          "borderColor": {
            "type": "string",
            "nullable": true
          },
          "borderRadius": {
            "type": "integer",
            "nullable": true
          },
          "borderWidth": {
            "type": "integer",
            "nullable": true
          },
          "shadow": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Card-Get": {
        "type": "object",
        "properties": {
          "backgroundColor": {
            "type": "string",
            "nullable": true
          },
          "linksColor": {
            "type": "string",
            "nullable": true
          },
          "linksUnderline": {
            "type": "boolean",
            "nullable": true
          },
          "headerBackground": {
            "type": "string",
            "nullable": true
          },
          "footerBackground": {
            "type": "string",
            "nullable": true
          },
          "borderColor": {
            "type": "string",
            "nullable": true
          },
          "borderRadius": {
            "type": "integer",
            "nullable": true
          },
          "borderWidth": {
            "type": "integer",
            "nullable": true
          },
          "shadow": {
            "type": "string",
            "nullable": true
          },
          "font": {
            "$ref": "#\/components\/schemas\/Font-Get"
          }
        }
      },
      "Card:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "backgroundColor": {
            "type": "string",
            "nullable": true
          },
          "linksColor": {
            "type": "string",
            "nullable": true
          },
          "linksUnderline": {
            "type": "boolean",
            "nullable": true
          },
          "headerBackground": {
            "type": "string",
            "nullable": true
          },
          "footerBackground": {
            "type": "string",
            "nullable": true
          },
          "borderColor": {
            "type": "string",
            "nullable": true
          },
          "borderRadius": {
            "type": "integer",
            "nullable": true
          },
          "borderWidth": {
            "type": "integer",
            "nullable": true
          },
          "shadow": {
            "type": "string",
            "nullable": true
          },
          "font": {
            "$ref": "#\/components\/schemas\/Font:jsonld-Get"
          }
        }
      },
      "Carrier-Get": {
        "type": "object",
        "properties": {
          "code": {
            "description": "The carrier code. Used as identifier",
            "example": "china-post",
            "type": "string",
            "nullable": true
          },
          "name": {
            "description": "The carrier name",
            "example": "China Post",
            "type": "string",
            "nullable": true
          },
          "phone": {
            "description": "The carrier phone",
            "example": "+861011185",
            "type": "string",
            "nullable": true
          },
          "url": {
            "description": "The carrier website url",
            "example": "http:\/\/english.chinapost.com.cn\/",
            "type": "string",
            "nullable": true
          },
          "image": {
            "description": "The carrier logo url",
            "type": "string",
            "nullable": true
          },
          "countryIso2Codes": {
            "description": "ISO2 codes of countries this carrier belongs to",
            "example": "CN",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "description": "The carrier description",
            "type": "string",
            "nullable": true
          }
        }
      },
      "Carrier-Getc": {
        "type": "object",
        "properties": {
          "code": {
            "description": "The carrier code. Used as identifier",
            "example": "china-post",
            "type": "string",
            "nullable": true
          },
          "name": {
            "description": "The carrier name",
            "example": "China Post",
            "type": "string",
            "nullable": true
          }
        }
      },
      "Carrier:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "code": {
            "description": "The carrier code. Used as identifier",
            "example": "china-post",
            "type": "string",
            "nullable": true
          },
          "name": {
            "description": "The carrier name",
            "example": "China Post",
            "type": "string",
            "nullable": true
          },
          "phone": {
            "description": "The carrier phone",
            "example": "+861011185",
            "type": "string",
            "nullable": true
          },
          "url": {
            "description": "The carrier website url",
            "example": "http:\/\/english.chinapost.com.cn\/",
            "type": "string",
            "nullable": true
          },
          "image": {
            "description": "The carrier logo url",
            "type": "string",
            "nullable": true
          },
          "countryIso2Codes": {
            "description": "ISO2 codes of countries this carrier belongs to",
            "example": "CN",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "description": "The carrier description",
            "type": "string",
            "nullable": true
          }
        }
      },
      "Carrier:jsonld-Getc": {
        "type": "object",
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "code": {
            "description": "The carrier code. Used as identifier",
            "example": "china-post",
            "type": "string",
            "nullable": true
          },
          "name": {
            "description": "The carrier name",
            "example": "China Post",
            "type": "string",
            "nullable": true
          }
        }
      },
      "CheckTrackingStatusesRequest-CheckTrackingStatusesRequest_setTrackingForCheck": {
        "type": "object",
        "properties": {
          "workspaceId": {
            "type": "string",
            "nullable": true
          },
          "trackingNumbers": {
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/Tracking-CheckTrackingStatusesRequest_setTrackingForCheck"
            },
            "nullable": true
          }
        }
      },
      "CheckTrackingStatusesRequest-CheckTrackingStatusesResponse_getShipment": {
        "type": "object"
      },
      "CheckTrackingStatusesRequest:jsonld-CheckTrackingStatusesRequest_setTrackingForCheck": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "workspaceId": {
            "type": "string",
            "nullable": true
          },
          "trackingNumbers": {
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/Tracking:jsonld-CheckTrackingStatusesRequest_setTrackingForCheck"
            },
            "nullable": true
          }
        }
      },
      "CheckTrackingStatusesRequest:jsonld-CheckTrackingStatusesResponse_getShipment": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "Checkout-Get": {
        "type": "object",
        "required": [
          "plan"
        ],
        "properties": {
          "plan": {
            "type": "string"
          },
          "vat": {
            "type": "number",
            "nullable": true
          },
          "subtotal": {
            "type": "string",
            "nullable": true
          },
          "total": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/CheckoutProduct-Get"
            }
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "paymentStatus": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          }
        }
      },
      "Checkout-Post": {
        "type": "object",
        "required": [
          "plan",
          "email",
          "firstName",
          "lastName",
          "address",
          "city",
          "country"
        ],
        "properties": {
          "plan": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Checkout-postCheckout": {
        "type": "object",
        "required": [
          "plan"
        ],
        "properties": {
          "plan": {
            "type": "string"
          }
        }
      },
      "Checkout-putCheckoutAddress": {
        "type": "object",
        "required": [
          "firstName",
          "lastName",
          "address",
          "city",
          "country"
        ],
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Checkout-putCheckoutEmail": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Checkout:jsonld-Get": {
        "type": "object",
        "required": [
          "plan"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "plan": {
            "type": "string"
          },
          "vat": {
            "type": "number",
            "nullable": true
          },
          "subtotal": {
            "type": "string",
            "nullable": true
          },
          "total": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/CheckoutProduct:jsonld-Get"
            }
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "paymentStatus": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          }
        }
      },
      "Checkout:jsonld-Post": {
        "type": "object",
        "required": [
          "plan",
          "email",
          "firstName",
          "lastName",
          "address",
          "city",
          "country"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "plan": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Checkout:jsonld-postCheckout": {
        "type": "object",
        "required": [
          "plan"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "plan": {
            "type": "string"
          }
        }
      },
      "Checkout:jsonld-putCheckoutAddress": {
        "type": "object",
        "required": [
          "firstName",
          "lastName",
          "address",
          "city",
          "country"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Checkout:jsonld-putCheckoutEmail": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CheckoutProduct-Get": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CheckoutProduct:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CheckoutShopifySubscriptionRequest-setCheckoutShopifySubscriptionRequest": {
        "type": "object",
        "required": [
          "teamId",
          "planId",
          "returnUrl"
        ],
        "properties": {
          "teamId": {
            "type": "string",
            "nullable": true
          },
          "planId": {
            "type": "string",
            "nullable": true
          },
          "returnUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CheckoutShopifySubscriptionRequest:bcbd8da61b5abb533cfb687003d6d4ac": {
        "type": "object",
        "properties": {
          "confirmationUrl": {
            "type": "string"
          }
        }
      },
      "CheckoutShopifySubscriptionRequest:bcbd8da61b5abb533cfb687003d6d4ac:jsonld": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "confirmationUrl": {
            "type": "string"
          }
        }
      },
      "CheckoutShopifySubscriptionRequest:jsonld-setCheckoutShopifySubscriptionRequest": {
        "type": "object",
        "required": [
          "teamId",
          "planId",
          "returnUrl"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "teamId": {
            "type": "string",
            "nullable": true
          },
          "planId": {
            "type": "string",
            "nullable": true
          },
          "returnUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Country": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "preferred": {
            "type": "boolean"
          },
          "stateful": {
            "type": "boolean"
          }
        }
      },
      "Country:jsonld": {
        "type": "object",
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "preferred": {
            "type": "boolean"
          },
          "stateful": {
            "type": "boolean"
          }
        }
      },
      "CreateChargebeeHostedPageCheckoutRequest-setCreateChargebeeHostedPageCheckoutRequest": {
        "type": "object",
        "properties": {
          "intent": {
            "type": "string",
            "nullable": true
          },
          "teamId": {
            "type": "string",
            "nullable": true
          },
          "planId": {
            "type": "string",
            "nullable": true
          },
          "addonsQtyByKey": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "oneTimeAddonsQtyByKey": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        }
      },
      "CreateChargebeeHostedPageCheckoutRequest:124f48ea487b59c0cc7ee060938f0abc": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "integer",
            "nullable": true
          },
          "embed": {
            "type": "boolean",
            "nullable": true
          },
          "expires_at": {
            "type": "integer",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "resource_version": {
            "type": "integer",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "integer",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateChargebeeHostedPageCheckoutRequest:124f48ea487b59c0cc7ee060938f0abc:jsonld": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "created_at": {
            "type": "integer",
            "nullable": true
          },
          "embed": {
            "type": "boolean",
            "nullable": true
          },
          "expires_at": {
            "type": "integer",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "resource_version": {
            "type": "integer",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "integer",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateChargebeeHostedPageCheckoutRequest:jsonld-setCreateChargebeeHostedPageCheckoutRequest": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "intent": {
            "type": "string",
            "nullable": true
          },
          "teamId": {
            "type": "string",
            "nullable": true
          },
          "planId": {
            "type": "string",
            "nullable": true
          },
          "addonsQtyByKey": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "oneTimeAddonsQtyByKey": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        }
      },
      "CreateChargebeeSessionRequest-setCreateChargebeeSessionRequest": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateChargebeeSessionRequest:021df46f90923169d1fcfaa691e38d7b": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "access_url": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "integer",
            "nullable": true
          },
          "expires_at": {
            "type": "integer",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "customer_id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateChargebeeSessionRequest:021df46f90923169d1fcfaa691e38d7b:jsonld": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "access_url": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "integer",
            "nullable": true
          },
          "expires_at": {
            "type": "integer",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "customer_id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateChargebeeSessionRequest:jsonld-setCreateChargebeeSessionRequest": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "teamId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreatePaymentRequest": {
        "type": "object",
        "required": [
          "checkoutId",
          "afterRedirect"
        ],
        "properties": {
          "checkoutId": {
            "type": "string"
          },
          "afterRedirect": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string"
          }
        }
      },
      "CreatePaymentRequest:4bbe19ecc8946f4a61a6a05915363ab6": {
        "type": "object",
        "properties": {
          "redirectUrl": {}
        }
      },
      "CreatePaymentRequest:4bbe19ecc8946f4a61a6a05915363ab6:jsonld": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "redirectUrl": {}
        }
      },
      "CreatePaymentRequest:jsonld": {
        "type": "object",
        "required": [
          "checkoutId",
          "afterRedirect"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "checkoutId": {
            "type": "string"
          },
          "afterRedirect": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string"
          }
        }
      },
      "Credentials-Get": {
        "type": "object",
        "required": [
          "type",
          "team"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "team": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Credentials-Post": {
        "type": "object",
        "required": [
          "type",
          "team"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "team": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          }
        }
      },
      "Credentials-Put": {
        "type": "object"
      },
      "Credentials:jsonld-Get": {
        "type": "object",
        "required": [
          "type",
          "team"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "team": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Credentials:jsonld-Post": {
        "type": "object",
        "required": [
          "type",
          "team"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "team": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          }
        }
      },
      "Credentials:jsonld-Put": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "DowngradeChargebeeSubscriptionRequest-setDowngradeChargebeeSubscriptionRequest": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "string",
            "nullable": true
          },
          "planId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DowngradeChargebeeSubscriptionRequest:jsonld-setDowngradeChargebeeSubscriptionRequest": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "teamId": {
            "type": "string",
            "nullable": true
          },
          "planId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DropshipperSettings-Get": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "blacklistCarriers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "originCountryReplacement": {
            "type": "string",
            "nullable": true
          },
          "stopWords": {
            "type": "string",
            "nullable": true
          },
          "hideHieroglyphs": {
            "type": "boolean"
          },
          "displayPlaceholderCheckpoints": {
            "type": "boolean"
          }
        }
      },
      "DropshipperSettings-Post": {
        "type": "object"
      },
      "DropshipperSettings-Put": {
        "type": "object"
      },
      "DropshipperSettings:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "blacklistCarriers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "originCountryReplacement": {
            "type": "string",
            "nullable": true
          },
          "stopWords": {
            "type": "string",
            "nullable": true
          },
          "hideHieroglyphs": {
            "type": "boolean"
          },
          "displayPlaceholderCheckpoints": {
            "type": "boolean"
          }
        }
      },
      "DropshipperSettings:jsonld-Post": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "DropshipperSettings:jsonld-Put": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "EmailNotification-Get": {
        "type": "object",
        "required": [
          "event",
          "workspace"
        ],
        "properties": {
          "event": {
            "type": "string"
          },
          "system": {
            "description": "Pre-created",
            "type": "boolean"
          },
          "condition": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "workspace": {
            "type": "string",
            "format": "iri-reference"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "cc": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bcc": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastEmailSentAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "trackingPage": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "EmailNotification-Post": {
        "type": "object",
        "required": [
          "event",
          "workspace"
        ],
        "properties": {
          "event": {
            "type": "string"
          },
          "condition": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "workspace": {
            "type": "string",
            "format": "iri-reference"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "cc": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bcc": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "trackingPage": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          }
        }
      },
      "EmailNotification-Put": {
        "type": "object",
        "properties": {
          "condition": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "cc": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bcc": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "trackingPage": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          }
        }
      },
      "EmailNotification:046507ce90af73065cff7d7f158cfea6-setEmailNotificationPreviewRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EmailNotification:046507ce90af73065cff7d7f158cfea6:jsonld-setEmailNotificationPreviewRequest": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EmailNotification:3075af8f980bc1380b4aa0726f72ced9-setEmailNotificationSendTestRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EmailNotification:3075af8f980bc1380b4aa0726f72ced9:jsonld-setEmailNotificationSendTestRequest": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EmailNotification:741333386718d26d611f8d0924322290-getEmailNotificationPreviewResponse": {
        "type": "object",
        "properties": {
          "html": {
            "type": "string"
          }
        }
      },
      "EmailNotification:741333386718d26d611f8d0924322290:jsonld-getEmailNotificationPreviewResponse": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "html": {
            "type": "string"
          }
        }
      },
      "EmailNotification:c22e28dbe6183fe77232ad1869c25525-setEmailNotificationResetDefaultsRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EmailNotification:c22e28dbe6183fe77232ad1869c25525:jsonld-setEmailNotificationResetDefaultsRequest": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EmailNotification:jsonld-Get": {
        "type": "object",
        "required": [
          "event",
          "workspace"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "system": {
            "description": "Pre-created",
            "type": "boolean"
          },
          "condition": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "workspace": {
            "type": "string",
            "format": "iri-reference"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "cc": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bcc": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastEmailSentAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "trackingPage": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "EmailNotification:jsonld-Post": {
        "type": "object",
        "required": [
          "event",
          "workspace"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "condition": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "workspace": {
            "type": "string",
            "format": "iri-reference"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "cc": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bcc": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "trackingPage": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          }
        }
      },
      "EmailNotification:jsonld-Put": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "condition": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "cc": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bcc": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "trackingPage": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          }
        }
      },
      "EmailSettings-Get": {
        "type": "object",
        "properties": {
          "logo": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Media-Get"
              }
            ]
          },
          "signature": {
            "type": "string",
            "nullable": true
          },
          "smtpCredentials": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          }
        }
      },
      "EmailSettings-Getp": {
        "type": "object"
      },
      "EmailSettings-Post": {
        "type": "object",
        "properties": {
          "logo": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "signature": {
            "type": "string",
            "nullable": true
          },
          "smtpCredentials": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          }
        }
      },
      "EmailSettings-Put": {
        "type": "object",
        "properties": {
          "logo": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "signature": {
            "type": "string",
            "nullable": true
          },
          "smtpCredentials": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          }
        }
      },
      "EmailSettings-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription": {
        "type": "object"
      },
      "EmailSettings:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "logo": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Media:jsonld-Get"
              }
            ]
          },
          "signature": {
            "type": "string",
            "nullable": true
          },
          "smtpCredentials": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          }
        }
      },
      "EmailSettings:jsonld-Getp": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "EmailSettings:jsonld-Post": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "logo": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "signature": {
            "type": "string",
            "nullable": true
          },
          "smtpCredentials": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          }
        }
      },
      "EmailSettings:jsonld-Put": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "logo": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "signature": {
            "type": "string",
            "nullable": true
          },
          "smtpCredentials": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          }
        }
      },
      "EmailSettings:jsonld-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "Entitlement-Get": {
        "type": "object",
        "properties": {
          "capacity": {
            "type": "integer",
            "nullable": true
          },
          "used": {
            "type": "integer",
            "nullable": true
          },
          "limitReached": {},
          "limitExceeded": {},
          "display": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "displayPlural": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          }
        }
      },
      "Entitlement-Getp": {
        "type": "object",
        "properties": {
          "capacity": {
            "type": "integer",
            "nullable": true
          },
          "used": {
            "type": "integer",
            "nullable": true
          },
          "limitReached": {},
          "limitExceeded": {},
          "display": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "displayPlural": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          }
        }
      },
      "Entitlement-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription": {
        "type": "object",
        "properties": {
          "capacity": {
            "type": "integer",
            "nullable": true
          },
          "used": {
            "type": "integer",
            "nullable": true
          },
          "limitReached": {},
          "limitExceeded": {},
          "display": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "displayPlural": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          }
        }
      },
      "Entitlement:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "capacity": {
            "type": "integer",
            "nullable": true
          },
          "used": {
            "type": "integer",
            "nullable": true
          },
          "limitReached": {},
          "limitExceeded": {},
          "display": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "displayPlural": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          }
        }
      },
      "Entitlement:jsonld-Getp": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "capacity": {
            "type": "integer",
            "nullable": true
          },
          "used": {
            "type": "integer",
            "nullable": true
          },
          "limitReached": {},
          "limitExceeded": {},
          "display": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "displayPlural": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          }
        }
      },
      "Entitlement:jsonld-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "capacity": {
            "type": "integer",
            "nullable": true
          },
          "used": {
            "type": "integer",
            "nullable": true
          },
          "limitReached": {},
          "limitExceeded": {},
          "display": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "displayPlural": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          }
        }
      },
      "EntityType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "entity": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "fieldsLayout": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "placeholder": {
            "description": "If true means it's used in UI only for displaying placeholderTemplate",
            "type": "boolean"
          },
          "placeholderTemplate": {
            "description": "HTML",
            "type": "string",
            "nullable": true
          }
        }
      },
      "EntityType:9eccbdc57c4c56bc5d7b3bf086123b25-setDeleteRecordsBatchRequest": {
        "type": "object",
        "properties": {
          "workspaceId": {
            "type": "string",
            "nullable": true
          },
          "entity": {
            "type": "string",
            "nullable": true
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "EntityType:9eccbdc57c4c56bc5d7b3bf086123b25:jsonld-setDeleteRecordsBatchRequest": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "workspaceId": {
            "type": "string",
            "nullable": true
          },
          "entity": {
            "type": "string",
            "nullable": true
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "EntityType:fa101a5f3e9cea55760e926a015950be-setChangeStatusBatchRequest": {
        "type": "object",
        "properties": {
          "workspaceId": {
            "type": "string",
            "nullable": true
          },
          "entity": {
            "type": "string",
            "nullable": true
          },
          "statusId": {
            "type": "string",
            "nullable": true
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "EntityType:fa101a5f3e9cea55760e926a015950be:jsonld-setChangeStatusBatchRequest": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "workspaceId": {
            "type": "string",
            "nullable": true
          },
          "entity": {
            "type": "string",
            "nullable": true
          },
          "statusId": {
            "type": "string",
            "nullable": true
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "EntityType:jsonld": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "entity": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "fieldsLayout": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "placeholder": {
            "description": "If true means it's used in UI only for displaying placeholderTemplate",
            "type": "boolean"
          },
          "placeholderTemplate": {
            "description": "HTML",
            "type": "string",
            "nullable": true
          }
        }
      },
      "Field-Get": {
        "type": "object",
        "required": [
          "code",
          "workspace",
          "entity",
          "title",
          "fieldType"
        ],
        "properties": {
          "code": {
            "description": "A unique field code. A unique field identifier is used in API requests. Can contain only letters, digits and underscore. Starts with letter.\n",
            "example": "business_email",
            "type": "string"
          },
          "workspace": {
            "description": "The workspace reference to which the field belongs.",
            "example": "\/workspaces\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878",
            "type": "string",
            "format": "iri-reference"
          },
          "entity": {
            "description": "The entity name to which the field belongs. Should be only one of **orders** or **shipments**.",
            "example": "orders",
            "type": "string"
          },
          "title": {
            "description": "Field name.",
            "example": "Business Email",
            "type": "string"
          },
          "fieldType": {
            "description": "Field type code.",
            "example": "email",
            "extra": "**supported field types:**\n- **text**\n- **date**\n- **phone**\n- **password**\n- **email**\n- **number**\n- **link**\n- **select**\n- **array**\n- **label**\n\n> Depended on the selected field type, the corresponded validation rule will be applied for the field.\n",
            "type": "string"
          },
          "readonly": {
            "read_only": true,
            "type": "boolean",
            "description": "Determines if the field is not writeable.",
            "example": "false",
            "nullable": true
          },
          "sorting": {
            "read_only": true,
            "type": "boolean",
            "description": "Determines if the field can be used for sorting.",
            "example": "true",
            "nullable": true
          },
          "selectOptions": {
            "read_only": true,
            "description": "Options for **select** field type. Represented by the FieldSelectOptions object.",
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/FieldSelectOptions-Get"
              }
            ]
          },
          "visibleExpr": {
            "read_only": true,
            "description": "The expression that allows to determinate if field should be visible.",
            "example": "authType===\"login\"",
            "type": "string",
            "nullable": true
          },
          "validation": {
            "read_only": true,
            "description": "The validation rules for the fields.",
            "example": "required|email",
            "type": "string",
            "nullable": true
          },
          "default": {
            "read_only": true,
            "description": "The default value for the field.",
            "example": "my@company.com",
            "type": "string",
            "nullable": true
          },
          "placeholder": {
            "read_only": true,
            "description": "The placeholder value for the field.",
            "example": "Enter your business email address",
            "type": "string",
            "nullable": true
          },
          "refreshOnChange": {
            "read_only": true,
            "type": "boolean",
            "description": "Determines if the entity will be refreshed after field changes.",
            "example": "true",
            "nullable": true
          },
          "helperText": {
            "read_only": true,
            "description": "The helper text for the field.",
            "example": "Enter your business email to receive all emails from support team.",
            "type": "string",
            "nullable": true
          },
          "tags": {
            "read_only": true,
            "description": "The list of tags for the field.",
            "example": "['emails']\n",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "primary": {
            "readOnly": true,
            "description": "Primary field means defined statically. Custom field is from EAV",
            "type": "boolean"
          }
        }
      },
      "Field-Post": {
        "type": "object",
        "required": [
          "code",
          "workspace",
          "entity",
          "title",
          "fieldType"
        ],
        "properties": {
          "code": {
            "description": "A unique field code. A unique field identifier is used in API requests. Can contain only letters, digits and underscore. Starts with letter.\n",
            "example": "business_email",
            "type": "string"
          },
          "workspace": {
            "description": "The workspace reference to which the field belongs.",
            "example": "\/workspaces\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878",
            "type": "string",
            "format": "iri-reference"
          },
          "entity": {
            "description": "The entity name to which the field belongs. Should be only one of **orders** or **shipments**.",
            "example": "orders",
            "type": "string"
          },
          "title": {
            "description": "Field name.",
            "example": "Business Email",
            "type": "string"
          },
          "fieldType": {
            "description": "Field type code.",
            "example": "email",
            "extra": "**supported field types:**\n- **text**\n- **date**\n- **phone**\n- **password**\n- **email**\n- **number**\n- **link**\n- **select**\n- **array**\n- **label**\n\n> Depended on the selected field type, the corresponded validation rule will be applied for the field.\n",
            "type": "string"
          }
        }
      },
      "Field-Put": {
        "type": "object",
        "required": [
          "title"
        ],
        "properties": {
          "title": {
            "description": "Field name.",
            "example": "Business Email",
            "type": "string"
          }
        }
      },
      "Field:jsonld-Get": {
        "type": "object",
        "required": [
          "code",
          "workspace",
          "entity",
          "title",
          "fieldType"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "code": {
            "description": "A unique field code. A unique field identifier is used in API requests. Can contain only letters, digits and underscore. Starts with letter.\n",
            "example": "business_email",
            "type": "string"
          },
          "workspace": {
            "description": "The workspace reference to which the field belongs.",
            "example": "\/workspaces\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878",
            "type": "string",
            "format": "iri-reference"
          },
          "entity": {
            "description": "The entity name to which the field belongs. Should be only one of **orders** or **shipments**.",
            "example": "orders",
            "type": "string"
          },
          "title": {
            "description": "Field name.",
            "example": "Business Email",
            "type": "string"
          },
          "fieldType": {
            "description": "Field type code.",
            "example": "email",
            "extra": "**supported field types:**\n- **text**\n- **date**\n- **phone**\n- **password**\n- **email**\n- **number**\n- **link**\n- **select**\n- **array**\n- **label**\n\n> Depended on the selected field type, the corresponded validation rule will be applied for the field.\n",
            "type": "string"
          },
          "readonly": {
            "read_only": true,
            "type": "boolean",
            "description": "Determines if the field is not writeable.",
            "example": "false",
            "nullable": true
          },
          "sorting": {
            "read_only": true,
            "type": "boolean",
            "description": "Determines if the field can be used for sorting.",
            "example": "true",
            "nullable": true
          },
          "selectOptions": {
            "read_only": true,
            "description": "Options for **select** field type. Represented by the FieldSelectOptions object.",
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/FieldSelectOptions:jsonld-Get"
              }
            ]
          },
          "visibleExpr": {
            "read_only": true,
            "description": "The expression that allows to determinate if field should be visible.",
            "example": "authType===\"login\"",
            "type": "string",
            "nullable": true
          },
          "validation": {
            "read_only": true,
            "description": "The validation rules for the fields.",
            "example": "required|email",
            "type": "string",
            "nullable": true
          },
          "default": {
            "read_only": true,
            "description": "The default value for the field.",
            "example": "my@company.com",
            "type": "string",
            "nullable": true
          },
          "placeholder": {
            "read_only": true,
            "description": "The placeholder value for the field.",
            "example": "Enter your business email address",
            "type": "string",
            "nullable": true
          },
          "refreshOnChange": {
            "read_only": true,
            "type": "boolean",
            "description": "Determines if the entity will be refreshed after field changes.",
            "example": "true",
            "nullable": true
          },
          "helperText": {
            "read_only": true,
            "description": "The helper text for the field.",
            "example": "Enter your business email to receive all emails from support team.",
            "type": "string",
            "nullable": true
          },
          "tags": {
            "read_only": true,
            "description": "The list of tags for the field.",
            "example": "['emails']\n",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "primary": {
            "readOnly": true,
            "description": "Primary field means defined statically. Custom field is from EAV",
            "type": "boolean"
          }
        }
      },
      "Field:jsonld-Post": {
        "type": "object",
        "required": [
          "code",
          "workspace",
          "entity",
          "title",
          "fieldType"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "code": {
            "description": "A unique field code. A unique field identifier is used in API requests. Can contain only letters, digits and underscore. Starts with letter.\n",
            "example": "business_email",
            "type": "string"
          },
          "workspace": {
            "description": "The workspace reference to which the field belongs.",
            "example": "\/workspaces\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878",
            "type": "string",
            "format": "iri-reference"
          },
          "entity": {
            "description": "The entity name to which the field belongs. Should be only one of **orders** or **shipments**.",
            "example": "orders",
            "type": "string"
          },
          "title": {
            "description": "Field name.",
            "example": "Business Email",
            "type": "string"
          },
          "fieldType": {
            "description": "Field type code.",
            "example": "email",
            "extra": "**supported field types:**\n- **text**\n- **date**\n- **phone**\n- **password**\n- **email**\n- **number**\n- **link**\n- **select**\n- **array**\n- **label**\n\n> Depended on the selected field type, the corresponded validation rule will be applied for the field.\n",
            "type": "string"
          }
        }
      },
      "Field:jsonld-Put": {
        "type": "object",
        "required": [
          "title"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "title": {
            "description": "Field name.",
            "example": "Business Email",
            "type": "string"
          }
        }
      },
      "FieldSelectOptions-Get": {
        "type": "object",
        "properties": {
          "keyField": {
            "type": "string",
            "nullable": true
          },
          "titleField": {
            "type": "string",
            "nullable": true
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "FieldSelectOptions:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "keyField": {
            "type": "string",
            "nullable": true
          },
          "titleField": {
            "type": "string",
            "nullable": true
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "FieldsLayout-Get": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FieldsLayout-Post": {
        "type": "object"
      },
      "FieldsLayout:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FieldsLayout:jsonld-Post": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "File-Post": {
        "type": "object"
      },
      "File:jsonld-Post": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "Font-Get": {
        "type": "object",
        "properties": {
          "fontColor": {
            "type": "string",
            "nullable": true
          },
          "fontFamily": {
            "type": "string",
            "nullable": true
          },
          "customFontUrl": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "customFontName": {
            "type": "string",
            "nullable": true
          },
          "customFontUsed": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "Font:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "fontColor": {
            "type": "string",
            "nullable": true
          },
          "fontFamily": {
            "type": "string",
            "nullable": true
          },
          "customFontUrl": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "customFontName": {
            "type": "string",
            "nullable": true
          },
          "customFontUsed": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "Footer-Get": {
        "type": "object",
        "properties": {
          "hideTrackmageBranding": {
            "type": "boolean",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/FooterLink-Get"
            },
            "nullable": true
          },
          "backgroundColor": {
            "type": "string",
            "nullable": true
          },
          "font": {
            "$ref": "#\/components\/schemas\/Font-Get"
          },
          "linksColor": {
            "type": "string",
            "nullable": true
          },
          "linksUnderline": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "Footer:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "hideTrackmageBranding": {
            "type": "boolean",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/FooterLink:jsonld-Get"
            },
            "nullable": true
          },
          "backgroundColor": {
            "type": "string",
            "nullable": true
          },
          "font": {
            "$ref": "#\/components\/schemas\/Font:jsonld-Get"
          },
          "linksColor": {
            "type": "string",
            "nullable": true
          },
          "linksUnderline": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "FooterLink-Get": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          }
        }
      },
      "FooterLink:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          }
        }
      },
      "ForgotPasswordSendEmailRequest": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string",
            "nullable": true
          },
          "captcha": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ForgotPasswordSendEmailRequest:jsonld": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "email": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string",
            "nullable": true
          },
          "captcha": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GenerateTrackingPageLinkRequest": {
        "type": "object",
        "required": [
          "trackingPageId"
        ],
        "properties": {
          "trackingPageId": {
            "type": "string",
            "nullable": true
          },
          "trackingNumber": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "preview": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "GenerateTrackingPageLinkRequest:jsonld": {
        "type": "object",
        "required": [
          "trackingPageId"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "trackingPageId": {
            "type": "string",
            "nullable": true
          },
          "trackingNumber": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "preview": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "GenerateTrackingPageLinksRequest": {
        "type": "object",
        "required": [
          "trackingPageId"
        ],
        "properties": {
          "trackingPageId": {
            "type": "string",
            "nullable": true
          },
          "groupByField": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GenerateTrackingPageLinksRequest:jsonld": {
        "type": "object",
        "required": [
          "trackingPageId"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "trackingPageId": {
            "type": "string",
            "nullable": true
          },
          "groupByField": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GetChargebeeSubscriptionEstimateRequest-setGetChargebeeSubscriptionEstimateRequest": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "string",
            "nullable": true
          },
          "planId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GetChargebeeSubscriptionEstimateRequest:71886dd3f8878e1013a394d9f84dd33b": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nextBillingAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nextTotal": {
            "type": "integer",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "estimateItems": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        }
      },
      "GetChargebeeSubscriptionEstimateRequest:71886dd3f8878e1013a394d9f84dd33b:jsonld": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nextBillingAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nextTotal": {
            "type": "integer",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "estimateItems": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        }
      },
      "GetChargebeeSubscriptionEstimateRequest:jsonld-setGetChargebeeSubscriptionEstimateRequest": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "teamId": {
            "type": "string",
            "nullable": true
          },
          "planId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "HandleChargebeeWebhookRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "occurred_at": {
            "type": "integer",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "api_version": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "event_type": {
            "type": "string",
            "nullable": true
          },
          "webhook_status": {
            "type": "string",
            "nullable": true
          },
          "webhooks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        }
      },
      "HandleChargebeeWebhookRequest:jsonld": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "occurred_at": {
            "type": "integer",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "api_version": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "event_type": {
            "type": "string",
            "nullable": true
          },
          "webhook_status": {
            "type": "string",
            "nullable": true
          },
          "webhooks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        }
      },
      "Header-Get": {
        "type": "object",
        "properties": {
          "backgroundColor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Header:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "backgroundColor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Import-Get": {
        "type": "object",
        "required": [
          "user",
          "workspace"
        ],
        "properties": {
          "user": {
            "type": "string",
            "format": "iri-reference"
          },
          "workspace": {
            "type": "string",
            "format": "iri-reference"
          },
          "status": {
            "type": "string"
          },
          "fileOriginalName": {
            "type": "string"
          },
          "fileMimeType": {
            "type": "string"
          },
          "fileSize": {
            "type": "integer"
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Import-Post": {
        "type": "object",
        "required": [
          "workspace",
          "file"
        ],
        "properties": {
          "workspace": {
            "type": "string",
            "format": "iri-reference"
          },
          "file": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/MediaObject"
            },
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/File-Post"
              }
            ]
          },
          "fileOriginalName": {
            "type": "string"
          }
        }
      },
      "Import:jsonld-Get": {
        "type": "object",
        "required": [
          "user",
          "workspace"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "user": {
            "type": "string",
            "format": "iri-reference"
          },
          "workspace": {
            "type": "string",
            "format": "iri-reference"
          },
          "status": {
            "type": "string"
          },
          "fileOriginalName": {
            "type": "string"
          },
          "fileMimeType": {
            "type": "string"
          },
          "fileSize": {
            "type": "integer"
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Import:jsonld-Post": {
        "type": "object",
        "required": [
          "workspace",
          "file"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "workspace": {
            "type": "string",
            "format": "iri-reference"
          },
          "file": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/MediaObject"
            },
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/File:jsonld-Post"
              }
            ]
          },
          "fileOriginalName": {
            "type": "string"
          }
        }
      },
      "LanguageMenu-Get": {
        "type": "object",
        "properties": {
          "on": {
            "type": "boolean",
            "nullable": true
          },
          "defaultLan": {
            "type": "string",
            "nullable": true
          },
          "font": {
            "$ref": "#\/components\/schemas\/Font-Get"
          }
        }
      },
      "LanguageMenu:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "on": {
            "type": "boolean",
            "nullable": true
          },
          "defaultLan": {
            "type": "string",
            "nullable": true
          },
          "font": {
            "$ref": "#\/components\/schemas\/Font:jsonld-Get"
          }
        }
      },
      "LoadDatabaseFixturesRequest": {
        "type": "object",
        "required": [
          "content"
        ],
        "properties": {
          "content": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "LoadDatabaseFixturesRequest:76bb9dbd6a178681462e873fc4169938": {
        "type": "object",
        "properties": {
          "skipped": {
            "type": "integer"
          },
          "recreated": {
            "type": "integer"
          },
          "created": {
            "type": "integer"
          },
          "processed": {
            "type": "integer"
          }
        }
      },
      "LoadDatabaseFixturesRequest:76bb9dbd6a178681462e873fc4169938:jsonld": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "skipped": {
            "type": "integer"
          },
          "recreated": {
            "type": "integer"
          },
          "created": {
            "type": "integer"
          },
          "processed": {
            "type": "integer"
          }
        }
      },
      "LoadDatabaseFixturesRequest:jsonld": {
        "type": "object",
        "required": [
          "content"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "content": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Logo-Get": {
        "type": "object",
        "properties": {
          "on": {
            "type": "boolean",
            "nullable": true
          },
          "imageUrl": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "linkUrl": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          }
        }
      },
      "Logo:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "on": {
            "type": "boolean",
            "nullable": true
          },
          "imageUrl": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "linkUrl": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          }
        }
      },
      "Media-Get": {
        "type": "object",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "filePath": {
            "readOnly": true,
            "description": "https:\/\/s3-test.trackmage.com\/media\/a4f29b34-aa67-4e68-a7c8-f1c2e081979e\/5dfa6dfcc161f_cats.png\nTODO: prepend this with PublicUrlPlugin in a normalizer, and remove IMG_URL on frontend.",
            "type": "string"
          }
        }
      },
      "Media-Getp": {
        "type": "object",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "filePath": {
            "readOnly": true,
            "description": "https:\/\/s3-test.trackmage.com\/media\/a4f29b34-aa67-4e68-a7c8-f1c2e081979e\/5dfa6dfcc161f_cats.png\nTODO: prepend this with PublicUrlPlugin in a normalizer, and remove IMG_URL on frontend.",
            "type": "string"
          }
        }
      },
      "Media-Post": {
        "type": "object",
        "required": [
          "file"
        ],
        "properties": {
          "file": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/MediaObject"
            },
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/File-Post"
              }
            ]
          },
          "fileOriginalName": {
            "type": "string"
          }
        }
      },
      "Media-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription": {
        "type": "object",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "filePath": {
            "readOnly": true,
            "description": "https:\/\/s3-test.trackmage.com\/media\/a4f29b34-aa67-4e68-a7c8-f1c2e081979e\/5dfa6dfcc161f_cats.png\nTODO: prepend this with PublicUrlPlugin in a normalizer, and remove IMG_URL on frontend.",
            "type": "string"
          }
        }
      },
      "Media:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "filePath": {
            "readOnly": true,
            "description": "https:\/\/s3-test.trackmage.com\/media\/a4f29b34-aa67-4e68-a7c8-f1c2e081979e\/5dfa6dfcc161f_cats.png\nTODO: prepend this with PublicUrlPlugin in a normalizer, and remove IMG_URL on frontend.",
            "type": "string"
          }
        }
      },
      "Media:jsonld-Getp": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "filePath": {
            "readOnly": true,
            "description": "https:\/\/s3-test.trackmage.com\/media\/a4f29b34-aa67-4e68-a7c8-f1c2e081979e\/5dfa6dfcc161f_cats.png\nTODO: prepend this with PublicUrlPlugin in a normalizer, and remove IMG_URL on frontend.",
            "type": "string"
          }
        }
      },
      "Media:jsonld-Post": {
        "type": "object",
        "required": [
          "file"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "file": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/MediaObject"
            },
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/File:jsonld-Post"
              }
            ]
          },
          "fileOriginalName": {
            "type": "string"
          }
        }
      },
      "Media:jsonld-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "filePath": {
            "readOnly": true,
            "description": "https:\/\/s3-test.trackmage.com\/media\/a4f29b34-aa67-4e68-a7c8-f1c2e081979e\/5dfa6dfcc161f_cats.png\nTODO: prepend this with PublicUrlPlugin in a normalizer, and remove IMG_URL on frontend.",
            "type": "string"
          }
        }
      },
      "Note-Get": {
        "type": "object",
        "required": [
          "workspace",
          "entity",
          "entityId",
          "comment"
        ],
        "properties": {
          "workspace": {
            "type": "string",
            "format": "iri-reference"
          },
          "entity": {
            "type": "string"
          },
          "entityId": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/identifier"
            },
            "type": "string",
            "nullable": true
          },
          "user": {
            "type": "string",
            "format": "iri-reference"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "attachment": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Media-Get"
              }
            ]
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "userPhoto": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "userFullName": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          }
        }
      },
      "Note-Post": {
        "type": "object",
        "required": [
          "workspace",
          "entity",
          "entityId",
          "comment"
        ],
        "properties": {
          "workspace": {
            "type": "string",
            "format": "iri-reference"
          },
          "entity": {
            "type": "string"
          },
          "entityId": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/identifier"
            },
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "attachment": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          }
        }
      },
      "Note:jsonld-Get": {
        "type": "object",
        "required": [
          "workspace",
          "entity",
          "entityId",
          "comment"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "workspace": {
            "type": "string",
            "format": "iri-reference"
          },
          "entity": {
            "type": "string"
          },
          "entityId": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/identifier"
            },
            "type": "string",
            "nullable": true
          },
          "user": {
            "type": "string",
            "format": "iri-reference"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "attachment": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Media:jsonld-Get"
              }
            ]
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "userPhoto": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "userFullName": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          }
        }
      },
      "Note:jsonld-Post": {
        "type": "object",
        "required": [
          "workspace",
          "entity",
          "entityId",
          "comment"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "workspace": {
            "type": "string",
            "format": "iri-reference"
          },
          "entity": {
            "type": "string"
          },
          "entityId": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/identifier"
            },
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "attachment": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          }
        }
      },
      "Notification-Get": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "format": "iri-reference"
          },
          "tag": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unread": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Notification-Put": {
        "type": "object",
        "properties": {
          "unread": {
            "type": "boolean"
          }
        }
      },
      "Notification:jsonld-Get": {
        "type": "object",
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "user": {
            "type": "string",
            "format": "iri-reference"
          },
          "tag": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unread": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Notification:jsonld-Put": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "unread": {
            "type": "boolean"
          }
        }
      },
      "OauthClient-Get": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "secret": {
            "type": "string",
            "nullable": true
          },
          "redirectUris": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "publicId": {
            "readOnly": true,
            "description": "{@inheritdoc}"
          }
        },
        "required": [
          "name",
          "user",
          "secret",
          "redirectUris"
        ]
      },
      "OauthClient-Post": {
        "type": "object",
        "required": [
          "name",
          "user",
          "redirectUris"
        ],
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "redirectUris": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OauthClient:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "secret": {
            "type": "string",
            "nullable": true
          },
          "redirectUris": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "publicId": {
            "readOnly": true,
            "description": "{@inheritdoc}"
          }
        },
        "required": [
          "name",
          "user",
          "secret",
          "redirectUris"
        ]
      },
      "OauthClient:jsonld-Post": {
        "type": "object",
        "required": [
          "name",
          "user",
          "redirectUris"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "redirectUris": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Order-Get": {
        "type": "object",
        "required": [
          "workspace",
          "orderNumber",
          "orderType"
        ],
        "properties": {
          "workspace": {
            "description": "The workspace reference to which the order belongs.",
            "example": "\/workspaces\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878",
            "type": "string",
            "format": "iri-reference"
          },
          "orderNumber": {
            "description": "A number associated with a purchase order.",
            "example": "ON1",
            "type": "string",
            "nullable": true
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the order in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "wo_1001",
            "type": "string",
            "nullable": true
          },
          "externalSourceUrl": {
            "format": "URL",
            "description": "The url of the order in ecommerce store.",
            "example": "http:\/\/my-store.com\/admin\/orders\/wo_1001",
            "type": "string",
            "nullable": true
          },
          "subtotal": {
            "description": "The current subtotal price of the order in the store currency. Default value is **0**",
            "example": 199.9,
            "type": "string",
            "nullable": true
          },
          "total": {
            "description": "The current total price of the order in the store currency. Default value is **0**",
            "example": 199.9,
            "type": "string",
            "nullable": true
          },
          "currency": {
            "description": "A three-letter currency code. Default value is **USD**",
            "example": "EUR",
            "type": "string",
            "nullable": true
          },
          "orderStatus": {
            "description": "The current status of order. Represented by the Status object.",
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Status-Get"
              }
            ]
          },
          "orderType": {
            "description": "customer|vendor",
            "example": "customer",
            "type": "string"
          },
          "email": {
            "format": "email",
            "description": "Customer email address.",
            "example": "non-existing@trackmage.com",
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "description": "Customer phone number.",
            "example": 13125551212,
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "read_only": true,
            "description": "The date and time (in ISO-8601 format) when the order was created.",
            "example": 1610236800,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "read_only": true,
            "description": "The date and time (in ISO-8601 format) when the order was updated.",
            "example": 1610236800,
            "type": "string",
            "format": "date-time"
          },
          "shipments": {
            "description": "List of [shipment](\/docs\/Shipment\/shipment.html) references that belong to the order.",
            "example": "[\"\/shipments\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878\"]\n",
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "shippingAddress": {
            "nullable": true,
            "description": "The mailing address to where the order will be shipped. Represented by the Address object.",
            "$ref": "#\/components\/schemas\/Address-Get"
          },
          "billingAddress": {
            "nullable": true,
            "description": "The mailing address associated with the payment method. Represented by the Address object.",
            "$ref": "#\/components\/schemas\/Address-Get"
          },
          "fulfillmentStatus": {
            "read_only": true,
            "description": "The fulfillment status code. The calculation is based on **qty** and **fulfilledQty** properties\nof children order items.\n- **not_fulfilled** - order does not contain any shipped order items\n- **partial** - order contains at least one shipped order item, and at least one not shipped order item\n- **fulfilled** - all order items of the order are shipped\n",
            "example": "partial",
            "type": "string",
            "nullable": true
          },
          "id": {
            "description": "A version 4 UUID. A unique order identifier is used in API requests.",
            "example": "d20215c9-0691-4783-a2f0-fb56938e5a78",
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Order-Getc": {
        "type": "object",
        "required": [
          "workspace",
          "orderNumber",
          "orderType"
        ],
        "properties": {
          "workspace": {
            "description": "The workspace reference to which the order belongs.",
            "example": "\/workspaces\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878",
            "type": "string",
            "format": "iri-reference"
          },
          "orderNumber": {
            "description": "A number associated with a purchase order.",
            "example": "ON1",
            "type": "string",
            "nullable": true
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the order in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "wo_1001",
            "type": "string",
            "nullable": true
          },
          "externalSourceUrl": {
            "format": "URL",
            "description": "The url of the order in ecommerce store.",
            "example": "http:\/\/my-store.com\/admin\/orders\/wo_1001",
            "type": "string",
            "nullable": true
          },
          "subtotal": {
            "description": "The current subtotal price of the order in the store currency. Default value is **0**",
            "example": 199.9,
            "type": "string",
            "nullable": true
          },
          "total": {
            "description": "The current total price of the order in the store currency. Default value is **0**",
            "example": 199.9,
            "type": "string",
            "nullable": true
          },
          "currency": {
            "description": "A three-letter currency code. Default value is **USD**",
            "example": "EUR",
            "type": "string",
            "nullable": true
          },
          "orderStatus": {
            "description": "The current status of order. Represented by the Status object.",
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Status-Getc"
              }
            ]
          },
          "orderType": {
            "description": "customer|vendor",
            "example": "customer",
            "type": "string"
          },
          "email": {
            "format": "email",
            "description": "Customer email address.",
            "example": "non-existing@trackmage.com",
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "description": "Customer phone number.",
            "example": 13125551212,
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "read_only": true,
            "description": "The date and time (in ISO-8601 format) when the order was created.",
            "example": 1610236800,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "read_only": true,
            "description": "The date and time (in ISO-8601 format) when the order was updated.",
            "example": 1610236800,
            "type": "string",
            "format": "date-time"
          },
          "shippingAddress": {
            "nullable": true,
            "description": "The mailing address to where the order will be shipped. Represented by the Address object.",
            "$ref": "#\/components\/schemas\/Address-Getc"
          },
          "billingAddress": {
            "nullable": true,
            "description": "The mailing address associated with the payment method. Represented by the Address object.",
            "$ref": "#\/components\/schemas\/Address-Getc"
          },
          "fulfillmentStatus": {
            "read_only": true,
            "description": "The fulfillment status code. The calculation is based on **qty** and **fulfilledQty** properties\nof children order items.\n- **not_fulfilled** - order does not contain any shipped order items\n- **partial** - order contains at least one shipped order item, and at least one not shipped order item\n- **fulfilled** - all order items of the order are shipped\n",
            "example": "partial",
            "type": "string",
            "nullable": true
          },
          "id": {
            "description": "A version 4 UUID. A unique order identifier is used in API requests.",
            "example": "d20215c9-0691-4783-a2f0-fb56938e5a78",
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Order-Post": {
        "type": "object",
        "required": [
          "workspace",
          "orderNumber",
          "orderType"
        ],
        "properties": {
          "workspace": {
            "description": "The workspace reference to which the order belongs.",
            "example": "\/workspaces\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878",
            "type": "string",
            "format": "iri-reference"
          },
          "orderNumber": {
            "description": "A number associated with a purchase order.",
            "example": "ON1",
            "type": "string",
            "nullable": true
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the order in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "wo_1001",
            "type": "string",
            "nullable": true
          },
          "externalSourceUrl": {
            "format": "URL",
            "description": "The url of the order in ecommerce store.",
            "example": "http:\/\/my-store.com\/admin\/orders\/wo_1001",
            "type": "string",
            "nullable": true
          },
          "subtotal": {
            "description": "The current subtotal price of the order in the store currency. Default value is **0**",
            "example": 199.9,
            "type": "string",
            "nullable": true
          },
          "total": {
            "description": "The current total price of the order in the store currency. Default value is **0**",
            "example": 199.9,
            "type": "string",
            "nullable": true
          },
          "currency": {
            "description": "A three-letter currency code. Default value is **USD**",
            "example": "EUR",
            "type": "string",
            "nullable": true
          },
          "orderStatus": {
            "description": "The current status of order. Represented by the Status object.",
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Status-Post"
              }
            ]
          },
          "orderType": {
            "description": "customer|vendor",
            "example": "customer",
            "type": "string"
          },
          "email": {
            "format": "email",
            "description": "Customer email address.",
            "example": "non-existing@trackmage.com",
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "description": "Customer phone number.",
            "example": 13125551212,
            "type": "string",
            "nullable": true
          },
          "shipments": {
            "description": "List of [shipment](\/docs\/Shipment\/shipment.html) references that belong to the order.",
            "example": "[\"\/shipments\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878\"]\n",
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "shippingAddress": {
            "nullable": true,
            "description": "The mailing address to where the order will be shipped. Represented by the Address object.",
            "$ref": "#\/components\/schemas\/Address-Post"
          },
          "billingAddress": {
            "nullable": true,
            "description": "The mailing address associated with the payment method. Represented by the Address object.",
            "$ref": "#\/components\/schemas\/Address-Post"
          }
        }
      },
      "Order-Put": {
        "type": "object",
        "properties": {
          "subtotal": {
            "description": "The current subtotal price of the order in the store currency. Default value is **0**",
            "example": 199.9,
            "type": "string",
            "nullable": true
          },
          "total": {
            "description": "The current total price of the order in the store currency. Default value is **0**",
            "example": 199.9,
            "type": "string",
            "nullable": true
          },
          "currency": {
            "description": "A three-letter currency code. Default value is **USD**",
            "example": "EUR",
            "type": "string",
            "nullable": true
          },
          "orderStatus": {
            "description": "The current status of order. Represented by the Status object.",
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Status-Put"
              }
            ]
          },
          "email": {
            "format": "email",
            "description": "Customer email address.",
            "example": "non-existing@trackmage.com",
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "description": "Customer phone number.",
            "example": 13125551212,
            "type": "string",
            "nullable": true
          },
          "shipments": {
            "description": "List of [shipment](\/docs\/Shipment\/shipment.html) references that belong to the order.",
            "example": "[\"\/shipments\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878\"]\n",
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "shippingAddress": {
            "nullable": true,
            "description": "The mailing address to where the order will be shipped. Represented by the Address object.",
            "$ref": "#\/components\/schemas\/Address-Put"
          },
          "billingAddress": {
            "nullable": true,
            "description": "The mailing address associated with the payment method. Represented by the Address object.",
            "$ref": "#\/components\/schemas\/Address-Put"
          }
        }
      },
      "Order:jsonld-Get": {
        "type": "object",
        "required": [
          "workspace",
          "orderNumber",
          "orderType"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "workspace": {
            "description": "The workspace reference to which the order belongs.",
            "example": "\/workspaces\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878",
            "type": "string",
            "format": "iri-reference"
          },
          "orderNumber": {
            "description": "A number associated with a purchase order.",
            "example": "ON1",
            "type": "string",
            "nullable": true
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the order in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "wo_1001",
            "type": "string",
            "nullable": true
          },
          "externalSourceUrl": {
            "format": "URL",
            "description": "The url of the order in ecommerce store.",
            "example": "http:\/\/my-store.com\/admin\/orders\/wo_1001",
            "type": "string",
            "nullable": true
          },
          "subtotal": {
            "description": "The current subtotal price of the order in the store currency. Default value is **0**",
            "example": 199.9,
            "type": "string",
            "nullable": true
          },
          "total": {
            "description": "The current total price of the order in the store currency. Default value is **0**",
            "example": 199.9,
            "type": "string",
            "nullable": true
          },
          "currency": {
            "description": "A three-letter currency code. Default value is **USD**",
            "example": "EUR",
            "type": "string",
            "nullable": true
          },
          "orderStatus": {
            "description": "The current status of order. Represented by the Status object.",
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Status:jsonld-Get"
              }
            ]
          },
          "orderType": {
            "description": "customer|vendor",
            "example": "customer",
            "type": "string"
          },
          "email": {
            "format": "email",
            "description": "Customer email address.",
            "example": "non-existing@trackmage.com",
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "description": "Customer phone number.",
            "example": 13125551212,
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "read_only": true,
            "description": "The date and time (in ISO-8601 format) when the order was created.",
            "example": 1610236800,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "read_only": true,
            "description": "The date and time (in ISO-8601 format) when the order was updated.",
            "example": 1610236800,
            "type": "string",
            "format": "date-time"
          },
          "shipments": {
            "description": "List of [shipment](\/docs\/Shipment\/shipment.html) references that belong to the order.",
            "example": "[\"\/shipments\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878\"]\n",
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "shippingAddress": {
            "nullable": true,
            "description": "The mailing address to where the order will be shipped. Represented by the Address object.",
            "$ref": "#\/components\/schemas\/Address:jsonld-Get"
          },
          "billingAddress": {
            "nullable": true,
            "description": "The mailing address associated with the payment method. Represented by the Address object.",
            "$ref": "#\/components\/schemas\/Address:jsonld-Get"
          },
          "fulfillmentStatus": {
            "read_only": true,
            "description": "The fulfillment status code. The calculation is based on **qty** and **fulfilledQty** properties\nof children order items.\n- **not_fulfilled** - order does not contain any shipped order items\n- **partial** - order contains at least one shipped order item, and at least one not shipped order item\n- **fulfilled** - all order items of the order are shipped\n",
            "example": "partial",
            "type": "string",
            "nullable": true
          },
          "id": {
            "description": "A version 4 UUID. A unique order identifier is used in API requests.",
            "example": "d20215c9-0691-4783-a2f0-fb56938e5a78",
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Order:jsonld-Getc": {
        "type": "object",
        "required": [
          "workspace",
          "orderNumber",
          "orderType"
        ],
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "workspace": {
            "description": "The workspace reference to which the order belongs.",
            "example": "\/workspaces\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878",
            "type": "string",
            "format": "iri-reference"
          },
          "orderNumber": {
            "description": "A number associated with a purchase order.",
            "example": "ON1",
            "type": "string",
            "nullable": true
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the order in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "wo_1001",
            "type": "string",
            "nullable": true
          },
          "externalSourceUrl": {
            "format": "URL",
            "description": "The url of the order in ecommerce store.",
            "example": "http:\/\/my-store.com\/admin\/orders\/wo_1001",
            "type": "string",
            "nullable": true
          },
          "subtotal": {
            "description": "The current subtotal price of the order in the store currency. Default value is **0**",
            "example": 199.9,
            "type": "string",
            "nullable": true
          },
          "total": {
            "description": "The current total price of the order in the store currency. Default value is **0**",
            "example": 199.9,
            "type": "string",
            "nullable": true
          },
          "currency": {
            "description": "A three-letter currency code. Default value is **USD**",
            "example": "EUR",
            "type": "string",
            "nullable": true
          },
          "orderStatus": {
            "description": "The current status of order. Represented by the Status object.",
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Status:jsonld-Getc"
              }
            ]
          },
          "orderType": {
            "description": "customer|vendor",
            "example": "customer",
            "type": "string"
          },
          "email": {
            "format": "email",
            "description": "Customer email address.",
            "example": "non-existing@trackmage.com",
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "description": "Customer phone number.",
            "example": 13125551212,
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "read_only": true,
            "description": "The date and time (in ISO-8601 format) when the order was created.",
            "example": 1610236800,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "read_only": true,
            "description": "The date and time (in ISO-8601 format) when the order was updated.",
            "example": 1610236800,
            "type": "string",
            "format": "date-time"
          },
          "shippingAddress": {
            "nullable": true,
            "description": "The mailing address to where the order will be shipped. Represented by the Address object.",
            "$ref": "#\/components\/schemas\/Address:jsonld-Getc"
          },
          "billingAddress": {
            "nullable": true,
            "description": "The mailing address associated with the payment method. Represented by the Address object.",
            "$ref": "#\/components\/schemas\/Address:jsonld-Getc"
          },
          "fulfillmentStatus": {
            "read_only": true,
            "description": "The fulfillment status code. The calculation is based on **qty** and **fulfilledQty** properties\nof children order items.\n- **not_fulfilled** - order does not contain any shipped order items\n- **partial** - order contains at least one shipped order item, and at least one not shipped order item\n- **fulfilled** - all order items of the order are shipped\n",
            "example": "partial",
            "type": "string",
            "nullable": true
          },
          "id": {
            "description": "A version 4 UUID. A unique order identifier is used in API requests.",
            "example": "d20215c9-0691-4783-a2f0-fb56938e5a78",
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Order:jsonld-Post": {
        "type": "object",
        "required": [
          "workspace",
          "orderNumber",
          "orderType"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "workspace": {
            "description": "The workspace reference to which the order belongs.",
            "example": "\/workspaces\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878",
            "type": "string",
            "format": "iri-reference"
          },
          "orderNumber": {
            "description": "A number associated with a purchase order.",
            "example": "ON1",
            "type": "string",
            "nullable": true
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the order in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "wo_1001",
            "type": "string",
            "nullable": true
          },
          "externalSourceUrl": {
            "format": "URL",
            "description": "The url of the order in ecommerce store.",
            "example": "http:\/\/my-store.com\/admin\/orders\/wo_1001",
            "type": "string",
            "nullable": true
          },
          "subtotal": {
            "description": "The current subtotal price of the order in the store currency. Default value is **0**",
            "example": 199.9,
            "type": "string",
            "nullable": true
          },
          "total": {
            "description": "The current total price of the order in the store currency. Default value is **0**",
            "example": 199.9,
            "type": "string",
            "nullable": true
          },
          "currency": {
            "description": "A three-letter currency code. Default value is **USD**",
            "example": "EUR",
            "type": "string",
            "nullable": true
          },
          "orderStatus": {
            "description": "The current status of order. Represented by the Status object.",
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Status:jsonld-Post"
              }
            ]
          },
          "orderType": {
            "description": "customer|vendor",
            "example": "customer",
            "type": "string"
          },
          "email": {
            "format": "email",
            "description": "Customer email address.",
            "example": "non-existing@trackmage.com",
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "description": "Customer phone number.",
            "example": 13125551212,
            "type": "string",
            "nullable": true
          },
          "shipments": {
            "description": "List of [shipment](\/docs\/Shipment\/shipment.html) references that belong to the order.",
            "example": "[\"\/shipments\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878\"]\n",
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "shippingAddress": {
            "nullable": true,
            "description": "The mailing address to where the order will be shipped. Represented by the Address object.",
            "$ref": "#\/components\/schemas\/Address:jsonld-Post"
          },
          "billingAddress": {
            "nullable": true,
            "description": "The mailing address associated with the payment method. Represented by the Address object.",
            "$ref": "#\/components\/schemas\/Address:jsonld-Post"
          }
        }
      },
      "Order:jsonld-Put": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "subtotal": {
            "description": "The current subtotal price of the order in the store currency. Default value is **0**",
            "example": 199.9,
            "type": "string",
            "nullable": true
          },
          "total": {
            "description": "The current total price of the order in the store currency. Default value is **0**",
            "example": 199.9,
            "type": "string",
            "nullable": true
          },
          "currency": {
            "description": "A three-letter currency code. Default value is **USD**",
            "example": "EUR",
            "type": "string",
            "nullable": true
          },
          "orderStatus": {
            "description": "The current status of order. Represented by the Status object.",
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Status:jsonld-Put"
              }
            ]
          },
          "email": {
            "format": "email",
            "description": "Customer email address.",
            "example": "non-existing@trackmage.com",
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "description": "Customer phone number.",
            "example": 13125551212,
            "type": "string",
            "nullable": true
          },
          "shipments": {
            "description": "List of [shipment](\/docs\/Shipment\/shipment.html) references that belong to the order.",
            "example": "[\"\/shipments\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878\"]\n",
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "shippingAddress": {
            "nullable": true,
            "description": "The mailing address to where the order will be shipped. Represented by the Address object.",
            "$ref": "#\/components\/schemas\/Address:jsonld-Put"
          },
          "billingAddress": {
            "nullable": true,
            "description": "The mailing address associated with the payment method. Represented by the Address object.",
            "$ref": "#\/components\/schemas\/Address:jsonld-Put"
          }
        }
      },
      "OrderItem-Get": {
        "type": "object",
        "required": [
          "order"
        ],
        "properties": {
          "order": {
            "description": "The [order](\/docs\/Order\/order.html) reference to which the order item belongs.",
            "example": "d20215c9-0691-4783-a2f0-fb56938e5a78",
            "type": "string",
            "format": "iri-reference"
          },
          "productName": {
            "description": "The name of the product.",
            "example": "Black Leather Jacket",
            "type": "string",
            "nullable": true
          },
          "productSku": {
            "description": "The SKU of the product.",
            "example": "JACKET-BLACK-LEATHER",
            "type": "string",
            "nullable": true
          },
          "productOptions": {
            "description": "The list of product custom options (size, color, weight, etc.) in the form OPTION_CODE => OPTION_VALUE.",
            "example": "['size'=>'L', 'color'=>'black', 'fabric'=>'leather']\n",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "qty": {
            "description": "The number of items that were purchased. Default value is **0**.",
            "example": 10,
            "type": "integer",
            "nullable": true
          },
          "price": {
            "description": "The price of the item in the shop currency. Default value is **0**.",
            "example": 19.99,
            "type": "string",
            "nullable": true
          },
          "rowTotal": {
            "description": "The amount of the purchased item in the shop currency. Calculated as **qty * price**.",
            "example": "199.90",
            "type": "string",
            "nullable": true
          },
          "externalProductId": {
            "description": "The id of the product in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "wp_001245",
            "type": "string",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the order item in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "woi_123456",
            "type": "string",
            "nullable": true
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "product": {
            "description": "The [product](\/docs\/Product\/product.html) reference to which this item is related.",
            "example": "\/products\/1deec359-5c4c-46a5-81ed-95daa5cb47f3",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "productVariant": {
            "description": "The [product variant](\/docs\/Product\/product-variant.html) to which this item is related.",
            "example": "\/product_variants\/c1f6ca51-bbde-46ca-941a-8032abc544c3",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "imageUrl": {
            "format": "URL",
            "description": "The link to a product image in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "http:\/\/my-store.com\/media\/catalog\/black-leather-jacket.jpg",
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "fulfilledQty": {
            "description": "The number of items that were fulfilled. Calculated as the amount of all shipmentItem.qty",
            "example": 5,
            "type": "integer",
            "nullable": true
          },
          "id": {
            "description": "A version 4 UUID. A unique order item identifier is used in API requests.",
            "example": "5a1ce5d8-9525-4888-b96c-f6cb637bb7e6",
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "externalProductLink": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "currency": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "OrderItem-Post": {
        "type": "object",
        "required": [
          "order"
        ],
        "properties": {
          "order": {
            "description": "The [order](\/docs\/Order\/order.html) reference to which the order item belongs.",
            "example": "d20215c9-0691-4783-a2f0-fb56938e5a78",
            "type": "string",
            "format": "iri-reference"
          },
          "productName": {
            "description": "The name of the product.",
            "example": "Black Leather Jacket",
            "type": "string",
            "nullable": true
          },
          "productSku": {
            "description": "The SKU of the product.",
            "example": "JACKET-BLACK-LEATHER",
            "type": "string",
            "nullable": true
          },
          "productOptions": {
            "description": "The list of product custom options (size, color, weight, etc.) in the form OPTION_CODE => OPTION_VALUE.",
            "example": "['size'=>'L', 'color'=>'black', 'fabric'=>'leather']\n",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "qty": {
            "description": "The number of items that were purchased. Default value is **0**.",
            "example": 10,
            "type": "integer",
            "nullable": true
          },
          "price": {
            "description": "The price of the item in the shop currency. Default value is **0**.",
            "example": 19.99,
            "type": "string",
            "nullable": true
          },
          "rowTotal": {
            "description": "The amount of the purchased item in the shop currency. Calculated as **qty * price**.",
            "example": "199.90",
            "type": "string",
            "nullable": true
          },
          "externalProductId": {
            "description": "The id of the product in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "wp_001245",
            "type": "string",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the order item in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "woi_123456",
            "type": "string",
            "nullable": true
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "product": {
            "description": "The [product](\/docs\/Product\/product.html) reference to which this item is related.",
            "example": "\/products\/1deec359-5c4c-46a5-81ed-95daa5cb47f3",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "productVariant": {
            "description": "The [product variant](\/docs\/Product\/product-variant.html) to which this item is related.",
            "example": "\/product_variants\/c1f6ca51-bbde-46ca-941a-8032abc544c3",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "imageUrl": {
            "format": "URL",
            "description": "The link to a product image in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "http:\/\/my-store.com\/media\/catalog\/black-leather-jacket.jpg",
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "fulfilledQty": {
            "description": "The number of items that were fulfilled. Calculated as the amount of all shipmentItem.qty",
            "example": 5,
            "type": "integer",
            "nullable": true
          }
        }
      },
      "OrderItem-Put": {
        "type": "object",
        "properties": {
          "productName": {
            "description": "The name of the product.",
            "example": "Black Leather Jacket",
            "type": "string",
            "nullable": true
          },
          "productSku": {
            "description": "The SKU of the product.",
            "example": "JACKET-BLACK-LEATHER",
            "type": "string",
            "nullable": true
          },
          "productOptions": {
            "description": "The list of product custom options (size, color, weight, etc.) in the form OPTION_CODE => OPTION_VALUE.",
            "example": "['size'=>'L', 'color'=>'black', 'fabric'=>'leather']\n",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "qty": {
            "description": "The number of items that were purchased. Default value is **0**.",
            "example": 10,
            "type": "integer",
            "nullable": true
          },
          "price": {
            "description": "The price of the item in the shop currency. Default value is **0**.",
            "example": 19.99,
            "type": "string",
            "nullable": true
          },
          "rowTotal": {
            "description": "The amount of the purchased item in the shop currency. Calculated as **qty * price**.",
            "example": "199.90",
            "type": "string",
            "nullable": true
          },
          "externalProductId": {
            "description": "The id of the product in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "wp_001245",
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "format": "URL",
            "description": "The link to a product image in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "http:\/\/my-store.com\/media\/catalog\/black-leather-jacket.jpg",
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "fulfilledQty": {
            "description": "The number of items that were fulfilled. Calculated as the amount of all shipmentItem.qty",
            "example": 5,
            "type": "integer",
            "nullable": true
          }
        }
      },
      "OrderItem:jsonld-Get": {
        "type": "object",
        "required": [
          "order"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "order": {
            "description": "The [order](\/docs\/Order\/order.html) reference to which the order item belongs.",
            "example": "d20215c9-0691-4783-a2f0-fb56938e5a78",
            "type": "string",
            "format": "iri-reference"
          },
          "productName": {
            "description": "The name of the product.",
            "example": "Black Leather Jacket",
            "type": "string",
            "nullable": true
          },
          "productSku": {
            "description": "The SKU of the product.",
            "example": "JACKET-BLACK-LEATHER",
            "type": "string",
            "nullable": true
          },
          "productOptions": {
            "description": "The list of product custom options (size, color, weight, etc.) in the form OPTION_CODE => OPTION_VALUE.",
            "example": "['size'=>'L', 'color'=>'black', 'fabric'=>'leather']\n",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "qty": {
            "description": "The number of items that were purchased. Default value is **0**.",
            "example": 10,
            "type": "integer",
            "nullable": true
          },
          "price": {
            "description": "The price of the item in the shop currency. Default value is **0**.",
            "example": 19.99,
            "type": "string",
            "nullable": true
          },
          "rowTotal": {
            "description": "The amount of the purchased item in the shop currency. Calculated as **qty * price**.",
            "example": "199.90",
            "type": "string",
            "nullable": true
          },
          "externalProductId": {
            "description": "The id of the product in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "wp_001245",
            "type": "string",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the order item in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "woi_123456",
            "type": "string",
            "nullable": true
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "product": {
            "description": "The [product](\/docs\/Product\/product.html) reference to which this item is related.",
            "example": "\/products\/1deec359-5c4c-46a5-81ed-95daa5cb47f3",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "productVariant": {
            "description": "The [product variant](\/docs\/Product\/product-variant.html) to which this item is related.",
            "example": "\/product_variants\/c1f6ca51-bbde-46ca-941a-8032abc544c3",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "imageUrl": {
            "format": "URL",
            "description": "The link to a product image in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "http:\/\/my-store.com\/media\/catalog\/black-leather-jacket.jpg",
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "fulfilledQty": {
            "description": "The number of items that were fulfilled. Calculated as the amount of all shipmentItem.qty",
            "example": 5,
            "type": "integer",
            "nullable": true
          },
          "id": {
            "description": "A version 4 UUID. A unique order item identifier is used in API requests.",
            "example": "5a1ce5d8-9525-4888-b96c-f6cb637bb7e6",
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "externalProductLink": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "currency": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "OrderItem:jsonld-Post": {
        "type": "object",
        "required": [
          "order"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "order": {
            "description": "The [order](\/docs\/Order\/order.html) reference to which the order item belongs.",
            "example": "d20215c9-0691-4783-a2f0-fb56938e5a78",
            "type": "string",
            "format": "iri-reference"
          },
          "productName": {
            "description": "The name of the product.",
            "example": "Black Leather Jacket",
            "type": "string",
            "nullable": true
          },
          "productSku": {
            "description": "The SKU of the product.",
            "example": "JACKET-BLACK-LEATHER",
            "type": "string",
            "nullable": true
          },
          "productOptions": {
            "description": "The list of product custom options (size, color, weight, etc.) in the form OPTION_CODE => OPTION_VALUE.",
            "example": "['size'=>'L', 'color'=>'black', 'fabric'=>'leather']\n",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "qty": {
            "description": "The number of items that were purchased. Default value is **0**.",
            "example": 10,
            "type": "integer",
            "nullable": true
          },
          "price": {
            "description": "The price of the item in the shop currency. Default value is **0**.",
            "example": 19.99,
            "type": "string",
            "nullable": true
          },
          "rowTotal": {
            "description": "The amount of the purchased item in the shop currency. Calculated as **qty * price**.",
            "example": "199.90",
            "type": "string",
            "nullable": true
          },
          "externalProductId": {
            "description": "The id of the product in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "wp_001245",
            "type": "string",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the order item in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "woi_123456",
            "type": "string",
            "nullable": true
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "product": {
            "description": "The [product](\/docs\/Product\/product.html) reference to which this item is related.",
            "example": "\/products\/1deec359-5c4c-46a5-81ed-95daa5cb47f3",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "productVariant": {
            "description": "The [product variant](\/docs\/Product\/product-variant.html) to which this item is related.",
            "example": "\/product_variants\/c1f6ca51-bbde-46ca-941a-8032abc544c3",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "imageUrl": {
            "format": "URL",
            "description": "The link to a product image in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "http:\/\/my-store.com\/media\/catalog\/black-leather-jacket.jpg",
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "fulfilledQty": {
            "description": "The number of items that were fulfilled. Calculated as the amount of all shipmentItem.qty",
            "example": 5,
            "type": "integer",
            "nullable": true
          }
        }
      },
      "OrderItem:jsonld-Put": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "productName": {
            "description": "The name of the product.",
            "example": "Black Leather Jacket",
            "type": "string",
            "nullable": true
          },
          "productSku": {
            "description": "The SKU of the product.",
            "example": "JACKET-BLACK-LEATHER",
            "type": "string",
            "nullable": true
          },
          "productOptions": {
            "description": "The list of product custom options (size, color, weight, etc.) in the form OPTION_CODE => OPTION_VALUE.",
            "example": "['size'=>'L', 'color'=>'black', 'fabric'=>'leather']\n",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "qty": {
            "description": "The number of items that were purchased. Default value is **0**.",
            "example": 10,
            "type": "integer",
            "nullable": true
          },
          "price": {
            "description": "The price of the item in the shop currency. Default value is **0**.",
            "example": 19.99,
            "type": "string",
            "nullable": true
          },
          "rowTotal": {
            "description": "The amount of the purchased item in the shop currency. Calculated as **qty * price**.",
            "example": "199.90",
            "type": "string",
            "nullable": true
          },
          "externalProductId": {
            "description": "The id of the product in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "wp_001245",
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "format": "URL",
            "description": "The link to a product image in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "http:\/\/my-store.com\/media\/catalog\/black-leather-jacket.jpg",
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "fulfilledQty": {
            "description": "The number of items that were fulfilled. Calculated as the amount of all shipmentItem.qty",
            "example": 5,
            "type": "integer",
            "nullable": true
          }
        }
      },
      "PageScroll-Get": {
        "type": "object",
        "properties": {
          "scrollColor": {
            "type": "string",
            "nullable": true
          },
          "borderRadius": {
            "type": "integer",
            "nullable": true
          },
          "backgroundColor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PageScroll:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "scrollColor": {
            "type": "string",
            "nullable": true
          },
          "borderRadius": {
            "type": "integer",
            "nullable": true
          },
          "backgroundColor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PostReviewRequest": {
        "type": "object",
        "required": [
          "hash",
          "domain",
          "shipmentId",
          "carrierScore",
          "productScore",
          "packagingScore"
        ],
        "properties": {
          "hash": {
            "type": "string",
            "nullable": true
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "shipmentId": {
            "type": "string",
            "nullable": true
          },
          "carrierScore": {
            "type": "integer",
            "nullable": true
          },
          "productScore": {
            "type": "integer",
            "nullable": true
          },
          "packagingScore": {
            "type": "integer",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PostReviewRequest:418096edba57c92b933e9d97367d1a6f": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "PostReviewRequest:418096edba57c92b933e9d97367d1a6f:jsonld": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "PostReviewRequest:jsonld": {
        "type": "object",
        "required": [
          "hash",
          "domain",
          "shipmentId",
          "carrierScore",
          "productScore",
          "packagingScore"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "hash": {
            "type": "string",
            "nullable": true
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "shipmentId": {
            "type": "string",
            "nullable": true
          },
          "carrierScore": {
            "type": "integer",
            "nullable": true
          },
          "productScore": {
            "type": "integer",
            "nullable": true
          },
          "packagingScore": {
            "type": "integer",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Product-Get": {
        "type": "object",
        "required": [
          "team"
        ],
        "properties": {
          "team": {
            "description": "The team reference to which the product belongs.",
            "example": "\/shipments\/83829499-f99c-4c91-9908-76c91f2ae312",
            "type": "string",
            "format": "iri-reference"
          },
          "name": {
            "description": "The name of product.",
            "example": "Jacket",
            "type": "string",
            "nullable": true
          },
          "sku": {
            "description": "The SKU of product.",
            "example": "JACKET-01",
            "type": "string",
            "nullable": true
          },
          "originUrl": {
            "format": "URL",
            "description": "The URL of product in the ecommerce store.",
            "example": "http:\/\/my-store\/products\/jacket",
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "format": "URL",
            "description": "The URL of product image in the ecommerce store.",
            "example": "http:\/\/my-store\/media\/products\/jacket.jpg",
            "type": "string",
            "nullable": true
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the shipment in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "wp_00001",
            "type": "string",
            "nullable": true
          },
          "productVariants": {
            "description": "List of [product variant](\/docs\/Product\/product-variant.html) references that belong to the product.",
            "example": "['\/product_variants\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878', '\/product_variants\/3eb2f084-ea29-41ed-9bfb-691381bd7511']\n",
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "id": {
            "description": "A unique version 4 UUID.",
            "example": "625c21dc-1e78-4b5c-8e29-5a1d7f84f4ac",
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Product-Getc": {
        "type": "object",
        "required": [
          "team"
        ],
        "properties": {
          "team": {
            "description": "The team reference to which the product belongs.",
            "example": "\/shipments\/83829499-f99c-4c91-9908-76c91f2ae312",
            "type": "string",
            "format": "iri-reference"
          },
          "name": {
            "description": "The name of product.",
            "example": "Jacket",
            "type": "string",
            "nullable": true
          },
          "sku": {
            "description": "The SKU of product.",
            "example": "JACKET-01",
            "type": "string",
            "nullable": true
          },
          "originUrl": {
            "format": "URL",
            "description": "The URL of product in the ecommerce store.",
            "example": "http:\/\/my-store\/products\/jacket",
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "format": "URL",
            "description": "The URL of product image in the ecommerce store.",
            "example": "http:\/\/my-store\/media\/products\/jacket.jpg",
            "type": "string",
            "nullable": true
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the shipment in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "wp_00001",
            "type": "string",
            "nullable": true
          },
          "productVariants": {
            "description": "List of [product variant](\/docs\/Product\/product-variant.html) references that belong to the product.",
            "example": "['\/product_variants\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878', '\/product_variants\/3eb2f084-ea29-41ed-9bfb-691381bd7511']\n",
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "id": {
            "description": "A unique version 4 UUID.",
            "example": "625c21dc-1e78-4b5c-8e29-5a1d7f84f4ac",
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Product-Post": {
        "type": "object",
        "required": [
          "team"
        ],
        "properties": {
          "team": {
            "description": "The team reference to which the product belongs.",
            "example": "\/shipments\/83829499-f99c-4c91-9908-76c91f2ae312",
            "type": "string",
            "format": "iri-reference"
          },
          "name": {
            "description": "The name of product.",
            "example": "Jacket",
            "type": "string",
            "nullable": true
          },
          "sku": {
            "description": "The SKU of product.",
            "example": "JACKET-01",
            "type": "string",
            "nullable": true
          },
          "originUrl": {
            "format": "URL",
            "description": "The URL of product in the ecommerce store.",
            "example": "http:\/\/my-store\/products\/jacket",
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "format": "URL",
            "description": "The URL of product image in the ecommerce store.",
            "example": "http:\/\/my-store\/media\/products\/jacket.jpg",
            "type": "string",
            "nullable": true
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the shipment in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "wp_00001",
            "type": "string",
            "nullable": true
          }
        }
      },
      "Product-Put": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of product.",
            "example": "Jacket",
            "type": "string",
            "nullable": true
          },
          "sku": {
            "description": "The SKU of product.",
            "example": "JACKET-01",
            "type": "string",
            "nullable": true
          },
          "originUrl": {
            "format": "URL",
            "description": "The URL of product in the ecommerce store.",
            "example": "http:\/\/my-store\/products\/jacket",
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "format": "URL",
            "description": "The URL of product image in the ecommerce store.",
            "example": "http:\/\/my-store\/media\/products\/jacket.jpg",
            "type": "string",
            "nullable": true
          }
        }
      },
      "Product:jsonld-Get": {
        "type": "object",
        "required": [
          "team"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "team": {
            "description": "The team reference to which the product belongs.",
            "example": "\/shipments\/83829499-f99c-4c91-9908-76c91f2ae312",
            "type": "string",
            "format": "iri-reference"
          },
          "name": {
            "description": "The name of product.",
            "example": "Jacket",
            "type": "string",
            "nullable": true
          },
          "sku": {
            "description": "The SKU of product.",
            "example": "JACKET-01",
            "type": "string",
            "nullable": true
          },
          "originUrl": {
            "format": "URL",
            "description": "The URL of product in the ecommerce store.",
            "example": "http:\/\/my-store\/products\/jacket",
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "format": "URL",
            "description": "The URL of product image in the ecommerce store.",
            "example": "http:\/\/my-store\/media\/products\/jacket.jpg",
            "type": "string",
            "nullable": true
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the shipment in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "wp_00001",
            "type": "string",
            "nullable": true
          },
          "productVariants": {
            "description": "List of [product variant](\/docs\/Product\/product-variant.html) references that belong to the product.",
            "example": "['\/product_variants\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878', '\/product_variants\/3eb2f084-ea29-41ed-9bfb-691381bd7511']\n",
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "id": {
            "description": "A unique version 4 UUID.",
            "example": "625c21dc-1e78-4b5c-8e29-5a1d7f84f4ac",
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Product:jsonld-Getc": {
        "type": "object",
        "required": [
          "team"
        ],
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "team": {
            "description": "The team reference to which the product belongs.",
            "example": "\/shipments\/83829499-f99c-4c91-9908-76c91f2ae312",
            "type": "string",
            "format": "iri-reference"
          },
          "name": {
            "description": "The name of product.",
            "example": "Jacket",
            "type": "string",
            "nullable": true
          },
          "sku": {
            "description": "The SKU of product.",
            "example": "JACKET-01",
            "type": "string",
            "nullable": true
          },
          "originUrl": {
            "format": "URL",
            "description": "The URL of product in the ecommerce store.",
            "example": "http:\/\/my-store\/products\/jacket",
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "format": "URL",
            "description": "The URL of product image in the ecommerce store.",
            "example": "http:\/\/my-store\/media\/products\/jacket.jpg",
            "type": "string",
            "nullable": true
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the shipment in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "wp_00001",
            "type": "string",
            "nullable": true
          },
          "productVariants": {
            "description": "List of [product variant](\/docs\/Product\/product-variant.html) references that belong to the product.",
            "example": "['\/product_variants\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878', '\/product_variants\/3eb2f084-ea29-41ed-9bfb-691381bd7511']\n",
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "id": {
            "description": "A unique version 4 UUID.",
            "example": "625c21dc-1e78-4b5c-8e29-5a1d7f84f4ac",
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Product:jsonld-Post": {
        "type": "object",
        "required": [
          "team"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "team": {
            "description": "The team reference to which the product belongs.",
            "example": "\/shipments\/83829499-f99c-4c91-9908-76c91f2ae312",
            "type": "string",
            "format": "iri-reference"
          },
          "name": {
            "description": "The name of product.",
            "example": "Jacket",
            "type": "string",
            "nullable": true
          },
          "sku": {
            "description": "The SKU of product.",
            "example": "JACKET-01",
            "type": "string",
            "nullable": true
          },
          "originUrl": {
            "format": "URL",
            "description": "The URL of product in the ecommerce store.",
            "example": "http:\/\/my-store\/products\/jacket",
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "format": "URL",
            "description": "The URL of product image in the ecommerce store.",
            "example": "http:\/\/my-store\/media\/products\/jacket.jpg",
            "type": "string",
            "nullable": true
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the shipment in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "wp_00001",
            "type": "string",
            "nullable": true
          }
        }
      },
      "Product:jsonld-Put": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The name of product.",
            "example": "Jacket",
            "type": "string",
            "nullable": true
          },
          "sku": {
            "description": "The SKU of product.",
            "example": "JACKET-01",
            "type": "string",
            "nullable": true
          },
          "originUrl": {
            "format": "URL",
            "description": "The URL of product in the ecommerce store.",
            "example": "http:\/\/my-store\/products\/jacket",
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "format": "URL",
            "description": "The URL of product image in the ecommerce store.",
            "example": "http:\/\/my-store\/media\/products\/jacket.jpg",
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProductVariant-Get": {
        "type": "object",
        "required": [
          "team",
          "sku"
        ],
        "properties": {
          "team": {
            "description": "The team reference to which the product variant belongs.",
            "example": "\/shipments\/83829499-f99c-4c91-9908-76c91f2ae312",
            "type": "string",
            "format": "iri-reference"
          },
          "sku": {
            "description": "The SKU of product variant.",
            "example": "JACKET-BLACK",
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "format": "URL",
            "description": "The URL of product variant image in the ecommerce store.",
            "example": "http:\/\/my-store\/media\/products\/variants\/jacket-black.jpg",
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "product": {
            "description": "The [product](\/docs\/Product\/product.html) reference to which the product variant belongs.",
            "example": "\/products\/625c21dc-1e78-4b5c-8e29-5a1d7f84f4ac",
            "type": "string",
            "format": "iri-reference"
          },
          "price": {
            "type": "float",
            "description": "The price of product variant in the store currency. Default value is **0**",
            "example": 9.99,
            "nullable": true
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the shipment in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "wp_00001",
            "type": "string",
            "nullable": true
          },
          "id": {
            "description": "A unique version 4 UUID.",
            "example": "601ccee6-d07a-4d0e-a376-65d73f1f182a",
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ProductVariant-Post": {
        "type": "object",
        "required": [
          "team",
          "sku"
        ],
        "properties": {
          "team": {
            "description": "The team reference to which the product variant belongs.",
            "example": "\/shipments\/83829499-f99c-4c91-9908-76c91f2ae312",
            "type": "string",
            "format": "iri-reference"
          },
          "sku": {
            "description": "The SKU of product variant.",
            "example": "JACKET-BLACK",
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "format": "URL",
            "description": "The URL of product variant image in the ecommerce store.",
            "example": "http:\/\/my-store\/media\/products\/variants\/jacket-black.jpg",
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "product": {
            "description": "The [product](\/docs\/Product\/product.html) reference to which the product variant belongs.",
            "example": "\/products\/625c21dc-1e78-4b5c-8e29-5a1d7f84f4ac",
            "type": "string",
            "format": "iri-reference"
          },
          "price": {
            "type": "float",
            "description": "The price of product variant in the store currency. Default value is **0**",
            "example": 9.99,
            "nullable": true
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the shipment in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "wp_00001",
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProductVariant-Put": {
        "type": "object",
        "properties": {
          "imageUrl": {
            "format": "URL",
            "description": "The URL of product variant image in the ecommerce store.",
            "example": "http:\/\/my-store\/media\/products\/variants\/jacket-black.jpg",
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "float",
            "description": "The price of product variant in the store currency. Default value is **0**",
            "example": 9.99,
            "nullable": true
          }
        }
      },
      "ProductVariant:jsonld-Get": {
        "type": "object",
        "required": [
          "team",
          "sku"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "team": {
            "description": "The team reference to which the product variant belongs.",
            "example": "\/shipments\/83829499-f99c-4c91-9908-76c91f2ae312",
            "type": "string",
            "format": "iri-reference"
          },
          "sku": {
            "description": "The SKU of product variant.",
            "example": "JACKET-BLACK",
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "format": "URL",
            "description": "The URL of product variant image in the ecommerce store.",
            "example": "http:\/\/my-store\/media\/products\/variants\/jacket-black.jpg",
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "product": {
            "description": "The [product](\/docs\/Product\/product.html) reference to which the product variant belongs.",
            "example": "\/products\/625c21dc-1e78-4b5c-8e29-5a1d7f84f4ac",
            "type": "string",
            "format": "iri-reference"
          },
          "price": {
            "type": "float",
            "description": "The price of product variant in the store currency. Default value is **0**",
            "example": 9.99,
            "nullable": true
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the shipment in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "wp_00001",
            "type": "string",
            "nullable": true
          },
          "id": {
            "description": "A unique version 4 UUID.",
            "example": "601ccee6-d07a-4d0e-a376-65d73f1f182a",
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ProductVariant:jsonld-Post": {
        "type": "object",
        "required": [
          "team",
          "sku"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "team": {
            "description": "The team reference to which the product variant belongs.",
            "example": "\/shipments\/83829499-f99c-4c91-9908-76c91f2ae312",
            "type": "string",
            "format": "iri-reference"
          },
          "sku": {
            "description": "The SKU of product variant.",
            "example": "JACKET-BLACK",
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "format": "URL",
            "description": "The URL of product variant image in the ecommerce store.",
            "example": "http:\/\/my-store\/media\/products\/variants\/jacket-black.jpg",
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "product": {
            "description": "The [product](\/docs\/Product\/product.html) reference to which the product variant belongs.",
            "example": "\/products\/625c21dc-1e78-4b5c-8e29-5a1d7f84f4ac",
            "type": "string",
            "format": "iri-reference"
          },
          "price": {
            "type": "float",
            "description": "The price of product variant in the store currency. Default value is **0**",
            "example": 9.99,
            "nullable": true
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the shipment in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "wp_00001",
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProductVariant:jsonld-Put": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "imageUrl": {
            "format": "URL",
            "description": "The URL of product variant image in the ecommerce store.",
            "example": "http:\/\/my-store\/media\/products\/variants\/jacket-black.jpg",
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "float",
            "description": "The price of product variant in the store currency. Default value is **0**",
            "example": 9.99,
            "nullable": true
          }
        }
      },
      "Review-Get": {
        "type": "object",
        "properties": {
          "workspace": {
            "type": "string",
            "format": "iri-reference"
          },
          "shipment": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "carrierScore": {
            "type": "integer",
            "nullable": true
          },
          "productScore": {
            "type": "integer",
            "nullable": true
          },
          "packagingScore": {
            "type": "integer",
            "nullable": true
          },
          "totalScore": {
            "type": "number",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Review:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "workspace": {
            "type": "string",
            "format": "iri-reference"
          },
          "shipment": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "carrierScore": {
            "type": "integer",
            "nullable": true
          },
          "productScore": {
            "type": "integer",
            "nullable": true
          },
          "packagingScore": {
            "type": "integer",
            "nullable": true
          },
          "totalScore": {
            "type": "number",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Scripts-Get": {
        "type": "object",
        "properties": {
          "head": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Scripts:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "head": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SearchPageTitle-Get": {
        "type": "object",
        "properties": {
          "font": {
            "$ref": "#\/components\/schemas\/Font-Get"
          },
          "fontSize": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "SearchPageTitle:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "font": {
            "$ref": "#\/components\/schemas\/Font:jsonld-Get"
          },
          "fontSize": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "Shipment-Get": {
        "type": "object",
        "properties": {
          "trackingNumber": {
            "description": "A tracking number, provided by the shipping company.",
            "example": "TM123456789TM",
            "type": "string",
            "nullable": true
          },
          "trackingStatus": {
            "read_only": true,
            "description": "The code of the shipment's current [tracking status](Shipment\/TrackingStatuses.mdx).",
            "example": "in_transit",
            "extra": "- **pre_transit** - Carrier has received information about the package, but it has not yet been scanned and picked up.\n- **no_info** - A shipping label has been created, but the package has not yet been scanned and\/or picked up by the carrier.\n- **in_transit** - A package is travelling to its destination. You may receive multiple updates of this type as the package travels to its destination.\n- **delivery_in_progress** - A package has reached the local area and is in the process of being delivered.\n- **delivered** - The package has been delivered\n- **unsuccessful_delivery** - Carrier attempted to deliver, but failed, and usually leaves a notice and will try to deliver again.\n- **error** - Customs hold or any shipping exceptions. Please contact the carrier.\n- **expired** - A package has no tracking information for 30 days since it was created.\n- **available_for_pickup** - The package is available for pickup from the carrier's facility.\n- **cancelled** - The delivery has been cancelled.\n- **return_to_sender** - The package was not delivered and is now on its way back to the sender.\n- **transit_limit_exceeded** - The package has been in transit way longer than normal transit time allows. Please contact the carrier.\n",
            "type": "string",
            "nullable": true
          },
          "orderNumbers": {
            "description": "List of order numbers to which the shipment belongs.",
            "example": "['ON1', 'ON2']\n",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email": {
            "description": "Customer email address.",
            "example": "non-existing@trackmage.com",
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "description": "Customer phone number.",
            "example": 13125551212,
            "type": "string",
            "nullable": true
          },
          "daysInTransit": {
            "read_only": true,
            "description": "The number of days from the moment of sending to receiving of the parcel. The \"Days in Transit\" is the number of days from which the parcel transitioned into an active in-transit status. So once a parcel reaches end status or finite status, something like delivered or canceled or error or other finite states or return back to the sender (that is also finite state) then the days in transit calculation is no longer applied. So we're calculating the days when the parcel actually in transit. That's exactly what it is.\n",
            "example": 3,
            "type": "integer",
            "nullable": true
          },
          "daysInIdle": {
            "read_only": true,
            "description": "This field is calculated based on idle statuses or the statuses when the shipment actually was created, but it doesn't have a tracking number. So this is a pre-shipment state, or pre-transit state, no info state, whenever we are actually ordering the parcels from a supplier and we don't have confirmation from their end or the tracking number for the parcel. Once the parcel transitions to an in-transit state or other active statuses or any finite statuses, then the  \"days in idle\" counter stops to be calculated.\n",
            "example": 10,
            "type": "integer",
            "nullable": true
          },
          "originCarrier": {
            "description": "The code of origin [carrier](https:\/\/trackmage.com\/carriers\/). Origin Carrier will be identified automatically based on Tracking Number. Sometimes the carrier cannot be identified. In that case, the system will return the error with the suggested carriers list in the payload. The value of this field can be specified only once in POST request.\n",
            "example": "china-post",
            "type": "string",
            "nullable": true
          },
          "destinationCarrier": {
            "read_only": true,
            "description": "The code of destination [carrier](https:\/\/trackmage.com\/carriers\/).",
            "example": "dhl",
            "type": "string",
            "nullable": true
          },
          "originCountry": {
            "read_only": true,
            "description": "The origin country name.",
            "example": "China",
            "type": "string",
            "nullable": true
          },
          "destinationCountry": {
            "read_only": true,
            "description": "The destination country name.",
            "example": "Poland",
            "type": "string",
            "nullable": true
          },
          "originCountryIso2": {
            "read_only": true,
            "description": "The two-letter [country code](https:\/\/www.iso.org\/obp\/ui) corresponding to the origin country.",
            "example": "CN",
            "type": "string",
            "nullable": true
          },
          "destinationCountryIso2": {
            "read_only": true,
            "description": "The two-letter [country code](https:\/\/www.iso.org\/obp\/ui) corresponding to the destination country.",
            "example": "PL",
            "type": "string",
            "nullable": true
          },
          "shippedAt": {
            "read_only": "true,",
            "description": "Shipment dispatch date (in ISO-8601 format).",
            "example": 1610236800,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expectedDeliveryDate": {
            "read_only": "true,",
            "description": "Shipment expected delivery date (in ISO-8601 format).",
            "example": 1610236800,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "read_only": true,
            "description": "The date and time (in ISO-8601 format) when the shipment was created.",
            "example": 1610236800,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "read_only": true,
            "description": "The date and time (in ISO-8601 format) when the shipment was updated.",
            "example": 1610236800,
            "type": "string",
            "format": "date-time"
          },
          "lastStatusUpdate": {
            "read_only": true,
            "description": "The date and time (in ISO-8601 format) when the tracking status was updated.",
            "example": 1610236800,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "workspace": {
            "description": "The workspace reference to which the shipment belongs.",
            "example": "\/workspaces\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878",
            "type": "string",
            "format": "iri-reference"
          },
          "review": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "reviewTotalScore": {
            "type": "number",
            "nullable": true
          },
          "orders": {
            "description": "List of order references to which the shipment belongs.",
            "example": "['\/orders\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878']\n",
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "shipmentItems": {
            "description": "List of shipment items references that belong to the shipment.",
            "example": "[\n    '\/shipment_items\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878',\n    '\/shipment_items\/3eb2f084-ea29-41ed-9bfb-691381bd7511'\n]\n",
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the shipment in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "ws_123456",
            "type": "string",
            "nullable": true
          },
          "fulfillmentIntegration": {
            "description": "The workflow reference to integration for fulfillment source.",
            "example": "\/workflows\/x5b97939-5aea-4b35-b7c6-64f56bff1722",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "fulfillmentSyncId": {
            "description": "The id of the shipment in the fulfillment source system (AliExpress, Amazon, etc.).",
            "example": "als_123456",
            "type": "string",
            "nullable": true
          },
          "address": {
            "nullable": true,
            "description": "The mailing address to where the order will be shipped. Represented by the Address object.",
            "$ref": "#\/components\/schemas\/Address-Get"
          },
          "shipmentStatus": {
            "nullable": true,
            "description": "The current status of shipment. Represented by the Status object.",
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Status-Get"
              }
            ]
          },
          "id": {
            "description": "A version 4 UUID.",
            "example": "83829499-f99c-4c91-9908-76c91f2ae312",
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "workspace"
        ]
      },
      "Shipment-Getc": {
        "type": "object",
        "properties": {
          "trackingNumber": {
            "description": "A tracking number, provided by the shipping company.",
            "example": "TM123456789TM",
            "type": "string",
            "nullable": true
          },
          "trackingStatus": {
            "read_only": true,
            "description": "The code of the shipment's current [tracking status](Shipment\/TrackingStatuses.mdx).",
            "example": "in_transit",
            "extra": "- **pre_transit** - Carrier has received information about the package, but it has not yet been scanned and picked up.\n- **no_info** - A shipping label has been created, but the package has not yet been scanned and\/or picked up by the carrier.\n- **in_transit** - A package is travelling to its destination. You may receive multiple updates of this type as the package travels to its destination.\n- **delivery_in_progress** - A package has reached the local area and is in the process of being delivered.\n- **delivered** - The package has been delivered\n- **unsuccessful_delivery** - Carrier attempted to deliver, but failed, and usually leaves a notice and will try to deliver again.\n- **error** - Customs hold or any shipping exceptions. Please contact the carrier.\n- **expired** - A package has no tracking information for 30 days since it was created.\n- **available_for_pickup** - The package is available for pickup from the carrier's facility.\n- **cancelled** - The delivery has been cancelled.\n- **return_to_sender** - The package was not delivered and is now on its way back to the sender.\n- **transit_limit_exceeded** - The package has been in transit way longer than normal transit time allows. Please contact the carrier.\n",
            "type": "string",
            "nullable": true
          },
          "orderNumbers": {
            "description": "List of order numbers to which the shipment belongs.",
            "example": "['ON1', 'ON2']\n",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email": {
            "description": "Customer email address.",
            "example": "non-existing@trackmage.com",
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "description": "Customer phone number.",
            "example": 13125551212,
            "type": "string",
            "nullable": true
          },
          "daysInTransit": {
            "read_only": true,
            "description": "The number of days from the moment of sending to receiving of the parcel. The \"Days in Transit\" is the number of days from which the parcel transitioned into an active in-transit status. So once a parcel reaches end status or finite status, something like delivered or canceled or error or other finite states or return back to the sender (that is also finite state) then the days in transit calculation is no longer applied. So we're calculating the days when the parcel actually in transit. That's exactly what it is.\n",
            "example": 3,
            "type": "integer",
            "nullable": true
          },
          "daysInIdle": {
            "read_only": true,
            "description": "This field is calculated based on idle statuses or the statuses when the shipment actually was created, but it doesn't have a tracking number. So this is a pre-shipment state, or pre-transit state, no info state, whenever we are actually ordering the parcels from a supplier and we don't have confirmation from their end or the tracking number for the parcel. Once the parcel transitions to an in-transit state or other active statuses or any finite statuses, then the  \"days in idle\" counter stops to be calculated.\n",
            "example": 10,
            "type": "integer",
            "nullable": true
          },
          "originCarrier": {
            "description": "The code of origin [carrier](https:\/\/trackmage.com\/carriers\/). Origin Carrier will be identified automatically based on Tracking Number. Sometimes the carrier cannot be identified. In that case, the system will return the error with the suggested carriers list in the payload. The value of this field can be specified only once in POST request.\n",
            "example": "china-post",
            "type": "string",
            "nullable": true
          },
          "destinationCarrier": {
            "read_only": true,
            "description": "The code of destination [carrier](https:\/\/trackmage.com\/carriers\/).",
            "example": "dhl",
            "type": "string",
            "nullable": true
          },
          "originCountry": {
            "read_only": true,
            "description": "The origin country name.",
            "example": "China",
            "type": "string",
            "nullable": true
          },
          "destinationCountry": {
            "read_only": true,
            "description": "The destination country name.",
            "example": "Poland",
            "type": "string",
            "nullable": true
          },
          "originCountryIso2": {
            "read_only": true,
            "description": "The two-letter [country code](https:\/\/www.iso.org\/obp\/ui) corresponding to the origin country.",
            "example": "CN",
            "type": "string",
            "nullable": true
          },
          "destinationCountryIso2": {
            "read_only": true,
            "description": "The two-letter [country code](https:\/\/www.iso.org\/obp\/ui) corresponding to the destination country.",
            "example": "PL",
            "type": "string",
            "nullable": true
          },
          "shippedAt": {
            "read_only": "true,",
            "description": "Shipment dispatch date (in ISO-8601 format).",
            "example": 1610236800,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expectedDeliveryDate": {
            "read_only": "true,",
            "description": "Shipment expected delivery date (in ISO-8601 format).",
            "example": 1610236800,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "read_only": true,
            "description": "The date and time (in ISO-8601 format) when the shipment was created.",
            "example": 1610236800,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "read_only": true,
            "description": "The date and time (in ISO-8601 format) when the shipment was updated.",
            "example": 1610236800,
            "type": "string",
            "format": "date-time"
          },
          "lastStatusUpdate": {
            "read_only": true,
            "description": "The date and time (in ISO-8601 format) when the tracking status was updated.",
            "example": 1610236800,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "workspace": {
            "description": "The workspace reference to which the shipment belongs.",
            "example": "\/workspaces\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878",
            "type": "string",
            "format": "iri-reference"
          },
          "review": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "reviewTotalScore": {
            "type": "number",
            "nullable": true
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the shipment in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "ws_123456",
            "type": "string",
            "nullable": true
          },
          "fulfillmentIntegration": {
            "description": "The workflow reference to integration for fulfillment source.",
            "example": "\/workflows\/x5b97939-5aea-4b35-b7c6-64f56bff1722",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "fulfillmentSyncId": {
            "description": "The id of the shipment in the fulfillment source system (AliExpress, Amazon, etc.).",
            "example": "als_123456",
            "type": "string",
            "nullable": true
          },
          "address": {
            "nullable": true,
            "description": "The mailing address to where the order will be shipped. Represented by the Address object.",
            "$ref": "#\/components\/schemas\/Address-Getc"
          },
          "shipmentStatus": {
            "nullable": true,
            "description": "The current status of shipment. Represented by the Status object.",
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Status-Getc"
              }
            ]
          },
          "id": {
            "description": "A version 4 UUID.",
            "example": "83829499-f99c-4c91-9908-76c91f2ae312",
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "workspace"
        ]
      },
      "Shipment-Post": {
        "type": "object",
        "properties": {
          "trackingNumber": {
            "description": "A tracking number, provided by the shipping company.",
            "example": "TM123456789TM",
            "type": "string",
            "nullable": true
          },
          "orderNumbers": {
            "description": "List of order numbers to which the shipment belongs.",
            "example": "['ON1', 'ON2']\n",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email": {
            "description": "Customer email address.",
            "example": "non-existing@trackmage.com",
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "description": "Customer phone number.",
            "example": 13125551212,
            "type": "string",
            "nullable": true
          },
          "originCarrier": {
            "description": "The code of origin [carrier](https:\/\/trackmage.com\/carriers\/). Origin Carrier will be identified automatically based on Tracking Number. Sometimes the carrier cannot be identified. In that case, the system will return the error with the suggested carriers list in the payload. The value of this field can be specified only once in POST request.\n",
            "example": "china-post",
            "type": "string",
            "nullable": true
          },
          "workspace": {
            "description": "The workspace reference to which the shipment belongs.",
            "example": "\/workspaces\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878",
            "type": "string",
            "format": "iri-reference"
          },
          "orders": {
            "description": "List of order references to which the shipment belongs.",
            "example": "['\/orders\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878']\n",
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "shipmentItems": {
            "description": "List of shipment items references that belong to the shipment.",
            "example": "[\n    '\/shipment_items\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878',\n    '\/shipment_items\/3eb2f084-ea29-41ed-9bfb-691381bd7511'\n]\n",
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/ShipmentItem-Post"
            }
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the shipment in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "ws_123456",
            "type": "string",
            "nullable": true
          },
          "fulfillmentIntegration": {
            "description": "The workflow reference to integration for fulfillment source.",
            "example": "\/workflows\/x5b97939-5aea-4b35-b7c6-64f56bff1722",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "fulfillmentSyncId": {
            "description": "The id of the shipment in the fulfillment source system (AliExpress, Amazon, etc.).",
            "example": "als_123456",
            "type": "string",
            "nullable": true
          },
          "address": {
            "nullable": true,
            "description": "The mailing address to where the order will be shipped. Represented by the Address object.",
            "$ref": "#\/components\/schemas\/Address-Post"
          },
          "shipmentStatus": {
            "nullable": true,
            "description": "The current status of shipment. Represented by the Status object.",
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Status-Post"
              }
            ]
          }
        },
        "required": [
          "workspace"
        ]
      },
      "Shipment-Put": {
        "type": "object",
        "properties": {
          "trackingNumber": {
            "description": "A tracking number, provided by the shipping company.",
            "example": "TM123456789TM",
            "type": "string",
            "nullable": true
          },
          "orderNumbers": {
            "description": "List of order numbers to which the shipment belongs.",
            "example": "['ON1', 'ON2']\n",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email": {
            "description": "Customer email address.",
            "example": "non-existing@trackmage.com",
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "description": "Customer phone number.",
            "example": 13125551212,
            "type": "string",
            "nullable": true
          },
          "originCarrier": {
            "description": "The code of origin [carrier](https:\/\/trackmage.com\/carriers\/). Origin Carrier will be identified automatically based on Tracking Number. Sometimes the carrier cannot be identified. In that case, the system will return the error with the suggested carriers list in the payload. The value of this field can be specified only once in POST request.\n",
            "example": "china-post",
            "type": "string",
            "nullable": true
          },
          "orders": {
            "description": "List of order references to which the shipment belongs.",
            "example": "['\/orders\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878']\n",
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "shipmentItems": {
            "description": "List of shipment items references that belong to the shipment.",
            "example": "[\n    '\/shipment_items\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878',\n    '\/shipment_items\/3eb2f084-ea29-41ed-9bfb-691381bd7511'\n]\n",
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/ShipmentItem-Put"
            }
          },
          "address": {
            "nullable": true,
            "description": "The mailing address to where the order will be shipped. Represented by the Address object.",
            "$ref": "#\/components\/schemas\/Address-Put"
          },
          "shipmentStatus": {
            "nullable": true,
            "description": "The current status of shipment. Represented by the Status object.",
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Status-Put"
              }
            ]
          }
        }
      },
      "Shipment:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "trackingNumber": {
            "description": "A tracking number, provided by the shipping company.",
            "example": "TM123456789TM",
            "type": "string",
            "nullable": true
          },
          "trackingStatus": {
            "read_only": true,
            "description": "The code of the shipment's current [tracking status](Shipment\/TrackingStatuses.mdx).",
            "example": "in_transit",
            "extra": "- **pre_transit** - Carrier has received information about the package, but it has not yet been scanned and picked up.\n- **no_info** - A shipping label has been created, but the package has not yet been scanned and\/or picked up by the carrier.\n- **in_transit** - A package is travelling to its destination. You may receive multiple updates of this type as the package travels to its destination.\n- **delivery_in_progress** - A package has reached the local area and is in the process of being delivered.\n- **delivered** - The package has been delivered\n- **unsuccessful_delivery** - Carrier attempted to deliver, but failed, and usually leaves a notice and will try to deliver again.\n- **error** - Customs hold or any shipping exceptions. Please contact the carrier.\n- **expired** - A package has no tracking information for 30 days since it was created.\n- **available_for_pickup** - The package is available for pickup from the carrier's facility.\n- **cancelled** - The delivery has been cancelled.\n- **return_to_sender** - The package was not delivered and is now on its way back to the sender.\n- **transit_limit_exceeded** - The package has been in transit way longer than normal transit time allows. Please contact the carrier.\n",
            "type": "string",
            "nullable": true
          },
          "orderNumbers": {
            "description": "List of order numbers to which the shipment belongs.",
            "example": "['ON1', 'ON2']\n",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email": {
            "description": "Customer email address.",
            "example": "non-existing@trackmage.com",
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "description": "Customer phone number.",
            "example": 13125551212,
            "type": "string",
            "nullable": true
          },
          "daysInTransit": {
            "read_only": true,
            "description": "The number of days from the moment of sending to receiving of the parcel. The \"Days in Transit\" is the number of days from which the parcel transitioned into an active in-transit status. So once a parcel reaches end status or finite status, something like delivered or canceled or error or other finite states or return back to the sender (that is also finite state) then the days in transit calculation is no longer applied. So we're calculating the days when the parcel actually in transit. That's exactly what it is.\n",
            "example": 3,
            "type": "integer",
            "nullable": true
          },
          "daysInIdle": {
            "read_only": true,
            "description": "This field is calculated based on idle statuses or the statuses when the shipment actually was created, but it doesn't have a tracking number. So this is a pre-shipment state, or pre-transit state, no info state, whenever we are actually ordering the parcels from a supplier and we don't have confirmation from their end or the tracking number for the parcel. Once the parcel transitions to an in-transit state or other active statuses or any finite statuses, then the  \"days in idle\" counter stops to be calculated.\n",
            "example": 10,
            "type": "integer",
            "nullable": true
          },
          "originCarrier": {
            "description": "The code of origin [carrier](https:\/\/trackmage.com\/carriers\/). Origin Carrier will be identified automatically based on Tracking Number. Sometimes the carrier cannot be identified. In that case, the system will return the error with the suggested carriers list in the payload. The value of this field can be specified only once in POST request.\n",
            "example": "china-post",
            "type": "string",
            "nullable": true
          },
          "destinationCarrier": {
            "read_only": true,
            "description": "The code of destination [carrier](https:\/\/trackmage.com\/carriers\/).",
            "example": "dhl",
            "type": "string",
            "nullable": true
          },
          "originCountry": {
            "read_only": true,
            "description": "The origin country name.",
            "example": "China",
            "type": "string",
            "nullable": true
          },
          "destinationCountry": {
            "read_only": true,
            "description": "The destination country name.",
            "example": "Poland",
            "type": "string",
            "nullable": true
          },
          "originCountryIso2": {
            "read_only": true,
            "description": "The two-letter [country code](https:\/\/www.iso.org\/obp\/ui) corresponding to the origin country.",
            "example": "CN",
            "type": "string",
            "nullable": true
          },
          "destinationCountryIso2": {
            "read_only": true,
            "description": "The two-letter [country code](https:\/\/www.iso.org\/obp\/ui) corresponding to the destination country.",
            "example": "PL",
            "type": "string",
            "nullable": true
          },
          "shippedAt": {
            "read_only": "true,",
            "description": "Shipment dispatch date (in ISO-8601 format).",
            "example": 1610236800,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expectedDeliveryDate": {
            "read_only": "true,",
            "description": "Shipment expected delivery date (in ISO-8601 format).",
            "example": 1610236800,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "read_only": true,
            "description": "The date and time (in ISO-8601 format) when the shipment was created.",
            "example": 1610236800,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "read_only": true,
            "description": "The date and time (in ISO-8601 format) when the shipment was updated.",
            "example": 1610236800,
            "type": "string",
            "format": "date-time"
          },
          "lastStatusUpdate": {
            "read_only": true,
            "description": "The date and time (in ISO-8601 format) when the tracking status was updated.",
            "example": 1610236800,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "workspace": {
            "description": "The workspace reference to which the shipment belongs.",
            "example": "\/workspaces\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878",
            "type": "string",
            "format": "iri-reference"
          },
          "review": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "reviewTotalScore": {
            "type": "number",
            "nullable": true
          },
          "orders": {
            "description": "List of order references to which the shipment belongs.",
            "example": "['\/orders\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878']\n",
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "shipmentItems": {
            "description": "List of shipment items references that belong to the shipment.",
            "example": "[\n    '\/shipment_items\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878',\n    '\/shipment_items\/3eb2f084-ea29-41ed-9bfb-691381bd7511'\n]\n",
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the shipment in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "ws_123456",
            "type": "string",
            "nullable": true
          },
          "fulfillmentIntegration": {
            "description": "The workflow reference to integration for fulfillment source.",
            "example": "\/workflows\/x5b97939-5aea-4b35-b7c6-64f56bff1722",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "fulfillmentSyncId": {
            "description": "The id of the shipment in the fulfillment source system (AliExpress, Amazon, etc.).",
            "example": "als_123456",
            "type": "string",
            "nullable": true
          },
          "address": {
            "nullable": true,
            "description": "The mailing address to where the order will be shipped. Represented by the Address object.",
            "$ref": "#\/components\/schemas\/Address:jsonld-Get"
          },
          "shipmentStatus": {
            "nullable": true,
            "description": "The current status of shipment. Represented by the Status object.",
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Status:jsonld-Get"
              }
            ]
          },
          "id": {
            "description": "A version 4 UUID.",
            "example": "83829499-f99c-4c91-9908-76c91f2ae312",
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "workspace"
        ]
      },
      "Shipment:jsonld-Getc": {
        "type": "object",
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "trackingNumber": {
            "description": "A tracking number, provided by the shipping company.",
            "example": "TM123456789TM",
            "type": "string",
            "nullable": true
          },
          "trackingStatus": {
            "read_only": true,
            "description": "The code of the shipment's current [tracking status](Shipment\/TrackingStatuses.mdx).",
            "example": "in_transit",
            "extra": "- **pre_transit** - Carrier has received information about the package, but it has not yet been scanned and picked up.\n- **no_info** - A shipping label has been created, but the package has not yet been scanned and\/or picked up by the carrier.\n- **in_transit** - A package is travelling to its destination. You may receive multiple updates of this type as the package travels to its destination.\n- **delivery_in_progress** - A package has reached the local area and is in the process of being delivered.\n- **delivered** - The package has been delivered\n- **unsuccessful_delivery** - Carrier attempted to deliver, but failed, and usually leaves a notice and will try to deliver again.\n- **error** - Customs hold or any shipping exceptions. Please contact the carrier.\n- **expired** - A package has no tracking information for 30 days since it was created.\n- **available_for_pickup** - The package is available for pickup from the carrier's facility.\n- **cancelled** - The delivery has been cancelled.\n- **return_to_sender** - The package was not delivered and is now on its way back to the sender.\n- **transit_limit_exceeded** - The package has been in transit way longer than normal transit time allows. Please contact the carrier.\n",
            "type": "string",
            "nullable": true
          },
          "orderNumbers": {
            "description": "List of order numbers to which the shipment belongs.",
            "example": "['ON1', 'ON2']\n",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email": {
            "description": "Customer email address.",
            "example": "non-existing@trackmage.com",
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "description": "Customer phone number.",
            "example": 13125551212,
            "type": "string",
            "nullable": true
          },
          "daysInTransit": {
            "read_only": true,
            "description": "The number of days from the moment of sending to receiving of the parcel. The \"Days in Transit\" is the number of days from which the parcel transitioned into an active in-transit status. So once a parcel reaches end status or finite status, something like delivered or canceled or error or other finite states or return back to the sender (that is also finite state) then the days in transit calculation is no longer applied. So we're calculating the days when the parcel actually in transit. That's exactly what it is.\n",
            "example": 3,
            "type": "integer",
            "nullable": true
          },
          "daysInIdle": {
            "read_only": true,
            "description": "This field is calculated based on idle statuses or the statuses when the shipment actually was created, but it doesn't have a tracking number. So this is a pre-shipment state, or pre-transit state, no info state, whenever we are actually ordering the parcels from a supplier and we don't have confirmation from their end or the tracking number for the parcel. Once the parcel transitions to an in-transit state or other active statuses or any finite statuses, then the  \"days in idle\" counter stops to be calculated.\n",
            "example": 10,
            "type": "integer",
            "nullable": true
          },
          "originCarrier": {
            "description": "The code of origin [carrier](https:\/\/trackmage.com\/carriers\/). Origin Carrier will be identified automatically based on Tracking Number. Sometimes the carrier cannot be identified. In that case, the system will return the error with the suggested carriers list in the payload. The value of this field can be specified only once in POST request.\n",
            "example": "china-post",
            "type": "string",
            "nullable": true
          },
          "destinationCarrier": {
            "read_only": true,
            "description": "The code of destination [carrier](https:\/\/trackmage.com\/carriers\/).",
            "example": "dhl",
            "type": "string",
            "nullable": true
          },
          "originCountry": {
            "read_only": true,
            "description": "The origin country name.",
            "example": "China",
            "type": "string",
            "nullable": true
          },
          "destinationCountry": {
            "read_only": true,
            "description": "The destination country name.",
            "example": "Poland",
            "type": "string",
            "nullable": true
          },
          "originCountryIso2": {
            "read_only": true,
            "description": "The two-letter [country code](https:\/\/www.iso.org\/obp\/ui) corresponding to the origin country.",
            "example": "CN",
            "type": "string",
            "nullable": true
          },
          "destinationCountryIso2": {
            "read_only": true,
            "description": "The two-letter [country code](https:\/\/www.iso.org\/obp\/ui) corresponding to the destination country.",
            "example": "PL",
            "type": "string",
            "nullable": true
          },
          "shippedAt": {
            "read_only": "true,",
            "description": "Shipment dispatch date (in ISO-8601 format).",
            "example": 1610236800,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expectedDeliveryDate": {
            "read_only": "true,",
            "description": "Shipment expected delivery date (in ISO-8601 format).",
            "example": 1610236800,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "read_only": true,
            "description": "The date and time (in ISO-8601 format) when the shipment was created.",
            "example": 1610236800,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "read_only": true,
            "description": "The date and time (in ISO-8601 format) when the shipment was updated.",
            "example": 1610236800,
            "type": "string",
            "format": "date-time"
          },
          "lastStatusUpdate": {
            "read_only": true,
            "description": "The date and time (in ISO-8601 format) when the tracking status was updated.",
            "example": 1610236800,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "workspace": {
            "description": "The workspace reference to which the shipment belongs.",
            "example": "\/workspaces\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878",
            "type": "string",
            "format": "iri-reference"
          },
          "review": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "reviewTotalScore": {
            "type": "number",
            "nullable": true
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the shipment in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "ws_123456",
            "type": "string",
            "nullable": true
          },
          "fulfillmentIntegration": {
            "description": "The workflow reference to integration for fulfillment source.",
            "example": "\/workflows\/x5b97939-5aea-4b35-b7c6-64f56bff1722",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "fulfillmentSyncId": {
            "description": "The id of the shipment in the fulfillment source system (AliExpress, Amazon, etc.).",
            "example": "als_123456",
            "type": "string",
            "nullable": true
          },
          "address": {
            "nullable": true,
            "description": "The mailing address to where the order will be shipped. Represented by the Address object.",
            "$ref": "#\/components\/schemas\/Address:jsonld-Getc"
          },
          "shipmentStatus": {
            "nullable": true,
            "description": "The current status of shipment. Represented by the Status object.",
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Status:jsonld-Getc"
              }
            ]
          },
          "id": {
            "description": "A version 4 UUID.",
            "example": "83829499-f99c-4c91-9908-76c91f2ae312",
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "workspace"
        ]
      },
      "Shipment:jsonld-Post": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "trackingNumber": {
            "description": "A tracking number, provided by the shipping company.",
            "example": "TM123456789TM",
            "type": "string",
            "nullable": true
          },
          "orderNumbers": {
            "description": "List of order numbers to which the shipment belongs.",
            "example": "['ON1', 'ON2']\n",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email": {
            "description": "Customer email address.",
            "example": "non-existing@trackmage.com",
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "description": "Customer phone number.",
            "example": 13125551212,
            "type": "string",
            "nullable": true
          },
          "originCarrier": {
            "description": "The code of origin [carrier](https:\/\/trackmage.com\/carriers\/). Origin Carrier will be identified automatically based on Tracking Number. Sometimes the carrier cannot be identified. In that case, the system will return the error with the suggested carriers list in the payload. The value of this field can be specified only once in POST request.\n",
            "example": "china-post",
            "type": "string",
            "nullable": true
          },
          "workspace": {
            "description": "The workspace reference to which the shipment belongs.",
            "example": "\/workspaces\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878",
            "type": "string",
            "format": "iri-reference"
          },
          "orders": {
            "description": "List of order references to which the shipment belongs.",
            "example": "['\/orders\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878']\n",
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "shipmentItems": {
            "description": "List of shipment items references that belong to the shipment.",
            "example": "[\n    '\/shipment_items\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878',\n    '\/shipment_items\/3eb2f084-ea29-41ed-9bfb-691381bd7511'\n]\n",
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/ShipmentItem:jsonld-Post"
            }
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the shipment in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "ws_123456",
            "type": "string",
            "nullable": true
          },
          "fulfillmentIntegration": {
            "description": "The workflow reference to integration for fulfillment source.",
            "example": "\/workflows\/x5b97939-5aea-4b35-b7c6-64f56bff1722",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "fulfillmentSyncId": {
            "description": "The id of the shipment in the fulfillment source system (AliExpress, Amazon, etc.).",
            "example": "als_123456",
            "type": "string",
            "nullable": true
          },
          "address": {
            "nullable": true,
            "description": "The mailing address to where the order will be shipped. Represented by the Address object.",
            "$ref": "#\/components\/schemas\/Address:jsonld-Post"
          },
          "shipmentStatus": {
            "nullable": true,
            "description": "The current status of shipment. Represented by the Status object.",
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Status:jsonld-Post"
              }
            ]
          }
        },
        "required": [
          "workspace"
        ]
      },
      "Shipment:jsonld-Put": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "trackingNumber": {
            "description": "A tracking number, provided by the shipping company.",
            "example": "TM123456789TM",
            "type": "string",
            "nullable": true
          },
          "orderNumbers": {
            "description": "List of order numbers to which the shipment belongs.",
            "example": "['ON1', 'ON2']\n",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email": {
            "description": "Customer email address.",
            "example": "non-existing@trackmage.com",
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "description": "Customer phone number.",
            "example": 13125551212,
            "type": "string",
            "nullable": true
          },
          "originCarrier": {
            "description": "The code of origin [carrier](https:\/\/trackmage.com\/carriers\/). Origin Carrier will be identified automatically based on Tracking Number. Sometimes the carrier cannot be identified. In that case, the system will return the error with the suggested carriers list in the payload. The value of this field can be specified only once in POST request.\n",
            "example": "china-post",
            "type": "string",
            "nullable": true
          },
          "orders": {
            "description": "List of order references to which the shipment belongs.",
            "example": "['\/orders\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878']\n",
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "shipmentItems": {
            "description": "List of shipment items references that belong to the shipment.",
            "example": "[\n    '\/shipment_items\/cbe5589f-8869-4a9c-9d9c-3d7f70d66878',\n    '\/shipment_items\/3eb2f084-ea29-41ed-9bfb-691381bd7511'\n]\n",
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/ShipmentItem:jsonld-Put"
            }
          },
          "address": {
            "nullable": true,
            "description": "The mailing address to where the order will be shipped. Represented by the Address object.",
            "$ref": "#\/components\/schemas\/Address:jsonld-Put"
          },
          "shipmentStatus": {
            "nullable": true,
            "description": "The current status of shipment. Represented by the Status object.",
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Status:jsonld-Put"
              }
            ]
          }
        }
      },
      "ShipmentItem-Get": {
        "type": "object",
        "required": [
          "shipment",
          "orderItem"
        ],
        "properties": {
          "shipment": {
            "description": "The shipment reference to which the shipment item belongs.",
            "example": "\/shipments\/83829499-f99c-4c91-9908-76c91f2ae312",
            "type": "string",
            "format": "iri-reference"
          },
          "orderItem": {
            "description": "The order item reference to which the shipment items item belongs.",
            "example": "\/order_items\/83829499-f99c-4c91-9908-76c91f2ae312",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "qty": {
            "description": "The number of items in the shipment. Default and the minimum value is 0. The value cannot be greater than available quantity of the order item (orderItem.qty - orderItem.fulfilledQty).\n",
            "example": 10,
            "type": "integer",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the shipment item in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "wsi_123456",
            "type": "string",
            "nullable": true
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "fulfillmentIntegration": {
            "description": "The workflow reference to integration for fulfillment source.",
            "example": "\/workflows\/x5b97939-5aea-4b35-b7c6-64f56bff1722",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "fulfillmentSyncId": {
            "description": "The id of the shipment item in the fulfillment source system (AliExpress, Amazon, etc.).",
            "example": "alsi_123456",
            "type": "string",
            "nullable": true
          },
          "id": {
            "description": "A version 4 UUID.",
            "example": "7a1fbfed-48dc-4eaa-a1bb-e6e4c5754c7f",
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ShipmentItem-Post": {
        "type": "object",
        "required": [
          "shipment",
          "orderItem"
        ],
        "properties": {
          "shipment": {
            "description": "The shipment reference to which the shipment item belongs.",
            "example": "\/shipments\/83829499-f99c-4c91-9908-76c91f2ae312",
            "$ref": "#\/components\/schemas\/Shipment-Post"
          },
          "orderItem": {
            "description": "The order item reference to which the shipment items item belongs.",
            "example": "\/order_items\/83829499-f99c-4c91-9908-76c91f2ae312",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "qty": {
            "description": "The number of items in the shipment. Default and the minimum value is 0. The value cannot be greater than available quantity of the order item (orderItem.qty - orderItem.fulfilledQty).\n",
            "example": 10,
            "type": "integer",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the shipment item in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "wsi_123456",
            "type": "string",
            "nullable": true
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "fulfillmentIntegration": {
            "description": "The workflow reference to integration for fulfillment source.",
            "example": "\/workflows\/x5b97939-5aea-4b35-b7c6-64f56bff1722",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "fulfillmentSyncId": {
            "description": "The id of the shipment item in the fulfillment source system (AliExpress, Amazon, etc.).",
            "example": "alsi_123456",
            "type": "string",
            "nullable": true
          }
        }
      },
      "ShipmentItem-Put": {
        "type": "object",
        "required": [
          "orderItem"
        ],
        "properties": {
          "orderItem": {
            "description": "The order item reference to which the shipment items item belongs.",
            "example": "\/order_items\/83829499-f99c-4c91-9908-76c91f2ae312",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "qty": {
            "description": "The number of items in the shipment. Default and the minimum value is 0. The value cannot be greater than available quantity of the order item (orderItem.qty - orderItem.fulfilledQty).\n",
            "example": 10,
            "type": "integer",
            "nullable": true
          }
        }
      },
      "ShipmentItem:jsonld-Get": {
        "type": "object",
        "required": [
          "shipment",
          "orderItem"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "shipment": {
            "description": "The shipment reference to which the shipment item belongs.",
            "example": "\/shipments\/83829499-f99c-4c91-9908-76c91f2ae312",
            "type": "string",
            "format": "iri-reference"
          },
          "orderItem": {
            "description": "The order item reference to which the shipment items item belongs.",
            "example": "\/order_items\/83829499-f99c-4c91-9908-76c91f2ae312",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "qty": {
            "description": "The number of items in the shipment. Default and the minimum value is 0. The value cannot be greater than available quantity of the order item (orderItem.qty - orderItem.fulfilledQty).\n",
            "example": 10,
            "type": "integer",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the shipment item in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "wsi_123456",
            "type": "string",
            "nullable": true
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "fulfillmentIntegration": {
            "description": "The workflow reference to integration for fulfillment source.",
            "example": "\/workflows\/x5b97939-5aea-4b35-b7c6-64f56bff1722",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "fulfillmentSyncId": {
            "description": "The id of the shipment item in the fulfillment source system (AliExpress, Amazon, etc.).",
            "example": "alsi_123456",
            "type": "string",
            "nullable": true
          },
          "id": {
            "description": "A version 4 UUID.",
            "example": "7a1fbfed-48dc-4eaa-a1bb-e6e4c5754c7f",
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ShipmentItem:jsonld-Post": {
        "type": "object",
        "required": [
          "shipment",
          "orderItem"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "shipment": {
            "description": "The shipment reference to which the shipment item belongs.",
            "example": "\/shipments\/83829499-f99c-4c91-9908-76c91f2ae312",
            "$ref": "#\/components\/schemas\/Shipment:jsonld-Post"
          },
          "orderItem": {
            "description": "The order item reference to which the shipment items item belongs.",
            "example": "\/order_items\/83829499-f99c-4c91-9908-76c91f2ae312",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "qty": {
            "description": "The number of items in the shipment. Default and the minimum value is 0. The value cannot be greater than available quantity of the order item (orderItem.qty - orderItem.fulfilledQty).\n",
            "example": 10,
            "type": "integer",
            "nullable": true
          },
          "externalSourceSyncId": {
            "description": "The id of the shipment item in ecommerce store (WooCommerce, Shopify, etc.).",
            "example": "wsi_123456",
            "type": "string",
            "nullable": true
          },
          "externalSourceIntegration": {
            "description": "The workflow reference to integration for ecommerce store.",
            "example": "\/workflows\/a0b97939-5aea-4b35-b7c6-64f56bff1721",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "fulfillmentIntegration": {
            "description": "The workflow reference to integration for fulfillment source.",
            "example": "\/workflows\/x5b97939-5aea-4b35-b7c6-64f56bff1722",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "fulfillmentSyncId": {
            "description": "The id of the shipment item in the fulfillment source system (AliExpress, Amazon, etc.).",
            "example": "alsi_123456",
            "type": "string",
            "nullable": true
          }
        }
      },
      "ShipmentItem:jsonld-Put": {
        "type": "object",
        "required": [
          "orderItem"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "orderItem": {
            "description": "The order item reference to which the shipment items item belongs.",
            "example": "\/order_items\/83829499-f99c-4c91-9908-76c91f2ae312",
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "qty": {
            "description": "The number of items in the shipment. Default and the minimum value is 0. The value cannot be greater than available quantity of the order item (orderItem.qty - orderItem.fulfilledQty).\n",
            "example": 10,
            "type": "integer",
            "nullable": true
          }
        }
      },
      "ShopifyRegisterRequest-setShopifyRegisterRequest": {
        "type": "object",
        "required": [
          "tokenId",
          "firstName",
          "lastName",
          "email",
          "plainPassword",
          "team",
          "workspace",
          "subdomain"
        ],
        "properties": {
          "tokenId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string",
            "nullable": true
          },
          "emailHash": {
            "type": "string",
            "nullable": true
          },
          "plainPassword": {
            "type": "string",
            "nullable": true
          },
          "team": {
            "type": "string",
            "nullable": true
          },
          "workspace": {
            "type": "string",
            "nullable": true
          },
          "subdomain": {
            "type": "string",
            "nullable": true
          },
          "captcha": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ShopifyRegisterRequest:86d9ae84ced4700a6626eda78e8345e7-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/User-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription"
              }
            ]
          },
          "team": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Team-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription"
              }
            ]
          },
          "workspace": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Workspace-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription"
              }
            ]
          },
          "workflowId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ShopifyRegisterRequest:86d9ae84ced4700a6626eda78e8345e7:jsonld-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/User:jsonld-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription"
              }
            ]
          },
          "team": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Team:jsonld-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription"
              }
            ]
          },
          "workspace": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Workspace:jsonld-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription"
              }
            ]
          },
          "workflowId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ShopifyRegisterRequest:jsonld-setShopifyRegisterRequest": {
        "type": "object",
        "required": [
          "tokenId",
          "firstName",
          "lastName",
          "email",
          "plainPassword",
          "team",
          "workspace",
          "subdomain"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "tokenId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string",
            "nullable": true
          },
          "emailHash": {
            "type": "string",
            "nullable": true
          },
          "plainPassword": {
            "type": "string",
            "nullable": true
          },
          "team": {
            "type": "string",
            "nullable": true
          },
          "workspace": {
            "type": "string",
            "nullable": true
          },
          "subdomain": {
            "type": "string",
            "nullable": true
          },
          "captcha": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ShopifyWorkspaceRequest": {
        "type": "object",
        "required": [
          "tokenId",
          "workspaceId"
        ],
        "properties": {
          "tokenId": {
            "type": "string",
            "nullable": true
          },
          "workspaceId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ShopifyWorkspaceRequest:1aa22f76c20d62b9e18eec3bd170f333": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "string",
            "nullable": true
          },
          "workspaceId": {
            "type": "string",
            "nullable": true
          },
          "workflowId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ShopifyWorkspaceRequest:1aa22f76c20d62b9e18eec3bd170f333:jsonld": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "teamId": {
            "type": "string",
            "nullable": true
          },
          "workspaceId": {
            "type": "string",
            "nullable": true
          },
          "workflowId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ShopifyWorkspaceRequest:jsonld": {
        "type": "object",
        "required": [
          "tokenId",
          "workspaceId"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "tokenId": {
            "type": "string",
            "nullable": true
          },
          "workspaceId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Sidebar-Get": {
        "type": "object",
        "properties": {
          "parcelIcon": {
            "type": "string",
            "nullable": true
          },
          "groupIcon": {
            "type": "string",
            "nullable": true
          },
          "backgroundColor": {
            "type": "string",
            "nullable": true
          },
          "borderColor": {
            "type": "string",
            "nullable": true
          },
          "borderRadius": {
            "type": "integer",
            "nullable": true
          },
          "borderWidth": {
            "type": "integer",
            "nullable": true
          },
          "shadow": {
            "type": "string",
            "nullable": true
          },
          "font": {
            "$ref": "#\/components\/schemas\/Font-Get"
          }
        }
      },
      "Sidebar:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "parcelIcon": {
            "type": "string",
            "nullable": true
          },
          "groupIcon": {
            "type": "string",
            "nullable": true
          },
          "backgroundColor": {
            "type": "string",
            "nullable": true
          },
          "borderColor": {
            "type": "string",
            "nullable": true
          },
          "borderRadius": {
            "type": "integer",
            "nullable": true
          },
          "borderWidth": {
            "type": "integer",
            "nullable": true
          },
          "shadow": {
            "type": "string",
            "nullable": true
          },
          "font": {
            "$ref": "#\/components\/schemas\/Font:jsonld-Get"
          }
        }
      },
      "SocialIcon-Get": {
        "type": "object",
        "properties": {
          "url": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SocialIcon:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "url": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/url"
            },
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SocialIcons-Get": {
        "type": "object",
        "properties": {
          "fontColor": {
            "type": "string",
            "nullable": true
          },
          "icons": {
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/SocialIcon-Get"
            }
          }
        }
      },
      "SocialIcons:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "fontColor": {
            "type": "string",
            "nullable": true
          },
          "icons": {
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/SocialIcon:jsonld-Get"
            }
          }
        }
      },
      "State": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "State:jsonld": {
        "type": "object",
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Status-Get": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "description": "A unique status code. This field is required.",
            "example": "new",
            "type": "string"
          },
          "title": {
            "description": "A status name. This field is optional.",
            "example": "New",
            "type": "string",
            "nullable": true
          },
          "id": {
            "description": "A version 4 UUID.",
            "example": "c2dc66dc-9b21-4144-8b1f-4e1e1bb866d6",
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Status-Getc": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "description": "A unique status code. This field is required.",
            "example": "new",
            "type": "string"
          },
          "title": {
            "description": "A status name. This field is optional.",
            "example": "New",
            "type": "string",
            "nullable": true
          },
          "id": {
            "description": "A version 4 UUID.",
            "example": "c2dc66dc-9b21-4144-8b1f-4e1e1bb866d6",
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Status-Post": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "description": "A unique status code. This field is required.",
            "example": "new",
            "type": "string"
          },
          "title": {
            "description": "A status name. This field is optional.",
            "example": "New",
            "type": "string",
            "nullable": true
          }
        }
      },
      "Status-Put": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "description": "A unique status code. This field is required.",
            "example": "new",
            "type": "string"
          },
          "title": {
            "description": "A status name. This field is optional.",
            "example": "New",
            "type": "string",
            "nullable": true
          }
        }
      },
      "Status:01d0f434438e480f7bbc7790c6311108-getCheckStatusRefsResponse": {
        "type": "object",
        "properties": {
          "refsCount": {
            "type": "integer"
          }
        }
      },
      "Status:01d0f434438e480f7bbc7790c6311108:jsonld-getCheckStatusRefsResponse": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "refsCount": {
            "type": "integer"
          }
        }
      },
      "Status:113e64b04cfc724b475734cd9eb5ea56-setCheckStatusRefsRequest": {
        "type": "object",
        "properties": {
          "workspaceId": {
            "type": "string",
            "nullable": true
          },
          "statusId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Status:113e64b04cfc724b475734cd9eb5ea56:jsonld-setCheckStatusRefsRequest": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "workspaceId": {
            "type": "string",
            "nullable": true
          },
          "statusId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Status:a5842c80e161de61194eb8382eef2bd2-setMigrateStatusRefsRequest": {
        "type": "object",
        "properties": {
          "workspaceId": {
            "type": "string",
            "nullable": true
          },
          "fromStatusId": {
            "type": "string",
            "nullable": true
          },
          "toStatusId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Status:a5842c80e161de61194eb8382eef2bd2:jsonld-setMigrateStatusRefsRequest": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "workspaceId": {
            "type": "string",
            "nullable": true
          },
          "fromStatusId": {
            "type": "string",
            "nullable": true
          },
          "toStatusId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Status:fb253404adfa1c8f5e5289236bfea1fd-getMigrateStatusRefsResponse": {
        "type": "object",
        "properties": {
          "updatedRefsCount": {
            "type": "integer"
          }
        }
      },
      "Status:fb253404adfa1c8f5e5289236bfea1fd:jsonld-getMigrateStatusRefsResponse": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "updatedRefsCount": {
            "type": "integer"
          }
        }
      },
      "Status:jsonld-Get": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "code": {
            "description": "A unique status code. This field is required.",
            "example": "new",
            "type": "string"
          },
          "title": {
            "description": "A status name. This field is optional.",
            "example": "New",
            "type": "string",
            "nullable": true
          },
          "id": {
            "description": "A version 4 UUID.",
            "example": "c2dc66dc-9b21-4144-8b1f-4e1e1bb866d6",
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Status:jsonld-Getc": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "code": {
            "description": "A unique status code. This field is required.",
            "example": "new",
            "type": "string"
          },
          "title": {
            "description": "A status name. This field is optional.",
            "example": "New",
            "type": "string",
            "nullable": true
          },
          "id": {
            "description": "A version 4 UUID.",
            "example": "c2dc66dc-9b21-4144-8b1f-4e1e1bb866d6",
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Status:jsonld-Post": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "code": {
            "description": "A unique status code. This field is required.",
            "example": "new",
            "type": "string"
          },
          "title": {
            "description": "A status name. This field is optional.",
            "example": "New",
            "type": "string",
            "nullable": true
          }
        }
      },
      "Status:jsonld-Put": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "code": {
            "description": "A unique status code. This field is required.",
            "example": "new",
            "type": "string"
          },
          "title": {
            "description": "A status name. This field is optional.",
            "example": "New",
            "type": "string",
            "nullable": true
          }
        }
      },
      "SubdomainCheckRequest": {
        "type": "object",
        "properties": {
          "subdomain": {
            "type": "string"
          }
        }
      },
      "SubdomainCheckRequest:e29d63eea28a754aa626ec5e9cd91799": {
        "type": "object",
        "properties": {
          "available": {
            "type": "boolean"
          }
        }
      },
      "SubdomainCheckRequest:e29d63eea28a754aa626ec5e9cd91799:jsonld": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "available": {
            "type": "boolean"
          }
        }
      },
      "SubdomainCheckRequest:jsonld": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "subdomain": {
            "type": "string"
          }
        }
      },
      "Subscription-Get": {
        "type": "object",
        "properties": {
          "cbId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "planType": {
            "type": "string",
            "nullable": true
          },
          "planId": {
            "type": "string",
            "nullable": true
          },
          "addonsQtyByKey": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "planName": {
            "type": "string",
            "nullable": true
          },
          "billingPeriod": {
            "type": "integer",
            "nullable": true
          },
          "billingPeriodUnit": {
            "type": "string",
            "nullable": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "unpaidInvoices": {
            "type": "boolean"
          },
          "hasScheduledChanges": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "hasCouponCode": {
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "Subscription-Getp": {
        "type": "object",
        "properties": {
          "cbId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "planType": {
            "type": "string",
            "nullable": true
          },
          "planId": {
            "type": "string",
            "nullable": true
          },
          "addonsQtyByKey": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "planName": {
            "type": "string",
            "nullable": true
          },
          "billingPeriod": {
            "type": "integer",
            "nullable": true
          },
          "billingPeriodUnit": {
            "type": "string",
            "nullable": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "unpaidInvoices": {
            "type": "boolean"
          },
          "hasScheduledChanges": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "hasCouponCode": {
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "Subscription-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription": {
        "type": "object",
        "properties": {
          "cbId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "planType": {
            "type": "string",
            "nullable": true
          },
          "planId": {
            "type": "string",
            "nullable": true
          },
          "addonsQtyByKey": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "planName": {
            "type": "string",
            "nullable": true
          },
          "billingPeriod": {
            "type": "integer",
            "nullable": true
          },
          "billingPeriodUnit": {
            "type": "string",
            "nullable": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "unpaidInvoices": {
            "type": "boolean"
          },
          "hasScheduledChanges": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "hasCouponCode": {
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "Subscription:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "cbId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "planType": {
            "type": "string",
            "nullable": true
          },
          "planId": {
            "type": "string",
            "nullable": true
          },
          "addonsQtyByKey": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "planName": {
            "type": "string",
            "nullable": true
          },
          "billingPeriod": {
            "type": "integer",
            "nullable": true
          },
          "billingPeriodUnit": {
            "type": "string",
            "nullable": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "unpaidInvoices": {
            "type": "boolean"
          },
          "hasScheduledChanges": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "hasCouponCode": {
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "Subscription:jsonld-Getp": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "cbId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "planType": {
            "type": "string",
            "nullable": true
          },
          "planId": {
            "type": "string",
            "nullable": true
          },
          "addonsQtyByKey": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "planName": {
            "type": "string",
            "nullable": true
          },
          "billingPeriod": {
            "type": "integer",
            "nullable": true
          },
          "billingPeriodUnit": {
            "type": "string",
            "nullable": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "unpaidInvoices": {
            "type": "boolean"
          },
          "hasScheduledChanges": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "hasCouponCode": {
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "Subscription:jsonld-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "cbId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "planType": {
            "type": "string",
            "nullable": true
          },
          "planId": {
            "type": "string",
            "nullable": true
          },
          "addonsQtyByKey": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "planName": {
            "type": "string",
            "nullable": true
          },
          "billingPeriod": {
            "type": "integer",
            "nullable": true
          },
          "billingPeriodUnit": {
            "type": "string",
            "nullable": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "unpaidInvoices": {
            "type": "boolean"
          },
          "hasScheduledChanges": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "hasCouponCode": {
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "Team-Get": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "workspacesCount": {
            "type": "integer",
            "nullable": true
          },
          "usersCount": {
            "type": "integer",
            "nullable": true
          },
          "entitlements": {
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/Entitlement-Get"
            }
          },
          "subscription": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Subscription-Get"
              }
            ]
          },
          "billingProvider": {
            "type": "string"
          },
          "shopifyBillingWorkflowId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Team-Getp": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "workspaces": {
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/Workspace-Getp"
            }
          },
          "workspacesCount": {
            "type": "integer",
            "nullable": true
          },
          "usersCount": {
            "type": "integer",
            "nullable": true
          },
          "entitlements": {
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/Entitlement-Getp"
            }
          },
          "subscription": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Subscription-Getp"
              }
            ]
          },
          "billingProvider": {
            "type": "string"
          },
          "shopifyBillingWorkflowId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Team-Post": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Team-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "workspaces": {
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/Workspace-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription"
            }
          },
          "workspacesCount": {
            "type": "integer",
            "nullable": true
          },
          "usersCount": {
            "type": "integer",
            "nullable": true
          },
          "entitlements": {
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/Entitlement-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription"
            }
          },
          "subscription": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Subscription-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription"
              }
            ]
          },
          "billingProvider": {
            "type": "string"
          },
          "shopifyBillingWorkflowId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Team:jsonld-Get": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "workspacesCount": {
            "type": "integer",
            "nullable": true
          },
          "usersCount": {
            "type": "integer",
            "nullable": true
          },
          "entitlements": {
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/Entitlement:jsonld-Get"
            }
          },
          "subscription": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Subscription:jsonld-Get"
              }
            ]
          },
          "billingProvider": {
            "type": "string"
          },
          "shopifyBillingWorkflowId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Team:jsonld-Getp": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "workspaces": {
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/Workspace:jsonld-Getp"
            }
          },
          "workspacesCount": {
            "type": "integer",
            "nullable": true
          },
          "usersCount": {
            "type": "integer",
            "nullable": true
          },
          "entitlements": {
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/Entitlement:jsonld-Getp"
            }
          },
          "subscription": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Subscription:jsonld-Getp"
              }
            ]
          },
          "billingProvider": {
            "type": "string"
          },
          "shopifyBillingWorkflowId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Team:jsonld-Post": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Team:jsonld-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "workspaces": {
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/Workspace:jsonld-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription"
            }
          },
          "workspacesCount": {
            "type": "integer",
            "nullable": true
          },
          "usersCount": {
            "type": "integer",
            "nullable": true
          },
          "entitlements": {
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/Entitlement:jsonld-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription"
            }
          },
          "subscription": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Subscription:jsonld-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription"
              }
            ]
          },
          "billingProvider": {
            "type": "string"
          },
          "shopifyBillingWorkflowId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "TeamMember-Get": {
        "type": "object",
        "properties": {
          "team": {
            "$ref": "#\/components\/schemas\/Team-Get"
          },
          "invitedEmail": {
            "type": "string",
            "nullable": true
          },
          "member": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "teamAdmin": {
            "type": "boolean"
          },
          "teamOwner": {
            "type": "boolean"
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "memberName": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "memberPhoto": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "memberEmail": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "memberLastLoggedIn": {
            "readOnly": true,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "teamName": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "teamId": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          }
        }
      },
      "TeamMember-Put": {
        "type": "object",
        "properties": {
          "teamAdmin": {
            "type": "boolean"
          }
        }
      },
      "TeamMember:jsonld-Get": {
        "type": "object",
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "team": {
            "$ref": "#\/components\/schemas\/Team:jsonld-Get"
          },
          "invitedEmail": {
            "type": "string",
            "nullable": true
          },
          "member": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "teamAdmin": {
            "type": "boolean"
          },
          "teamOwner": {
            "type": "boolean"
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "memberName": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "memberPhoto": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "memberEmail": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "memberLastLoggedIn": {
            "readOnly": true,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "teamName": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "teamId": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          }
        }
      },
      "TeamMember:jsonld-Put": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "teamAdmin": {
            "type": "boolean"
          }
        }
      },
      "Timezone": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Timezone:jsonld": {
        "type": "object",
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Token-getUserSignupResponse_getUser_getToken": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "nullable": true
          },
          "expires_in": {
            "type": "integer",
            "nullable": true
          },
          "refresh_token": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "type": "string",
            "nullable": true
          },
          "token_type": {
            "type": "string",
            "nullable": true
          },
          "user_email": {
            "type": "string",
            "nullable": true
          },
          "user_id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Token:jsonld-getUserSignupResponse_getUser_getToken": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "access_token": {
            "type": "string",
            "nullable": true
          },
          "expires_in": {
            "type": "integer",
            "nullable": true
          },
          "refresh_token": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "type": "string",
            "nullable": true
          },
          "token_type": {
            "type": "string",
            "nullable": true
          },
          "user_email": {
            "type": "string",
            "nullable": true
          },
          "user_id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Tracking-CheckTrackingStatusesRequest_setTrackingForCheck": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "nullable": true
          },
          "originCarrier": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Tracking:jsonld-CheckTrackingStatusesRequest_setTrackingForCheck": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "originCarrier": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TrackingCheckpoint-Get": {
        "type": "object",
        "properties": {
          "shipment": {
            "read_only": "true,",
            "description": "The shipment reference to which the shipment item belongs.",
            "example": "\/shipments\/83829499-f99c-4c91-9908-76c91f2ae312",
            "type": "string",
            "format": "iri-reference"
          },
          "checkpointDate": {
            "read_only": "true,",
            "description": "The date and time (in ISO-8601 format) of the checkpoint, provided by carrier.",
            "example": 1608193517,
            "type": "string",
            "format": "date-time"
          },
          "info": {
            "read_only": "true,",
            "description": "Checkpoint message provided by carrier.",
            "example": "We deliver your shipment at your preferred day and\/or time",
            "type": "string",
            "nullable": true
          },
          "location": {
            "read_only": "true,",
            "description": "Location info provided by carrier.",
            "example": "BOSTON MA DISTRIBUTION CENTER",
            "type": "string",
            "nullable": true
          },
          "rel": {
            "read_only": "true,",
            "description": "carrier affiliation",
            "example": "origin",
            "type": "string",
            "nullable": true
          },
          "id": {
            "description": "A unique version 4 UUID.",
            "example": "2f7fabde-f99d-4160-a90a-20caa2fb95e6",
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "TrackingCheckpoint-Getc": {
        "type": "object",
        "properties": {
          "checkpointDate": {
            "read_only": "true,",
            "description": "The date and time (in ISO-8601 format) of the checkpoint, provided by carrier.",
            "example": 1608193517,
            "type": "string",
            "format": "date-time"
          },
          "info": {
            "read_only": "true,",
            "description": "Checkpoint message provided by carrier.",
            "example": "We deliver your shipment at your preferred day and\/or time",
            "type": "string",
            "nullable": true
          },
          "location": {
            "read_only": "true,",
            "description": "Location info provided by carrier.",
            "example": "BOSTON MA DISTRIBUTION CENTER",
            "type": "string",
            "nullable": true
          },
          "rel": {
            "read_only": "true,",
            "description": "carrier affiliation",
            "example": "origin",
            "type": "string",
            "nullable": true
          },
          "id": {
            "description": "A unique version 4 UUID.",
            "example": "2f7fabde-f99d-4160-a90a-20caa2fb95e6",
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "TrackingCheckpoint:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "shipment": {
            "read_only": "true,",
            "description": "The shipment reference to which the shipment item belongs.",
            "example": "\/shipments\/83829499-f99c-4c91-9908-76c91f2ae312",
            "type": "string",
            "format": "iri-reference"
          },
          "checkpointDate": {
            "read_only": "true,",
            "description": "The date and time (in ISO-8601 format) of the checkpoint, provided by carrier.",
            "example": 1608193517,
            "type": "string",
            "format": "date-time"
          },
          "info": {
            "read_only": "true,",
            "description": "Checkpoint message provided by carrier.",
            "example": "We deliver your shipment at your preferred day and\/or time",
            "type": "string",
            "nullable": true
          },
          "location": {
            "read_only": "true,",
            "description": "Location info provided by carrier.",
            "example": "BOSTON MA DISTRIBUTION CENTER",
            "type": "string",
            "nullable": true
          },
          "rel": {
            "read_only": "true,",
            "description": "carrier affiliation",
            "example": "origin",
            "type": "string",
            "nullable": true
          },
          "id": {
            "description": "A unique version 4 UUID.",
            "example": "2f7fabde-f99d-4160-a90a-20caa2fb95e6",
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "TrackingCheckpoint:jsonld-Getc": {
        "type": "object",
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "checkpointDate": {
            "read_only": "true,",
            "description": "The date and time (in ISO-8601 format) of the checkpoint, provided by carrier.",
            "example": 1608193517,
            "type": "string",
            "format": "date-time"
          },
          "info": {
            "read_only": "true,",
            "description": "Checkpoint message provided by carrier.",
            "example": "We deliver your shipment at your preferred day and\/or time",
            "type": "string",
            "nullable": true
          },
          "location": {
            "read_only": "true,",
            "description": "Location info provided by carrier.",
            "example": "BOSTON MA DISTRIBUTION CENTER",
            "type": "string",
            "nullable": true
          },
          "rel": {
            "read_only": "true,",
            "description": "carrier affiliation",
            "example": "origin",
            "type": "string",
            "nullable": true
          },
          "id": {
            "description": "A unique version 4 UUID.",
            "example": "2f7fabde-f99d-4160-a90a-20caa2fb95e6",
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "TrackingPage-Get": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "reviewsEnabled": {
            "type": "boolean"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "workspace": {
            "type": "string",
            "format": "iri-reference"
          },
          "subdomain": {
            "type": "string"
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "domainEnabled": {
            "type": "boolean"
          },
          "sidebarField": {
            "type": "string",
            "nullable": true
          },
          "trackingNumberField": {
            "type": "string",
            "nullable": true
          },
          "builder": {
            "$ref": "#\/components\/schemas\/Builder-Get"
          },
          "dropshipperSettings": {
            "$ref": "#\/components\/schemas\/DropshipperSettings-Get"
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "usedByDefault": {
            "readOnly": true,
            "type": "boolean"
          }
        },
        "required": [
          "title",
          "workspace",
          "subdomain"
        ]
      },
      "TrackingPage-Getc": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "reviewsEnabled": {
            "type": "boolean"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "workspace": {
            "type": "string",
            "format": "iri-reference"
          },
          "subdomain": {
            "type": "string"
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "domainEnabled": {
            "type": "boolean"
          },
          "sidebarField": {
            "type": "string",
            "nullable": true
          },
          "trackingNumberField": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "usedByDefault": {
            "readOnly": true,
            "type": "boolean"
          }
        },
        "required": [
          "title",
          "workspace",
          "subdomain"
        ]
      },
      "TrackingPage-Post": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "reviewsEnabled": {
            "type": "boolean"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "subdomain": {
            "type": "string"
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "sidebarField": {
            "type": "string",
            "nullable": true
          },
          "trackingNumberField": {
            "type": "string",
            "nullable": true
          },
          "builder": {
            "$ref": "#\/components\/schemas\/Builder-Post"
          },
          "dropshipperSettings": {
            "$ref": "#\/components\/schemas\/DropshipperSettings-Post"
          }
        },
        "required": [
          "title",
          "subdomain"
        ]
      },
      "TrackingPage-Put": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "reviewsEnabled": {
            "type": "boolean"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "subdomain": {
            "type": "string"
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "sidebarField": {
            "type": "string",
            "nullable": true
          },
          "trackingNumberField": {
            "type": "string",
            "nullable": true
          },
          "builder": {
            "$ref": "#\/components\/schemas\/Builder-Put"
          },
          "dropshipperSettings": {
            "$ref": "#\/components\/schemas\/DropshipperSettings-Put"
          }
        },
        "required": [
          "title",
          "subdomain"
        ]
      },
      "TrackingPage:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "reviewsEnabled": {
            "type": "boolean"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "workspace": {
            "type": "string",
            "format": "iri-reference"
          },
          "subdomain": {
            "type": "string"
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "domainEnabled": {
            "type": "boolean"
          },
          "sidebarField": {
            "type": "string",
            "nullable": true
          },
          "trackingNumberField": {
            "type": "string",
            "nullable": true
          },
          "builder": {
            "$ref": "#\/components\/schemas\/Builder:jsonld-Get"
          },
          "dropshipperSettings": {
            "$ref": "#\/components\/schemas\/DropshipperSettings:jsonld-Get"
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "usedByDefault": {
            "readOnly": true,
            "type": "boolean"
          }
        },
        "required": [
          "title",
          "workspace",
          "subdomain"
        ]
      },
      "TrackingPage:jsonld-Getc": {
        "type": "object",
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "reviewsEnabled": {
            "type": "boolean"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "workspace": {
            "type": "string",
            "format": "iri-reference"
          },
          "subdomain": {
            "type": "string"
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "domainEnabled": {
            "type": "boolean"
          },
          "sidebarField": {
            "type": "string",
            "nullable": true
          },
          "trackingNumberField": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "usedByDefault": {
            "readOnly": true,
            "type": "boolean"
          }
        },
        "required": [
          "title",
          "workspace",
          "subdomain"
        ]
      },
      "TrackingPage:jsonld-Post": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "reviewsEnabled": {
            "type": "boolean"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "subdomain": {
            "type": "string"
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "sidebarField": {
            "type": "string",
            "nullable": true
          },
          "trackingNumberField": {
            "type": "string",
            "nullable": true
          },
          "builder": {
            "$ref": "#\/components\/schemas\/Builder:jsonld-Post"
          },
          "dropshipperSettings": {
            "$ref": "#\/components\/schemas\/DropshipperSettings:jsonld-Post"
          }
        },
        "required": [
          "title",
          "subdomain"
        ]
      },
      "TrackingPage:jsonld-Put": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "reviewsEnabled": {
            "type": "boolean"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "subdomain": {
            "type": "string"
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "sidebarField": {
            "type": "string",
            "nullable": true
          },
          "trackingNumberField": {
            "type": "string",
            "nullable": true
          },
          "builder": {
            "$ref": "#\/components\/schemas\/Builder:jsonld-Put"
          },
          "dropshipperSettings": {
            "$ref": "#\/components\/schemas\/DropshipperSettings:jsonld-Put"
          }
        },
        "required": [
          "title",
          "subdomain"
        ]
      },
      "TrackingStatus-Get": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TrackingStatus:jsonld-Get": {
        "type": "object",
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "User-Get": {
        "type": "object",
        "required": [
          "email",
          "firstName",
          "lastName"
        ],
        "properties": {
          "email": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "emailVerified": {
            "type": "boolean"
          },
          "passwordSet": {
            "type": "boolean"
          },
          "trialRedeemed": {
            "type": "boolean"
          },
          "timezone": {
            "type": "string",
            "nullable": true
          },
          "photo": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Media-Get"
              }
            ]
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "teams": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "User-Put": {
        "type": "object",
        "required": [
          "firstName",
          "lastName"
        ],
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "plainPassword": {
            "type": "string",
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "nullable": true
          },
          "photo": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          }
        }
      },
      "User-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription": {
        "type": "object",
        "required": [
          "email",
          "firstName",
          "lastName"
        ],
        "properties": {
          "email": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "emailVerified": {
            "type": "boolean"
          },
          "passwordSet": {
            "type": "boolean"
          },
          "trialRedeemed": {
            "type": "boolean"
          },
          "timezone": {
            "type": "string",
            "nullable": true
          },
          "photo": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Media-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription"
              }
            ]
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "teams": {
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/Team-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription"
            }
          }
        }
      },
      "User-getUserSignupResponse_getUser_getToken": {
        "type": "object",
        "required": [
          "email",
          "firstName",
          "lastName"
        ],
        "properties": {
          "email": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "emailVerified": {
            "type": "boolean"
          },
          "passwordSet": {
            "type": "boolean"
          },
          "trialRedeemed": {
            "type": "boolean"
          },
          "timezone": {
            "type": "string",
            "nullable": true
          },
          "photo": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "teams": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "User:28ef97915986ee8b9ee88e51a8e8015f-setForgotPasswordResetRequest": {
        "type": "object",
        "required": [
          "code",
          "newPassword"
        ],
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "User:28ef97915986ee8b9ee88e51a8e8015f:jsonld-setForgotPasswordResetRequest": {
        "type": "object",
        "required": [
          "code",
          "newPassword"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "User:jsonld-Get": {
        "type": "object",
        "required": [
          "email",
          "firstName",
          "lastName"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "email": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "emailVerified": {
            "type": "boolean"
          },
          "passwordSet": {
            "type": "boolean"
          },
          "trialRedeemed": {
            "type": "boolean"
          },
          "timezone": {
            "type": "string",
            "nullable": true
          },
          "photo": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Media:jsonld-Get"
              }
            ]
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "teams": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "User:jsonld-Put": {
        "type": "object",
        "required": [
          "firstName",
          "lastName"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "plainPassword": {
            "type": "string",
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "nullable": true
          },
          "photo": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          }
        }
      },
      "User:jsonld-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription": {
        "type": "object",
        "required": [
          "email",
          "firstName",
          "lastName"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "email": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "emailVerified": {
            "type": "boolean"
          },
          "passwordSet": {
            "type": "boolean"
          },
          "trialRedeemed": {
            "type": "boolean"
          },
          "timezone": {
            "type": "string",
            "nullable": true
          },
          "photo": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Media:jsonld-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription"
              }
            ]
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "teams": {
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/Team:jsonld-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription"
            }
          }
        }
      },
      "User:jsonld-getUserSignupResponse_getUser_getToken": {
        "type": "object",
        "required": [
          "email",
          "firstName",
          "lastName"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "email": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "emailVerified": {
            "type": "boolean"
          },
          "passwordSet": {
            "type": "boolean"
          },
          "trialRedeemed": {
            "type": "boolean"
          },
          "timezone": {
            "type": "string",
            "nullable": true
          },
          "photo": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "teams": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "UserResendEmailRequest": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string",
            "nullable": true
          },
          "captcha": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserResendEmailRequest:jsonld": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "email": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string",
            "nullable": true
          },
          "captcha": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserSignupRequest-setUserSignupRequest": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string",
            "nullable": true
          },
          "captcha": {
            "type": "string",
            "nullable": true
          },
          "refTrackingId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserSignupRequest:56a0ef77336da222b4771573157e2e64-getUserSignupResponse_getUser_getToken": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#\/components\/schemas\/User-getUserSignupResponse_getUser_getToken"
          },
          "token": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Token-getUserSignupResponse_getUser_getToken"
              }
            ]
          }
        }
      },
      "UserSignupRequest:56a0ef77336da222b4771573157e2e64:jsonld-getUserSignupResponse_getUser_getToken": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "user": {
            "$ref": "#\/components\/schemas\/User:jsonld-getUserSignupResponse_getUser_getToken"
          },
          "token": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Token:jsonld-getUserSignupResponse_getUser_getToken"
              }
            ]
          }
        }
      },
      "UserSignupRequest:jsonld-setUserSignupRequest": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "email": {
            "externalDocs": {
              "url": "http:\/\/schema.org\/email"
            },
            "type": "string",
            "nullable": true
          },
          "captcha": {
            "type": "string",
            "nullable": true
          },
          "refTrackingId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserVerifyEmailRequest": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "writeOnly": true,
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserVerifyEmailRequest-getUserVerifyEmailResponse_getUser": {
        "type": "object"
      },
      "UserVerifyEmailRequest:jsonld": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "code": {
            "writeOnly": true,
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserVerifyEmailRequest:jsonld-getUserVerifyEmailResponse_getUser": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "VerifyDomainRequest": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string"
          }
        }
      },
      "VerifyDomainRequest:dddf337f2968b9a0d8945a92c3650a2f": {
        "type": "object",
        "properties": {
          "accessible": {
            "type": "boolean"
          },
          "ssl": {
            "type": "boolean"
          },
          "verified": {
            "type": "boolean"
          }
        }
      },
      "VerifyDomainRequest:dddf337f2968b9a0d8945a92c3650a2f:jsonld": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "accessible": {
            "type": "boolean"
          },
          "ssl": {
            "type": "boolean"
          },
          "verified": {
            "type": "boolean"
          }
        }
      },
      "VerifyDomainRequest:jsonld": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "domain": {
            "type": "string"
          }
        }
      },
      "Workflow-Get": {
        "type": "object",
        "required": [
          "title",
          "type",
          "workspace",
          "enabled",
          "period"
        ],
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string"
          },
          "workspace": {
            "type": "string",
            "format": "iri-reference"
          },
          "credentials": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "notificationEmails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enabled": {
            "type": "boolean"
          },
          "lastRunDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "period": {
            "description": "applies only to out",
            "type": "string"
          },
          "integration": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Workflow-Get"
              }
            ]
          },
          "firstTimeSetupPassed": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "integrationType": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "passive": {
            "readOnly": true,
            "type": "boolean"
          },
          "remote": {
            "readOnly": true,
            "type": "boolean"
          },
          "firstTimeSetupRequired": {
            "readOnly": true,
            "type": "boolean"
          },
          "runInProgress": {
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "Workflow-Getc": {
        "type": "object",
        "required": [
          "title",
          "type",
          "enabled",
          "period"
        ],
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "lastRunDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "period": {
            "description": "applies only to out",
            "type": "string"
          },
          "integration": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Workflow-Getc"
              }
            ]
          },
          "firstTimeSetupPassed": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "integrationType": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "passive": {
            "readOnly": true,
            "type": "boolean"
          },
          "remote": {
            "readOnly": true,
            "type": "boolean"
          },
          "firstTimeSetupRequired": {
            "readOnly": true,
            "type": "boolean"
          },
          "runInProgress": {
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "Workflow-Post": {
        "type": "object",
        "required": [
          "title",
          "type",
          "workspace",
          "enabled",
          "period"
        ],
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string"
          },
          "workspace": {
            "type": "string",
            "format": "iri-reference"
          },
          "credentials": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Credentials-Post"
              }
            ]
          },
          "notificationEmails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enabled": {
            "type": "boolean"
          },
          "period": {
            "description": "applies only to out",
            "type": "string"
          },
          "integration": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Workflow-Post"
              }
            ]
          },
          "firstTimeSetupPassed": {
            "type": "boolean"
          }
        }
      },
      "Workflow-Put": {
        "type": "object",
        "required": [
          "title",
          "type",
          "workspace",
          "enabled",
          "period"
        ],
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string"
          },
          "workspace": {
            "type": "string",
            "format": "iri-reference"
          },
          "credentials": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "notificationEmails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enabled": {
            "type": "boolean"
          },
          "period": {
            "description": "applies only to out",
            "type": "string"
          },
          "integration": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Workflow-Put"
              }
            ]
          },
          "firstTimeSetupPassed": {
            "type": "boolean"
          }
        }
      },
      "Workflow:5e8b6666cb03cdbeb497c933811f7225-setSubmitSuggestionRequest": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Workflow:5e8b6666cb03cdbeb497c933811f7225:jsonld-setSubmitSuggestionRequest": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Workflow:eeeece1a88d1796f3bf20eb571d2731c-setExecuteWorkflowRequest": {
        "type": "object"
      },
      "Workflow:eeeece1a88d1796f3bf20eb571d2731c:jsonld-setExecuteWorkflowRequest": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "Workflow:jsonld-Get": {
        "type": "object",
        "required": [
          "title",
          "type",
          "workspace",
          "enabled",
          "period"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string"
          },
          "workspace": {
            "type": "string",
            "format": "iri-reference"
          },
          "credentials": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "notificationEmails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enabled": {
            "type": "boolean"
          },
          "lastRunDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "period": {
            "description": "applies only to out",
            "type": "string"
          },
          "integration": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Workflow:jsonld-Get"
              }
            ]
          },
          "firstTimeSetupPassed": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "integrationType": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "passive": {
            "readOnly": true,
            "type": "boolean"
          },
          "remote": {
            "readOnly": true,
            "type": "boolean"
          },
          "firstTimeSetupRequired": {
            "readOnly": true,
            "type": "boolean"
          },
          "runInProgress": {
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "Workflow:jsonld-Getc": {
        "type": "object",
        "required": [
          "title",
          "type",
          "enabled",
          "period"
        ],
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "lastRunDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "period": {
            "description": "applies only to out",
            "type": "string"
          },
          "integration": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Workflow:jsonld-Getc"
              }
            ]
          },
          "firstTimeSetupPassed": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "integrationType": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "passive": {
            "readOnly": true,
            "type": "boolean"
          },
          "remote": {
            "readOnly": true,
            "type": "boolean"
          },
          "firstTimeSetupRequired": {
            "readOnly": true,
            "type": "boolean"
          },
          "runInProgress": {
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "Workflow:jsonld-Post": {
        "type": "object",
        "required": [
          "title",
          "type",
          "workspace",
          "enabled",
          "period"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string"
          },
          "workspace": {
            "type": "string",
            "format": "iri-reference"
          },
          "credentials": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Credentials:jsonld-Post"
              }
            ]
          },
          "notificationEmails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enabled": {
            "type": "boolean"
          },
          "period": {
            "description": "applies only to out",
            "type": "string"
          },
          "integration": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Workflow:jsonld-Post"
              }
            ]
          },
          "firstTimeSetupPassed": {
            "type": "boolean"
          }
        }
      },
      "Workflow:jsonld-Put": {
        "type": "object",
        "required": [
          "title",
          "type",
          "workspace",
          "enabled",
          "period"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string"
          },
          "workspace": {
            "type": "string",
            "format": "iri-reference"
          },
          "credentials": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "notificationEmails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enabled": {
            "type": "boolean"
          },
          "period": {
            "description": "applies only to out",
            "type": "string"
          },
          "integration": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Workflow:jsonld-Put"
              }
            ]
          },
          "firstTimeSetupPassed": {
            "type": "boolean"
          }
        }
      },
      "WorkflowRun": {
        "type": "object",
        "properties": {
          "workspace": {
            "readOnly": true,
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "workflow": {
            "type": "string",
            "format": "iri-reference"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "duration": {
            "type": "integer",
            "nullable": true
          },
          "log": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleted": {
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "WorkflowRun-Get": {
        "type": "object",
        "properties": {
          "workflow": {
            "type": "string",
            "format": "iri-reference"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "duration": {
            "type": "integer",
            "nullable": true
          },
          "log": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "WorkflowRun-Getc": {
        "type": "object",
        "properties": {
          "workflow": {
            "type": "string",
            "format": "iri-reference"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "duration": {
            "type": "integer",
            "nullable": true
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "WorkflowRun:jsonld": {
        "type": "object",
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "workspace": {
            "readOnly": true,
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "workflow": {
            "type": "string",
            "format": "iri-reference"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "duration": {
            "type": "integer",
            "nullable": true
          },
          "log": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleted": {
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "WorkflowRun:jsonld-Get": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "workflow": {
            "type": "string",
            "format": "iri-reference"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "duration": {
            "type": "integer",
            "nullable": true
          },
          "log": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "WorkflowRun:jsonld-Getc": {
        "type": "object",
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "workflow": {
            "type": "string",
            "format": "iri-reference"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "duration": {
            "type": "integer",
            "nullable": true
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Workspace-Get": {
        "type": "object",
        "required": [
          "team",
          "title",
          "defaultTrackingPage"
        ],
        "properties": {
          "team": {
            "type": "string",
            "format": "iri-reference"
          },
          "title": {
            "type": "string"
          },
          "defaultTrackingPage": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "shipmentsCount": {
            "type": "integer",
            "nullable": true
          },
          "workflowsCount": {
            "type": "integer",
            "nullable": true
          },
          "workflowsOrder": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logo": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Media-Get"
              }
            ]
          },
          "emailSettings": {
            "$ref": "#\/components\/schemas\/EmailSettings-Get"
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Workspace-Getp": {
        "type": "object",
        "required": [
          "team",
          "title",
          "defaultTrackingPage"
        ],
        "properties": {
          "team": {
            "$ref": "#\/components\/schemas\/Team-Getp"
          },
          "title": {
            "type": "string"
          },
          "defaultTrackingPage": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "shipmentsCount": {
            "type": "integer",
            "nullable": true
          },
          "workflowsCount": {
            "type": "integer",
            "nullable": true
          },
          "workflowsOrder": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logo": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Media-Getp"
              }
            ]
          },
          "emailSettings": {
            "$ref": "#\/components\/schemas\/EmailSettings-Getp"
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Workspace-Post": {
        "type": "object",
        "required": [
          "team",
          "title",
          "defaultTrackingPage"
        ],
        "properties": {
          "team": {
            "$ref": "#\/components\/schemas\/Team-Post"
          },
          "title": {
            "type": "string"
          },
          "defaultTrackingPage": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/TrackingPage-Post"
              }
            ]
          },
          "workflowsOrder": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logo": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "emailSettings": {
            "$ref": "#\/components\/schemas\/EmailSettings-Post"
          }
        }
      },
      "Workspace-Put": {
        "type": "object",
        "required": [
          "title",
          "defaultTrackingPage"
        ],
        "properties": {
          "title": {
            "type": "string"
          },
          "defaultTrackingPage": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/TrackingPage-Put"
              }
            ]
          },
          "workflowsOrder": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logo": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "emailSettings": {
            "$ref": "#\/components\/schemas\/EmailSettings-Put"
          }
        }
      },
      "Workspace-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription": {
        "type": "object",
        "required": [
          "team",
          "title",
          "defaultTrackingPage"
        ],
        "properties": {
          "team": {
            "$ref": "#\/components\/schemas\/Team-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription"
          },
          "title": {
            "type": "string"
          },
          "defaultTrackingPage": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "shipmentsCount": {
            "type": "integer",
            "nullable": true
          },
          "workflowsCount": {
            "type": "integer",
            "nullable": true
          },
          "workflowsOrder": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logo": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Media-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription"
              }
            ]
          },
          "emailSettings": {
            "$ref": "#\/components\/schemas\/EmailSettings-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription"
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Workspace:jsonld-Get": {
        "type": "object",
        "required": [
          "team",
          "title",
          "defaultTrackingPage"
        ],
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "team": {
            "type": "string",
            "format": "iri-reference"
          },
          "title": {
            "type": "string"
          },
          "defaultTrackingPage": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "shipmentsCount": {
            "type": "integer",
            "nullable": true
          },
          "workflowsCount": {
            "type": "integer",
            "nullable": true
          },
          "workflowsOrder": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logo": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Media:jsonld-Get"
              }
            ]
          },
          "emailSettings": {
            "$ref": "#\/components\/schemas\/EmailSettings:jsonld-Get"
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Workspace:jsonld-Getp": {
        "type": "object",
        "required": [
          "team",
          "title",
          "defaultTrackingPage"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "team": {
            "$ref": "#\/components\/schemas\/Team:jsonld-Getp"
          },
          "title": {
            "type": "string"
          },
          "defaultTrackingPage": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "shipmentsCount": {
            "type": "integer",
            "nullable": true
          },
          "workflowsCount": {
            "type": "integer",
            "nullable": true
          },
          "workflowsOrder": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logo": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Media:jsonld-Getp"
              }
            ]
          },
          "emailSettings": {
            "$ref": "#\/components\/schemas\/EmailSettings:jsonld-Getp"
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Workspace:jsonld-Post": {
        "type": "object",
        "required": [
          "team",
          "title",
          "defaultTrackingPage"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "team": {
            "$ref": "#\/components\/schemas\/Team:jsonld-Post"
          },
          "title": {
            "type": "string"
          },
          "defaultTrackingPage": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/TrackingPage:jsonld-Post"
              }
            ]
          },
          "workflowsOrder": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logo": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "emailSettings": {
            "$ref": "#\/components\/schemas\/EmailSettings:jsonld-Post"
          }
        }
      },
      "Workspace:jsonld-Put": {
        "type": "object",
        "required": [
          "title",
          "defaultTrackingPage"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "defaultTrackingPage": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/TrackingPage:jsonld-Put"
              }
            ]
          },
          "workflowsOrder": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logo": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "emailSettings": {
            "$ref": "#\/components\/schemas\/EmailSettings:jsonld-Put"
          }
        }
      },
      "Workspace:jsonld-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription": {
        "type": "object",
        "required": [
          "team",
          "title",
          "defaultTrackingPage"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "team": {
            "$ref": "#\/components\/schemas\/Team:jsonld-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription"
          },
          "title": {
            "type": "string"
          },
          "defaultTrackingPage": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "shipmentsCount": {
            "type": "integer",
            "nullable": true
          },
          "workflowsCount": {
            "type": "integer",
            "nullable": true
          },
          "workflowsOrder": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logo": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Media:jsonld-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription"
              }
            ]
          },
          "emailSettings": {
            "$ref": "#\/components\/schemas\/EmailSettings:jsonld-getShopifyRegisterResponse_getUser_getWorkspace_getMediaShort_getTeam_getEntitlement_getSubscription"
          },
          "id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "WorkspaceMember-Get": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "workspace": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Workspace-Get"
              }
            ]
          },
          "accessLevel": {
            "type": "string",
            "nullable": true
          },
          "workspaceId": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "teamAdmin": {
            "readOnly": true,
            "type": "boolean"
          },
          "memberName": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "memberPhoto": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "memberEmail": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "memberLastLoggedIn": {
            "readOnly": true,
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "accessLevel"
        ]
      },
      "WorkspaceMember-Post": {
        "type": "object",
        "required": [
          "accessLevel"
        ],
        "properties": {
          "accessLevel": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WorkspaceMember:jsonld-Get": {
        "type": "object",
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "workspace": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#\/components\/schemas\/Workspace:jsonld-Get"
              }
            ]
          },
          "accessLevel": {
            "type": "string",
            "nullable": true
          },
          "workspaceId": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "teamAdmin": {
            "readOnly": true,
            "type": "boolean"
          },
          "memberName": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "memberPhoto": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "memberEmail": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "memberLastLoggedIn": {
            "readOnly": true,
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "accessLevel"
        ]
      },
      "WorkspaceMember:jsonld-Post": {
        "type": "object",
        "required": [
          "accessLevel"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "accessLevel": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WorkspacePermission": {
        "type": "object",
        "properties": {
          "workspaceId": {
            "type": "string",
            "nullable": true
          },
          "accessLevel": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WorkspacePermission:jsonld": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "workspaceId": {
            "type": "string",
            "nullable": true
          },
          "accessLevel": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WorkspacePermissionsChange": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/WorkspacePermission"
            }
          }
        }
      },
      "WorkspacePermissionsChange:jsonld": {
        "type": "object",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#\/components\/schemas\/WorkspacePermission:jsonld"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "oauth": {
        "type": "oauth2",
        "description": "OAuth 2.0 password Grant",
        "flows": {
          "password": {
            "tokenUrl": "\/oauth\/v2\/token",
            "authorizationUrl": "\/oauth\/v2\/auth",
            "scopes": []
          }
        }
      }
    }
  }
}